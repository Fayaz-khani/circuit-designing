CCS PCH C Compiler, Version 4.013, 5967               03-Jun-22 01:42

               Filename: C:\Users\ST\Downloads\New folder\file 1 .lst

               ROM used: 19268 bytes (59%)
                         Largest free fragment is 13496
               RAM used: 214 (14%) at main() level
                         260 (17%) worst case
               Stack:    8 worst case (6 in main + 2 for interrupts)

*
0000:  GOTO   43A6
*
0008:  MOVWF  05
000A:  MOVFF  FD8,06
000E:  MOVFF  FE0,07
0012:  MOVLB  0
0014:  MOVFF  FE9,0D
0018:  MOVFF  FEA,08
001C:  MOVFF  FE1,09
0020:  MOVFF  FE2,0A
0024:  MOVFF  FD9,0B
0028:  MOVFF  FDA,0C
002C:  MOVFF  FF3,14
0030:  MOVFF  FF4,15
0034:  MOVFF  FFA,16
0038:  MOVFF  00,0F
003C:  MOVFF  01,10
0040:  MOVFF  02,11
0044:  MOVFF  03,12
0048:  MOVFF  04,13
004C:  BTFSS  F9D.1
004E:  GOTO   0058
0052:  BTFSC  F9E.1
0054:  GOTO   04F0
0058:  BTFSS  FF2.3
005A:  GOTO   0064
005E:  BTFSC  FF2.0
0060:  GOTO   0428
0064:  BTFSS  F9D.5
0066:  GOTO   0070
006A:  BTFSC  F9E.5
006C:  GOTO   051C
0070:  MOVFF  0F,00
0074:  MOVFF  10,01
0078:  MOVFF  11,02
007C:  MOVFF  12,03
0080:  MOVFF  13,04
0084:  BSF    0E.7
0086:  MOVFF  0D,FE9
008A:  MOVFF  08,FEA
008E:  MOVFF  09,FE1
0092:  MOVFF  0A,FE2
0096:  MOVFF  0B,FD9
009A:  MOVFF  0C,FDA
009E:  MOVFF  14,FF3
00A2:  MOVFF  15,FF4
00A6:  MOVFF  16,FFA
00AA:  MOVF   05,W
00AC:  MOVFF  07,FE0
00B0:  MOVFF  06,FD8
00B4:  RETFIE 0
.................... #include <18F452.h> 
.................... //////// Standard Header file for the PIC18F452 device //////////////// 
.................... #device PIC18F452 
.................... #list 
....................  
.................... #fuses HS,NOWDT,PROTECT,NOLVP 
.................... //#use delay(clock=20000000) 
.................... #use delay(clock=12000000) 
*
0FF8:  CLRF   FEA
0FFA:  MOVLW  D7
0FFC:  MOVWF  FE9
0FFE:  MOVF   FEF,W
1000:  BZ    101E
1002:  MOVLW  03
1004:  MOVWF  01
1006:  CLRF   00
1008:  DECFSZ 00,F
100A:  BRA    1008
100C:  DECFSZ 01,F
100E:  BRA    1006
1010:  MOVLW  E3
1012:  MOVWF  00
1014:  DECFSZ 00,F
1016:  BRA    1014
1018:  NOP   
101A:  DECFSZ FEF,F
101C:  BRA    1002
101E:  RETLW  00
.................... #use rs232(baud=19200, xmit=PIN_C6, rcv=PIN_C7,ERRORS) 
*
0504:  BTFSS  F9E.5
0506:  BRA    0504
0508:  MOVFF  FAB,19
050C:  MOVFF  FAE,01
0510:  BTFSS  19.1
0512:  BRA    0518
0514:  BCF    FAB.4
0516:  BSF    FAB.4
0518:  GOTO   0534 (RETURN)
....................  
.................... #use fast_io(A) 
.................... #use fast_io(B) 
.................... #use fast_io(C) 
.................... #use fast_io(D) 
.................... #use fast_io(E) 
....................  
.................... #define RTC_SDA  PIN_C3 
.................... #define RTC_SCL  PIN_C4 
....................  
.................... #define _b        PIN_A0 
.................... #define _a        PIN_A1 
.................... #define _clock_d  PIN_A3   // Clock    4094 
.................... #define _dat_d    PIN_A2   // Data     4094 
.................... #define _strob_d  PIN_A4   // Strobe   4094 
.................... #define _dots     PIN_A5 
....................  
.................... #define _oe       PIN_E0 
.................... #define _irs      PIN_E1 
.................... #define _bal      PIN_E2 
....................  
.................... #define _wapda    PIN_C1 
.................... #define _noz      PIN_C2 
.................... //#define _scl      PIN_C3 
.................... //#define _sda      PIN_C4 
.................... //#define _dat_k    PIN_C5   // Data     4094 
....................  
.................... #define  _tm      PIN_D0 
.................... //#define _pluser   PIN_D0 
.................... #define _51c      PIN_D1 
.................... //#define _clock_k  PIN_D2 
.................... #define _51_out   PIN_D3 
.................... //#define _strob_k  PIN_D4 
.................... #define _tm2      PIN_D5 
.................... #define _sp2      PIN_D6 
.................... #define _sp3      PIN_D7 
....................  
....................  
.................... #define  _p_busy  PIN_C0 
.................... #define  _4066    PIN_B0 
.................... #define  _s_skip  PIN_B1 
.................... #define  _led     PIN_B2 
.................... #define  _buz     PIN_B3 
.................... #define  _motor   PIN_B4 
.................... #define  _sov1    PIN_B5 
.................... #define  _sov2    PIN_B6 
.................... #define  _encoder PIN_B7 
....................  
.................... #define  _clear       15 
....................  
.................... #define  _print_off    output_high(_4066) 
.................... #define  _print_on    output_low(_4066) 
....................  
....................  
.................... #define  _buz_on   output_low(_buz) 
.................... #define  _buz_off    output_high(_buz) 
.................... #define  _motor_on   output_low(_motor) 
.................... #define  _motor_off  output_high(_motor) 
.................... #define  _sov1_on   output_low(_sov1) 
.................... #define  _sov1_off  output_high(_sov1) 
.................... #define  _sov2_on   output_low(_sov2) 
.................... #define  _sov2_off  output_high(_sov2) 
.................... #define  _totelizer_on     output_low(_tm) 
.................... #define  _totelizer_off    output_high(_tm) 
.................... #define  _tm2_off     output_low(_tm2) 
.................... #define  _tm2_on    output_high(_tm2) 
....................  
.................... #define  _noz_off  input(_noz) 
.................... #define  _noz_on  !input(_noz) 
....................  
.................... #define  _kror       10000000 
.................... #define  _ten_lakh   1000000 
.................... #define  _lakh       100000 
.................... #define  _ten_th     10000 
.................... #define  _thou       1000 
.................... #define  _hund       100 
.................... #define  _ten        10 
....................  
.................... static unsigned int8 day,month,yr,hrs,min,sec,dow; 
.................... static unsigned int8 _code_seq,_sub_id,_code_block,_skip_chk,_skip_var; 
.................... static short _clear_fl,_p_deci_fl,_deci_fl,_skip_fl,_disk_fl; 
.................... static short _sk_l_fl,_p_fl,_sk_sw_fl; 
.................... static int16 _pulses,_factor,_code_id,_ok_rate ; 
.................... static unsigned int8 _v_first_val,_rate_fact,_skip_liters,_ok_liters,_key2; 
.................... static unsigned int8 _p1,_p2,_p3,_p4,_p5,_P,_l,_C,_t,_r,_s,_add; 
.................... static unsigned int8 _num,_code_val,_sov_cut,_skip_val,_first_val,_skip_factor; 
.................... static int16  _rate,_skip_rupee,_m_code; 
.................... static int32 _rupee,_liters,_price,_petrol,_totel,_last_fill,_last_bill,_date,_to_val,_count; 
.................... static int32 _slips,_td,_hang,_dd1d,_dd2d,_totel2; 
.................... static unsigned int8  _dig[22],int_count,_d_count,_var1,_key1; 
.................... static short _noz_fl,_encoder_st,_on_fl,_incr_fl,_chk_fill,_price_fl,_oil_fl,_tc_fl,_pl_fl; 
.................... static short _skip_at_fl,_liter_fl,_change_fl,_rx_fl,_printer_fl,_motor_fl,am_pm; 
.................... static unsigned int8 _lasts,_tp,_motor_val,_rs232[5],_ir; 
....................  
.................... //static unsigned  int8 seg[20]={63,6,91,79,102,109,125,7,127,111,0,115,56,121,80,64,120,57,92,94}; 
.................... // 0 1 2 3 4 5 6 7 8 9  P L E r - C o d 
.................... static unsigned  int8 seg[16]={0,1,4,5,8,9,12,13,2,3,6,7,10,11,14,15}; 
.................... //0 1 2 3 4 5 6 7 8 9 L H P A - sp 
.................... static unsigned  int8 seg_p[16]={0,2,1,3,8,10,9,11,4,6,5,7,12,14,13,15}; 
.................... //0 1 2 3 4 5 6 7 8 9 L H P A - sp 
....................  
.................... #define  _d1     _dig[10] 
.................... #define  _d2     _dig[7] 
.................... #define  _d3     _dig[8] 
.................... #define  _d4     _dig[13] 
.................... #define  _d5     _dig[14] 
.................... #define  _d6     _dig[11] 
.................... #define  _d7     _dig[12] 
.................... #define  _d8     _dig[6] 
....................  
.................... #define  _d9     _dig[9] 
.................... #define  _d11     _dig[15] 
.................... #define  _d10     _dig[16] 
.................... #define  _d12    _dig[17] 
.................... #define  _d13     _dig[2] 
.................... #define  _d14     _dig[3] 
.................... #define  _d15     _dig[5] 
.................... #define  _d16     _dig[4] 
.................... #define  _d17     _dig[18] 
.................... #define  _d18     _dig[19] 
.................... #define  _d19     _dig[20] 
.................... #define  _d20     _dig[21] 
.................... #define  _d21     _dig[1] 
.................... #define  _d22     _dig[0] 
....................  
.................... #include "keypad.c" 
.................... #define _strob    PIN_D4   // Strobe   4094 
.................... #define _dat      PIN_C5   // Data     4094 
.................... #define _clock    PIN_D2   // Clock    4094 
....................  
.................... static int8 j; 
.................... void _keys(int8 __data){ 
....................    output_low(_strob); 
*
285A:  BCF    F8C.4
....................   for (j=0;j<=7;++j){ 
285C:  CLRF   xD1
285E:  MOVF   xD1,W
2860:  SUBLW  07
2862:  BNC   2882
....................       if(bit_test(__data,7)){ 
2864:  BTFSS  xD9.7
2866:  BRA    286C
....................          output_high(_dat); 
2868:  BSF    F8B.5
....................       } 
....................       else{ 
286A:  BRA    286E
....................          output_low(_dat); 
286C:  BCF    F8B.5
....................       } 
....................       rotate_left(&__data,1); 
286E:  RLNCF  xD9,F
....................       output_low(_clock); 
2870:  BCF    F8C.2
....................       delay_us(10); 
2872:  MOVLW  09
2874:  MOVWF  00
2876:  DECFSZ 00,F
2878:  BRA    2876
287A:  BRA    287C
....................       output_high(_clock); 
287C:  BSF    F8C.2
....................    } 
287E:  INCF   xD1,F
2880:  BRA    285E
.................... //   output_low(_strob); 
.................... //delay_us(10); 
.................... } 
2882:  GOTO   288C (RETURN)
.................... //______________________________________________________________________________ 
.................... void _key_id(int8 _v1 ,int8 _v3) { 
.................... _keys(_v1); 
2886:  MOVFF  D7,D9
288A:  BRA    285A
.................... output_high(_strob); 
288C:  BSF    F8C.4
....................    if(_v3 == 0){ 
288E:  MOVF   xD8,F
2890:  BNZ   2898
....................    output_high(_51c); 
2892:  BSF    F8C.1
....................    output_low(_clock); 
2894:  BCF    F8C.2
....................    output_low(_dat); 
2896:  BCF    F8B.5
....................    } 
....................    if(_v3 == 1){ 
2898:  DECFSZ xD8,W
289A:  BRA    28A2
....................    output_high(_51c); 
289C:  BSF    F8C.1
....................    output_low(_clock); 
289E:  BCF    F8C.2
....................    output_high(_dat); 
28A0:  BSF    F8B.5
....................    } 
....................    if(_v3 == 2){ 
28A2:  MOVF   xD8,W
28A4:  SUBLW  02
28A6:  BNZ   28AE
....................    output_high(_51c); 
28A8:  BSF    F8C.1
....................    output_high(_clock); 
28AA:  BSF    F8C.2
....................    output_high(_dat); 
28AC:  BSF    F8B.5
....................    } 
.................... } 
28AE:  RETLW  00
....................  
.................... ////////////////////////////////////////////////////// 
.................... void scan_keypad(){ 
.................... int8 _k; 
.................... _key1 = 0; 
28B0:  CLRF   xA5
.................... for (_k=0;_k<3;++_k){ 
28B2:  CLRF   xD6
28B4:  MOVF   xD6,W
28B6:  SUBLW  02
28B8:  BNC   28E8
.................... _key_id(253,_k); 
28BA:  MOVLW  FD
28BC:  MOVWF  xD7
28BE:  MOVFF  D6,D8
28C2:  RCALL  2886
.................... if(!input(_51_out)){ 
28C4:  BTFSC  F83.3
28C6:  BRA    28E4
.................... if(_k == 0)_key1 = 13;//1 
28C8:  MOVF   xD6,F
28CA:  BNZ   28D0
28CC:  MOVLW  0D
28CE:  MOVWF  xA5
.................... if(_k == 1)_key1 = 10; //2 
28D0:  DECFSZ xD6,W
28D2:  BRA    28D8
28D4:  MOVLW  0A
28D6:  MOVWF  xA5
.................... if(_k == 2)_key1 = 18; //3 
28D8:  MOVF   xD6,W
28DA:  SUBLW  02
28DC:  BNZ   28E2
28DE:  MOVLW  12
28E0:  MOVWF  xA5
.................... goto _return; 
28E2:  BRA    2A2C
.................... } 
.................... } 
28E4:  INCF   xD6,F
28E6:  BRA    28B4
.................... for (_k=0;_k<3;++_k){ 
28E8:  CLRF   xD6
28EA:  MOVF   xD6,W
28EC:  SUBLW  02
28EE:  BNC   291E
.................... _key_id(251,_k); 
28F0:  MOVLW  FB
28F2:  MOVWF  xD7
28F4:  MOVFF  D6,D8
28F8:  RCALL  2886
.................... if(!input(_51_out)){ 
28FA:  BTFSC  F83.3
28FC:  BRA    291A
.................... if(_k == 0)_key1 = 3; //4 
28FE:  MOVF   xD6,F
2900:  BNZ   2906
2902:  MOVLW  03
2904:  MOVWF  xA5
.................... if(_k == 1)_key1 = 12; //5 
2906:  DECFSZ xD6,W
2908:  BRA    290E
290A:  MOVLW  0C
290C:  MOVWF  xA5
.................... if(_k == 2)_key1 = 11; //6 
290E:  MOVF   xD6,W
2910:  SUBLW  02
2912:  BNZ   2918
2914:  MOVLW  0B
2916:  MOVWF  xA5
.................... goto _return; 
2918:  BRA    2A2C
.................... } 
.................... } 
291A:  INCF   xD6,F
291C:  BRA    28EA
.................... for (_k=0;_k<3;++_k){ 
291E:  CLRF   xD6
2920:  MOVF   xD6,W
2922:  SUBLW  02
2924:  BNC   2954
.................... _key_id(247,_k); 
2926:  MOVLW  F7
2928:  MOVWF  xD7
292A:  MOVFF  D6,D8
292E:  RCALL  2886
.................... if(!input(_51_out)){ 
2930:  BTFSC  F83.3
2932:  BRA    2950
.................... if(_k == 0)_key1 = 6; //7 
2934:  MOVF   xD6,F
2936:  BNZ   293C
2938:  MOVLW  06
293A:  MOVWF  xA5
.................... if(_k == 1)_key1 = 9; //8 
293C:  DECFSZ xD6,W
293E:  BRA    2944
2940:  MOVLW  09
2942:  MOVWF  xA5
.................... if(_k == 2)_key1 = 16; //9 
2944:  MOVF   xD6,W
2946:  SUBLW  02
2948:  BNZ   294E
294A:  MOVLW  10
294C:  MOVWF  xA5
.................... goto _return; 
294E:  BRA    2A2C
.................... } 
.................... } 
2950:  INCF   xD6,F
2952:  BRA    2920
.................... for (_k=0;_k<3;++_k){ 
2954:  CLRF   xD6
2956:  MOVF   xD6,W
2958:  SUBLW  02
295A:  BNC   298A
.................... _key_id(239,_k); 
295C:  MOVLW  EF
295E:  MOVWF  xD7
2960:  MOVFF  D6,D8
2964:  RCALL  2886
.................... if(!input(_51_out)){ 
2966:  BTFSC  F83.3
2968:  BRA    2986
.................... if(_k == 0)_key1 = 4; //10 
296A:  MOVF   xD6,F
296C:  BNZ   2972
296E:  MOVLW  04
2970:  MOVWF  xA5
.................... if(_k == 1)_key1 = 15; //11 
2972:  DECFSZ xD6,W
2974:  BRA    297A
2976:  MOVLW  0F
2978:  MOVWF  xA5
.................... if(_k == 2)_key1 = 20; //12 
297A:  MOVF   xD6,W
297C:  SUBLW  02
297E:  BNZ   2984
2980:  MOVLW  14
2982:  MOVWF  xA5
.................... goto _return; 
2984:  BRA    2A2C
.................... } 
....................  
.................... } 
2986:  INCF   xD6,F
2988:  BRA    2956
.................... for (_k=0;_k<3;++_k){ 
298A:  CLRF   xD6
298C:  MOVF   xD6,W
298E:  SUBLW  02
2990:  BNC   29C0
.................... _key_id(223,_k); 
2992:  MOVLW  DF
2994:  MOVWF  xD7
2996:  MOVFF  D6,D8
299A:  RCALL  2886
.................... if(!input(_51_out)){ 
299C:  BTFSC  F83.3
299E:  BRA    29BC
.................... if(_k == 0)_key1 = 1; //13 
29A0:  MOVF   xD6,F
29A2:  BNZ   29A8
29A4:  MOVLW  01
29A6:  MOVWF  xA5
.................... if(_k == 1)_key1 = 14; 
29A8:  DECFSZ xD6,W
29AA:  BRA    29B0
29AC:  MOVLW  0E
29AE:  MOVWF  xA5
.................... if(_k == 2)_key1 = 21; 
29B0:  MOVF   xD6,W
29B2:  SUBLW  02
29B4:  BNZ   29BA
29B6:  MOVLW  15
29B8:  MOVWF  xA5
.................... goto _return; 
29BA:  BRA    2A2C
.................... } 
.................... } 
29BC:  INCF   xD6,F
29BE:  BRA    298C
.................... for (_k=0;_k<3;++_k){ 
29C0:  CLRF   xD6
29C2:  MOVF   xD6,W
29C4:  SUBLW  02
29C6:  BNC   29F6
.................... _key_id(191,_k); 
29C8:  MOVLW  BF
29CA:  MOVWF  xD7
29CC:  MOVFF  D6,D8
29D0:  RCALL  2886
.................... if(!input(_51_out)){ 
29D2:  BTFSC  F83.3
29D4:  BRA    29F2
.................... if(_k == 0)_key1 = 5; //16 
29D6:  MOVF   xD6,F
29D8:  BNZ   29DE
29DA:  MOVLW  05
29DC:  MOVWF  xA5
.................... if(_k == 1)_key1 = 7; // 
29DE:  DECFSZ xD6,W
29E0:  BRA    29E6
29E2:  MOVLW  07
29E4:  MOVWF  xA5
.................... if(_k == 2)_key1 = 17; // 
29E6:  MOVF   xD6,W
29E8:  SUBLW  02
29EA:  BNZ   29F0
29EC:  MOVLW  11
29EE:  MOVWF  xA5
.................... goto _return; 
29F0:  BRA    2A2C
.................... } 
.................... } 
29F2:  INCF   xD6,F
29F4:  BRA    29C2
.................... for (_k=0;_k<3;++_k){ 
29F6:  CLRF   xD6
29F8:  MOVF   xD6,W
29FA:  SUBLW  02
29FC:  BNC   2A2C
.................... _key_id(127,_k); 
29FE:  MOVLW  7F
2A00:  MOVWF  xD7
2A02:  MOVFF  D6,D8
2A06:  RCALL  2886
.................... if(!input(_51_out)){ 
2A08:  BTFSC  F83.3
2A0A:  BRA    2A28
.................... if(_k == 0)_key1 = 2; //19 
2A0C:  MOVF   xD6,F
2A0E:  BNZ   2A14
2A10:  MOVLW  02
2A12:  MOVWF  xA5
.................... if(_k == 1)_key1 = 8; // 
2A14:  DECFSZ xD6,W
2A16:  BRA    2A1C
2A18:  MOVLW  08
2A1A:  MOVWF  xA5
.................... if(_k == 2)_key1 = 19; // 
2A1C:  MOVF   xD6,W
2A1E:  SUBLW  02
2A20:  BNZ   2A26
2A22:  MOVLW  13
2A24:  MOVWF  xA5
.................... goto _return; 
2A26:  BRA    2A2C
.................... } 
.................... } 
2A28:  INCF   xD6,F
2A2A:  BRA    29F8
.................... _return: 
.................... if(!input(_51_out)){ 
2A2C:  BTFSC  F83.3
2A2E:  BRA    2A4A
....................    _buz_on; 
2A30:  BCF    F8A.3
....................    delay_ms(20); 
2A32:  MOVLW  14
2A34:  MOVWF  xD7
2A36:  CALL   0FF8
.................... _kb: 
.................... delay_ms(10); 
2A3A:  MOVLW  0A
2A3C:  MOVWF  xD7
2A3E:  CALL   0FF8
.................... if(!input(_51_out))goto _kb; 
2A42:  BTFSC  F83.3
2A44:  BRA    2A48
2A46:  BRA    2A3A
.................... _buz_off; 
2A48:  BSF    F8A.3
.................... } 
.................... } 
2A4A:  RETLW  00
....................  
....................  
....................  
.................... #include "ds1307.c" 
....................  
.................... #use i2c(master, sda=RTC_SDA, scl=RTC_SCL) 
*
0632:  MOVLW  08
0634:  MOVWF  01
0636:  MOVLW  02
0638:  MOVWF  00
063A:  DECFSZ 00,F
063C:  BRA    063A
063E:  BCF    F8B.4
0640:  BCF    F94.4
0642:  MOVLW  02
0644:  MOVWF  00
0646:  DECFSZ 00,F
0648:  BRA    0646
064A:  RLCF   xDF,F
064C:  BCF    F8B.3
064E:  BTFSC  FD8.0
0650:  BSF    F94.3
0652:  BTFSS  FD8.0
0654:  BCF    F94.3
0656:  BSF    F94.4
0658:  BTFSS  F82.4
065A:  BRA    0658
065C:  DECFSZ 01,F
065E:  BRA    0636
0660:  MOVLW  02
0662:  MOVWF  00
0664:  DECFSZ 00,F
0666:  BRA    0664
0668:  BCF    F8B.4
066A:  BCF    F94.4
066C:  NOP   
066E:  BSF    F94.3
0670:  MOVLW  02
0672:  MOVWF  00
0674:  DECFSZ 00,F
0676:  BRA    0674
0678:  MOVLW  02
067A:  MOVWF  00
067C:  DECFSZ 00,F
067E:  BRA    067C
0680:  BSF    F94.4
0682:  BTFSS  F82.4
0684:  BRA    0682
0686:  CLRF   01
0688:  MOVLW  02
068A:  MOVWF  00
068C:  DECFSZ 00,F
068E:  BRA    068C
0690:  BTFSC  F82.3
0692:  BSF    01.0
0694:  BCF    F8B.4
0696:  BCF    F94.4
0698:  BCF    F8B.3
069A:  BCF    F94.3
069C:  RETLW  00
069E:  MOVLW  08
06A0:  MOVWF  xD7
06A2:  MOVFF  00,D8
06A6:  BSF    F94.3
06A8:  MOVLW  02
06AA:  MOVWF  00
06AC:  DECFSZ 00,F
06AE:  BRA    06AC
06B0:  BSF    F94.4
06B2:  BTFSS  F82.4
06B4:  BRA    06B2
06B6:  BTFSC  F82.3
06B8:  BSF    FD8.0
06BA:  BTFSS  F82.3
06BC:  BCF    FD8.0
06BE:  RLCF   01,F
06C0:  MOVLW  02
06C2:  MOVWF  00
06C4:  DECFSZ 00,F
06C6:  BRA    06C4
06C8:  BCF    F94.4
06CA:  BCF    F8B.4
06CC:  DECFSZ xD7,F
06CE:  BRA    06A6
06D0:  BSF    F94.3
06D2:  MOVLW  02
06D4:  MOVWF  00
06D6:  DECFSZ 00,F
06D8:  BRA    06D6
06DA:  BCF    F8B.3
06DC:  MOVF   xD8,W
06DE:  BTFSS  FD8.2
06E0:  BCF    F94.3
06E2:  NOP   
06E4:  BSF    F94.4
06E6:  BTFSS  F82.4
06E8:  BRA    06E6
06EA:  MOVLW  02
06EC:  MOVWF  00
06EE:  DECFSZ 00,F
06F0:  BRA    06EE
06F2:  BCF    F8B.4
06F4:  BCF    F94.4
06F6:  MOVLW  02
06F8:  MOVWF  00
06FA:  DECFSZ 00,F
06FC:  BRA    06FA
06FE:  BCF    F8B.3
0700:  BCF    F94.3
0702:  RETLW  00
....................  
.................... BYTE bin2bcd(BYTE binary_value); 
.................... BYTE bcd2bin(BYTE bcd_value); 
....................  
.................... #define AM  0 
.................... #define PM  1 
.................... //am_pm = 0; 
....................  
.................... void ds1307_init(void) 
.................... { 
....................    BYTE seconds = 0; 
*
074E:  CLRF   xD2
....................    i2c_start(); 
0750:  BSF    F94.3
0752:  MOVLW  02
0754:  MOVWF  00
0756:  DECFSZ 00,F
0758:  BRA    0756
075A:  BSF    F94.4
075C:  MOVLW  02
075E:  MOVWF  00
0760:  DECFSZ 00,F
0762:  BRA    0760
0764:  BCF    F8B.3
0766:  BCF    F94.3
0768:  MOVLW  02
076A:  MOVWF  00
076C:  DECFSZ 00,F
076E:  BRA    076C
0770:  BCF    F8B.4
0772:  BCF    F94.4
....................    i2c_write(0xD0);      // WR to RTC 
0774:  MOVLW  D0
0776:  MOVWF  xDF
0778:  RCALL  0632
....................    i2c_write(0x00);      // REG 0 
077A:  CLRF   xDF
077C:  RCALL  0632
....................    i2c_start(); 
077E:  BSF    F94.3
0780:  MOVLW  02
0782:  MOVWF  00
0784:  DECFSZ 00,F
0786:  BRA    0784
0788:  BSF    F94.4
078A:  MOVLW  02
078C:  MOVWF  00
078E:  DECFSZ 00,F
0790:  BRA    078E
0792:  BTFSS  F82.4
0794:  BRA    0792
0796:  BCF    F8B.3
0798:  BCF    F94.3
079A:  MOVLW  02
079C:  MOVWF  00
079E:  DECFSZ 00,F
07A0:  BRA    079E
07A2:  BCF    F8B.4
07A4:  BCF    F94.4
....................    i2c_write(0xD1);      // RD from RTC 
07A6:  MOVLW  D1
07A8:  MOVWF  xDF
07AA:  RCALL  0632
....................    seconds = bcd2bin(i2c_read(0)); // Read current "seconds" in DS1307 
07AC:  CLRF   00
07AE:  RCALL  069E
07B0:  MOVFF  01,D3
07B4:  MOVFF  01,D8
07B8:  RCALL  0704
07BA:  MOVFF  01,D2
....................    i2c_stop(); 
07BE:  BCF    F94.3
07C0:  NOP   
07C2:  BSF    F94.4
07C4:  BTFSS  F82.4
07C6:  BRA    07C4
07C8:  MOVLW  02
07CA:  MOVWF  00
07CC:  DECFSZ 00,F
07CE:  BRA    07CC
07D0:  BRA    07D2
07D2:  NOP   
07D4:  BSF    F94.3
07D6:  MOVLW  02
07D8:  MOVWF  00
07DA:  DECFSZ 00,F
07DC:  BRA    07DA
....................    seconds &= 0x7F; 
07DE:  BCF    xD2.7
....................  
....................    delay_us(3); 
07E0:  MOVLW  02
07E2:  MOVWF  00
07E4:  DECFSZ 00,F
07E6:  BRA    07E4
07E8:  BRA    07EA
....................  
....................    i2c_start(); 
07EA:  BSF    F94.3
07EC:  MOVLW  02
07EE:  MOVWF  00
07F0:  DECFSZ 00,F
07F2:  BRA    07F0
07F4:  BSF    F94.4
07F6:  MOVLW  02
07F8:  MOVWF  00
07FA:  DECFSZ 00,F
07FC:  BRA    07FA
07FE:  BCF    F8B.3
0800:  BCF    F94.3
0802:  MOVLW  02
0804:  MOVWF  00
0806:  DECFSZ 00,F
0808:  BRA    0806
080A:  BCF    F8B.4
080C:  BCF    F94.4
....................    i2c_write(0xD0);      // WR to RTC 
080E:  MOVLW  D0
0810:  MOVWF  xDF
0812:  RCALL  0632
....................    i2c_write(0x00);      // REG 0 
0814:  CLRF   xDF
0816:  RCALL  0632
....................    i2c_write(bin2bcd(seconds));     // Start oscillator with current "seconds value 
0818:  MOVFF  D2,DD
081C:  RCALL  072A
081E:  MOVFF  01,D3
0822:  MOVFF  01,DF
0826:  RCALL  0632
....................    i2c_start(); 
0828:  BSF    F94.3
082A:  MOVLW  02
082C:  MOVWF  00
082E:  DECFSZ 00,F
0830:  BRA    082E
0832:  BSF    F94.4
0834:  MOVLW  02
0836:  MOVWF  00
0838:  DECFSZ 00,F
083A:  BRA    0838
083C:  BTFSS  F82.4
083E:  BRA    083C
0840:  BCF    F8B.3
0842:  BCF    F94.3
0844:  MOVLW  02
0846:  MOVWF  00
0848:  DECFSZ 00,F
084A:  BRA    0848
084C:  BCF    F8B.4
084E:  BCF    F94.4
....................    i2c_write(0xD0);      // WR to RTC 
0850:  MOVLW  D0
0852:  MOVWF  xDF
0854:  RCALL  0632
....................    i2c_write(0x07);      // Control Register 
0856:  MOVLW  07
0858:  MOVWF  xDF
085A:  RCALL  0632
....................    i2c_write(0x10);     // ENABLE squarewave output pin 
085C:  MOVLW  10
085E:  MOVWF  xDF
0860:  RCALL  0632
....................    i2c_stop(); 
0862:  BCF    F94.3
0864:  NOP   
0866:  BSF    F94.4
0868:  BTFSS  F82.4
086A:  BRA    0868
086C:  MOVLW  02
086E:  MOVWF  00
0870:  DECFSZ 00,F
0872:  BRA    0870
0874:  BRA    0876
0876:  NOP   
0878:  BSF    F94.3
087A:  MOVLW  02
087C:  MOVWF  00
087E:  DECFSZ 00,F
0880:  BRA    087E
....................  
.................... } 
0882:  GOTO   0F88 (RETURN)
....................  
....................  
.................... void write_DS1307(unsigned int8 address, unsigned int8 _data) 
.................... { 
....................    I2C_Start(); 
0886:  BSF    F94.3
0888:  MOVLW  02
088A:  MOVWF  00
088C:  DECFSZ 00,F
088E:  BRA    088C
0890:  BSF    F94.4
0892:  MOVLW  02
0894:  MOVWF  00
0896:  DECFSZ 00,F
0898:  BRA    0896
089A:  BCF    F8B.3
089C:  BCF    F94.3
089E:  MOVLW  02
08A0:  MOVWF  00
08A2:  DECFSZ 00,F
08A4:  BRA    08A2
08A6:  BCF    F8B.4
08A8:  BCF    F94.4
....................    I2C_Write(0xd0); 
08AA:  MOVLW  D0
08AC:  MOVWF  xDF
08AE:  RCALL  0632
....................    I2C_Write(address); 
08B0:  MOVFF  DD,DF
08B4:  RCALL  0632
....................    I2C_Write(_data); 
08B6:  MOVFF  DE,DF
08BA:  RCALL  0632
....................    I2C_Stop(); 
08BC:  BCF    F94.3
08BE:  NOP   
08C0:  BSF    F94.4
08C2:  BTFSS  F82.4
08C4:  BRA    08C2
08C6:  MOVLW  02
08C8:  MOVWF  00
08CA:  DECFSZ 00,F
08CC:  BRA    08CA
08CE:  BRA    08D0
08D0:  NOP   
08D2:  BSF    F94.3
08D4:  MOVLW  02
08D6:  MOVWF  00
08D8:  DECFSZ 00,F
08DA:  BRA    08D8
.................... } 
08DC:  GOTO   099E (RETURN)
.................... unsigned int8 read_ds1307(unsigned short address) { 
.................... unsigned int8 _data_; 
....................  
....................    I2C_Start(); 
....................    I2C_Write(0xd0);           // b0 is write 
....................    I2C_Write(address); 
....................    I2C_Start(); 
....................    I2C_Write(0xd1);           // b1 is read 
....................    _data_=I2C_Read();         // Read with NACK. 
....................    I2C_stop(); 
....................    return(_data_); 
.................... } 
.................... void ds1307_set_date_time(BYTE day, BYTE mth, BYTE year, BYTE dow, BYTE hr, BYTE min, BYTE sec) 
.................... { 
....................   sec &= 0x7F; 
08E0:  BCF    xDC.7
.................... //  hr &= 0x3F; 
....................   i2c_start(); 
08E2:  BSF    F94.3
08E4:  MOVLW  02
08E6:  MOVWF  00
08E8:  DECFSZ 00,F
08EA:  BRA    08E8
08EC:  BSF    F94.4
08EE:  MOVLW  02
08F0:  MOVWF  00
08F2:  DECFSZ 00,F
08F4:  BRA    08F2
08F6:  BCF    F8B.3
08F8:  BCF    F94.3
08FA:  MOVLW  02
08FC:  MOVWF  00
08FE:  DECFSZ 00,F
0900:  BRA    08FE
0902:  BCF    F8B.4
0904:  BCF    F94.4
....................   i2c_write(0xD0);            // I2C write address 
0906:  MOVLW  D0
0908:  MOVWF  xDF
090A:  RCALL  0632
....................   i2c_write(0x00);            // Start at REG 0 - Seconds 
090C:  CLRF   xDF
090E:  RCALL  0632
....................   i2c_write(bin2bcd(sec));      // REG 0 
0910:  MOVFF  DC,DD
0914:  RCALL  072A
0916:  MOVFF  01,DD
091A:  MOVFF  01,DF
091E:  RCALL  0632
....................   i2c_write(bin2bcd(min));      // REG 1 
0920:  MOVFF  DB,DD
0924:  RCALL  072A
0926:  MOVFF  01,DD
092A:  MOVFF  01,DF
092E:  RCALL  0632
....................   if (am_pm == 1) 
0930:  BTFSS  xA7.7
0932:  BRA    0942
....................   { 
....................    hr = bin2bcd(hr)| 0x60; 
0934:  MOVFF  DA,DD
0938:  RCALL  072A
093A:  MOVF   01,W
093C:  IORLW  60
093E:  MOVWF  xDA
....................   } 
....................   else 
0940:  BRA    094E
....................   { 
....................    hr = bin2bcd(hr)| 0x40; 
0942:  MOVFF  DA,DD
0946:  RCALL  072A
0948:  MOVF   01,W
094A:  IORLW  40
094C:  MOVWF  xDA
....................   } 
.................... //  printf("%x",hr); 
.................... //  WHILE(1); 
....................   i2c_write(hr);  // REG 2 
094E:  MOVFF  DA,DF
0952:  RCALL  0632
....................   i2c_write(bin2bcd(dow));      // REG 3 
0954:  MOVFF  D9,DD
0958:  RCALL  072A
095A:  MOVFF  01,DD
095E:  MOVFF  01,DF
0962:  RCALL  0632
....................   i2c_write(bin2bcd(day));      // REG 4 
0964:  MOVFF  D6,DD
0968:  RCALL  072A
096A:  MOVFF  01,DD
096E:  MOVFF  01,DF
0972:  RCALL  0632
....................   i2c_write(bin2bcd(mth));      // REG 5 
0974:  MOVFF  D7,DD
0978:  RCALL  072A
097A:  MOVFF  01,DD
097E:  MOVFF  01,DF
0982:  RCALL  0632
....................   i2c_write(bin2bcd(year));     // REG 6 
0984:  MOVFF  D8,DD
0988:  RCALL  072A
098A:  MOVFF  01,DD
098E:  MOVFF  01,DF
0992:  RCALL  0632
....................   write_DS1307(0X07, 0X10); 
0994:  MOVLW  07
0996:  MOVWF  xDD
0998:  MOVLW  10
099A:  MOVWF  xDE
099C:  BRA    0886
....................   //i2c_write(0x80);            // REG 7 - Disable squarewave output pin 
....................   i2c_stop(); 
099E:  BCF    F94.3
09A0:  NOP   
09A2:  BSF    F94.4
09A4:  BTFSS  F82.4
09A6:  BRA    09A4
09A8:  MOVLW  02
09AA:  MOVWF  00
09AC:  DECFSZ 00,F
09AE:  BRA    09AC
09B0:  BRA    09B2
09B2:  NOP   
09B4:  BSF    F94.3
09B6:  MOVLW  02
09B8:  MOVWF  00
09BA:  DECFSZ 00,F
09BC:  BRA    09BA
.................... } 
09BE:  RETLW  00
....................  
.................... void ds1307_get_date(BYTE &day, BYTE &mth, BYTE &year, BYTE &dow) 
.................... { 
....................   i2c_start(); 
09C0:  BSF    F94.3
09C2:  MOVLW  02
09C4:  MOVWF  00
09C6:  DECFSZ 00,F
09C8:  BRA    09C6
09CA:  BSF    F94.4
09CC:  MOVLW  02
09CE:  MOVWF  00
09D0:  DECFSZ 00,F
09D2:  BRA    09D0
09D4:  BCF    F8B.3
09D6:  BCF    F94.3
09D8:  MOVLW  02
09DA:  MOVWF  00
09DC:  DECFSZ 00,F
09DE:  BRA    09DC
09E0:  BCF    F8B.4
09E2:  BCF    F94.4
....................   i2c_write(0xD0); 
09E4:  MOVLW  D0
09E6:  MOVWF  xDF
09E8:  RCALL  0632
....................   i2c_write(0x03);            // Start at REG 3 - Day of week 
09EA:  MOVLW  03
09EC:  MOVWF  xDF
09EE:  RCALL  0632
....................   i2c_start(); 
09F0:  BSF    F94.3
09F2:  MOVLW  02
09F4:  MOVWF  00
09F6:  DECFSZ 00,F
09F8:  BRA    09F6
09FA:  BSF    F94.4
09FC:  MOVLW  02
09FE:  MOVWF  00
0A00:  DECFSZ 00,F
0A02:  BRA    0A00
0A04:  BTFSS  F82.4
0A06:  BRA    0A04
0A08:  BCF    F8B.3
0A0A:  BCF    F94.3
0A0C:  MOVLW  02
0A0E:  MOVWF  00
0A10:  DECFSZ 00,F
0A12:  BRA    0A10
0A14:  BCF    F8B.4
0A16:  BCF    F94.4
....................   i2c_write(0xD1); 
0A18:  MOVLW  D1
0A1A:  MOVWF  xDF
0A1C:  RCALL  0632
....................   dow  = bcd2bin(i2c_read() & 0x7f);   // REG 3 
0A1E:  MOVLW  01
0A20:  MOVWF  00
0A22:  RCALL  069E
0A24:  MOVF   01,W
0A26:  ANDLW  7F
0A28:  MOVWF  xD3
0A2A:  MOVWF  xD8
0A2C:  RCALL  0704
0A2E:  MOVFF  01,20
....................   day  = bcd2bin(i2c_read() & 0x3f);   // REG 4 
0A32:  MOVLW  01
0A34:  MOVWF  00
0A36:  RCALL  069E
0A38:  MOVF   01,W
0A3A:  ANDLW  3F
0A3C:  MOVWF  xD3
0A3E:  MOVWF  xD8
0A40:  RCALL  0704
0A42:  MOVFF  01,1A
....................   mth  = bcd2bin(i2c_read() & 0x1f);   // REG 5 
0A46:  MOVLW  01
0A48:  MOVWF  00
0A4A:  RCALL  069E
0A4C:  MOVF   01,W
0A4E:  ANDLW  1F
0A50:  MOVWF  xD3
0A52:  MOVWF  xD8
0A54:  RCALL  0704
0A56:  MOVFF  01,1B
....................   year = bcd2bin(i2c_read(0));            // REG 6 
0A5A:  CLRF   00
0A5C:  RCALL  069E
0A5E:  MOVFF  01,D2
0A62:  MOVFF  01,D8
0A66:  RCALL  0704
0A68:  MOVFF  01,1C
....................   i2c_stop(); 
0A6C:  BCF    F94.3
0A6E:  NOP   
0A70:  BSF    F94.4
0A72:  BTFSS  F82.4
0A74:  BRA    0A72
0A76:  MOVLW  02
0A78:  MOVWF  00
0A7A:  DECFSZ 00,F
0A7C:  BRA    0A7A
0A7E:  BRA    0A80
0A80:  NOP   
0A82:  BSF    F94.3
0A84:  MOVLW  02
0A86:  MOVWF  00
0A88:  DECFSZ 00,F
0A8A:  BRA    0A88
.................... } 
....................  
.................... void ds1307_get_time(BYTE &hr, BYTE &min, BYTE &sec) 
.................... { 
....................   i2c_start(); 
0A8C:  BSF    F94.3
0A8E:  MOVLW  02
0A90:  MOVWF  00
0A92:  DECFSZ 00,F
0A94:  BRA    0A92
0A96:  BSF    F94.4
0A98:  MOVLW  02
0A9A:  MOVWF  00
0A9C:  DECFSZ 00,F
0A9E:  BRA    0A9C
0AA0:  BCF    F8B.3
0AA2:  BCF    F94.3
0AA4:  MOVLW  02
0AA6:  MOVWF  00
0AA8:  DECFSZ 00,F
0AAA:  BRA    0AA8
0AAC:  BCF    F8B.4
0AAE:  BCF    F94.4
....................   i2c_write(0xD0); 
0AB0:  MOVLW  D0
0AB2:  MOVWF  xDF
0AB4:  RCALL  0632
....................   i2c_write(0x00);            // Start at REG 0 - Seconds 
0AB6:  CLRF   xDF
0AB8:  RCALL  0632
....................   i2c_start(); 
0ABA:  BSF    F94.3
0ABC:  MOVLW  02
0ABE:  MOVWF  00
0AC0:  DECFSZ 00,F
0AC2:  BRA    0AC0
0AC4:  BSF    F94.4
0AC6:  MOVLW  02
0AC8:  MOVWF  00
0ACA:  DECFSZ 00,F
0ACC:  BRA    0ACA
0ACE:  BTFSS  F82.4
0AD0:  BRA    0ACE
0AD2:  BCF    F8B.3
0AD4:  BCF    F94.3
0AD6:  MOVLW  02
0AD8:  MOVWF  00
0ADA:  DECFSZ 00,F
0ADC:  BRA    0ADA
0ADE:  BCF    F8B.4
0AE0:  BCF    F94.4
....................   i2c_write(0xD1); 
0AE2:  MOVLW  D1
0AE4:  MOVWF  xDF
0AE6:  RCALL  0632
....................   sec = bcd2bin(i2c_read() & 0x7f); 
0AE8:  MOVLW  01
0AEA:  MOVWF  00
0AEC:  RCALL  069E
0AEE:  MOVF   01,W
0AF0:  ANDLW  7F
0AF2:  MOVWF  xD3
0AF4:  MOVWF  xD8
0AF6:  RCALL  0704
0AF8:  MOVFF  01,1F
....................   min = bcd2bin(i2c_read() & 0x7f); 
0AFC:  MOVLW  01
0AFE:  MOVWF  00
0B00:  RCALL  069E
0B02:  MOVF   01,W
0B04:  ANDLW  7F
0B06:  MOVWF  xD3
0B08:  MOVWF  xD8
0B0A:  RCALL  0704
0B0C:  MOVFF  01,1E
.................... //  hr  = bcd2bin(i2c_read(0) & 0x3f); 
....................   hr  = i2c_read(0); 
0B10:  CLRF   00
0B12:  RCALL  069E
0B14:  MOVFF  01,1D
....................   AM_PM = bit_test (hr, 5); 
0B18:  BCF    xA7.7
0B1A:  BTFSC  1D.5
0B1C:  BSF    xA7.7
....................   hr  = bcd2bin(hr & 0x1f); 
0B1E:  MOVF   1D,W
0B20:  ANDLW  1F
0B22:  MOVWF  xD2
0B24:  MOVWF  xD8
0B26:  RCALL  0704
0B28:  MOVFF  01,1D
....................   i2c_stop(); 
0B2C:  BCF    F94.3
0B2E:  NOP   
0B30:  BSF    F94.4
0B32:  BTFSS  F82.4
0B34:  BRA    0B32
0B36:  MOVLW  02
0B38:  MOVWF  00
0B3A:  DECFSZ 00,F
0B3C:  BRA    0B3A
0B3E:  BRA    0B40
0B40:  NOP   
0B42:  BSF    F94.3
0B44:  MOVLW  02
0B46:  MOVWF  00
0B48:  DECFSZ 00,F
0B4A:  BRA    0B48
.................... } 
....................  
.................... void daufal_time() 
.................... { 
....................  int8 data_retain; 
....................  data_retain=read_ds1307(0x3F);  // cheak last ram address 
....................  if (data_retain==5) 
....................  { 
....................  return; 
....................  } 
.................... else 
....................  { 
....................   ds1307_init();   // ds1307 initial 
....................   ds1307_set_date_time(10,3,16,5,11,59,55); 
....................   write_ds1307(0x3F,5); // save 5 last ram address 
....................  } 
.................... } 
....................  
....................  
.................... BYTE bin2bcd(BYTE binary_value) 
.................... { 
....................   BYTE temp; 
....................   BYTE retval; 
....................  
....................   temp = binary_value; 
*
072A:  MOVFF  DD,DE
....................   retval = 0; 
072E:  CLRF   xDF
....................  
....................   while(1) 
....................   { 
....................     // Get the tens digit by doing multiple subtraction 
....................     // of 10 from the binary value. 
....................     if(temp >= 10) 
0730:  MOVF   xDE,W
0732:  SUBLW  09
0734:  BC    0740
....................     { 
....................       temp -= 10; 
0736:  MOVLW  0A
0738:  SUBWF  xDE,F
....................       retval += 0x10; 
073A:  MOVLW  10
073C:  ADDWF  xDF,F
....................     } 
....................     else // Get the ones digit by adding the remainder. 
073E:  BRA    0746
....................     { 
....................       retval += temp; 
0740:  MOVF   xDE,W
0742:  ADDWF  xDF,F
....................       break; 
0744:  BRA    0748
....................     } 
....................   } 
0746:  BRA    0730
....................  
....................   return(retval); 
0748:  MOVFF  DF,01
.................... } 
074C:  RETLW  00
....................  
....................  
.................... // Input range - 00 to 99. 
.................... BYTE bcd2bin(BYTE bcd_value) 
.................... { 
....................   BYTE temp; 
....................   temp = bcd_value; 
*
0704:  MOVFF  D8,D9
....................   // Shifting upper digit right by 1 is same as multiplying by 8. 
....................   temp >>= 1; 
0708:  BCF    FD8.0
070A:  RRCF   xD9,F
....................   // Isolate the bits for the upper digit. 
....................   temp &= 0x78; 
070C:  MOVLW  78
070E:  ANDWF  xD9,F
....................   // Now return: (Tens * 8) + (Tens * 2) + Ones 
....................   return(temp + (temp >> 2) + (bcd_value & 0x0f)); 
0710:  RRCF   xD9,W
0712:  MOVWF  00
0714:  RRCF   00,F
0716:  MOVLW  3F
0718:  ANDWF  00,F
071A:  MOVF   00,W
071C:  ADDWF  xD9,W
071E:  MOVWF  xDA
0720:  MOVF   xD8,W
0722:  ANDLW  0F
0724:  ADDWF  xDA,W
0726:  MOVWF  01
.................... } 
0728:  RETLW  00
....................  
....................  
....................  
.................... //!  ds1307_init(); 
.................... //! 
.................... //!  // Set date for -> 15 June 2005 Tuesday 
.................... //!  // Set time for -> 15:20:55 
.................... //!  ds1307_set_date_time(15,6,5,2,15,20,55); 
.................... //! 
.................... //!  while(1) 
.................... //!  { 
.................... //!    delay_ms(1000); 
.................... //! 
.................... //!    ds1307_get_date(day,month,yr,dow); 
.................... //!    ds1307_get_time(hrs,min,sec); 
.................... //!   LCD_GOTOXY(29,2); 
.................... //!   printf(LCD_OUT5X7,"\f\%02d/\%02d/\%02d\r\n",day,month,yr); 
.................... //!   LCD_GOTOXY(29,3); 
.................... //!   printf(LCD_OUT5X7,"\%02d:\%02d:\%02d", hrs,min,sec); 
.................... //!  } 
....................  
....................  
.................... #include "methods.c" 
.................... //+++++++++++++++++++++++++++++ 
.................... static int32 _r_e(int8 _eloc ){ 
.................... int8 _a1,_a2,_a3,_a4; 
.................... int32 _e_temp; 
....................  _a1 = read_eeprom(_eloc); 
*
0B88:  MOVFF  FF2,DD
0B8C:  BCF    FF2.7
0B8E:  MOVFF  D4,FA9
0B92:  BCF    FA6.6
0B94:  BCF    FA6.7
0B96:  BSF    FA6.0
0B98:  MOVF   FA8,W
0B9A:  BTFSC  xDD.7
0B9C:  BSF    FF2.7
0B9E:  MOVWF  xD5
....................  _a2 = read_eeprom(++_eloc); 
0BA0:  INCF   xD4,F
0BA2:  MOVFF  FF2,DD
0BA6:  BCF    FF2.7
0BA8:  MOVFF  D4,FA9
0BAC:  BCF    FA6.6
0BAE:  BCF    FA6.7
0BB0:  BSF    FA6.0
0BB2:  MOVF   FA8,W
0BB4:  BTFSC  xDD.7
0BB6:  BSF    FF2.7
0BB8:  MOVWF  xD6
....................  _a3 = read_eeprom(++_eloc); 
0BBA:  INCF   xD4,F
0BBC:  MOVFF  FF2,DD
0BC0:  BCF    FF2.7
0BC2:  MOVFF  D4,FA9
0BC6:  BCF    FA6.6
0BC8:  BCF    FA6.7
0BCA:  BSF    FA6.0
0BCC:  MOVF   FA8,W
0BCE:  BTFSC  xDD.7
0BD0:  BSF    FF2.7
0BD2:  MOVWF  xD7
....................  _a4 = read_eeprom(++_eloc); 
0BD4:  INCF   xD4,F
0BD6:  MOVFF  FF2,DD
0BDA:  BCF    FF2.7
0BDC:  MOVFF  D4,FA9
0BE0:  BCF    FA6.6
0BE2:  BCF    FA6.7
0BE4:  BSF    FA6.0
0BE6:  MOVF   FA8,W
0BE8:  BTFSC  xDD.7
0BEA:  BSF    FF2.7
0BEC:  MOVWF  xD8
....................  _e_temp = make32(_a4,_a3,_a2,_a1); 
0BEE:  MOVFF  D8,DC
0BF2:  MOVFF  D7,DB
0BF6:  MOVFF  D6,DA
0BFA:  MOVFF  D5,D9
.................... if(_e_temp > 99999999)_e_temp = 0; 
0BFE:  MOVF   xDC,W
0C00:  SUBLW  04
0C02:  BC    0C20
0C04:  XORLW  FF
0C06:  BNZ   0C18
0C08:  MOVF   xDB,W
0C0A:  SUBLW  F4
0C0C:  BC    0C20
0C0E:  XORLW  FF
0C10:  BNZ   0C18
0C12:  MOVF   xDA,W
0C14:  SUBLW  E0
0C16:  BC    0C20
0C18:  CLRF   xDC
0C1A:  CLRF   xDB
0C1C:  CLRF   xDA
0C1E:  CLRF   xD9
.................... return _e_temp; 
0C20:  MOVFF  D9,00
0C24:  MOVFF  DA,01
0C28:  MOVFF  DB,02
0C2C:  MOVFF  DC,03
.................... } 
0C30:  RETLW  00
.................... //+++++++++++++++++++++++++++++ 
.................... void _w_e(int8 _eloc , int32 _e_val ){ 
.................... int8 _a1,_a2,_a3,_a4; 
....................    _a1 = make8(_e_val,0); 
*
1AD6:  MOVF   xD7,W
1AD8:  MOVWF  xDB
....................    _a2 = make8(_e_val,1); 
1ADA:  MOVFF  D8,DC
....................    _a3 = make8(_e_val,2); 
1ADE:  MOVFF  D9,DD
....................    _a4 = make8(_e_val,3); 
1AE2:  MOVFF  DA,DE
....................    write_eeprom(_eloc ,_a1); 
1AE6:  MOVFF  D6,FA9
1AEA:  MOVFF  DB,FA8
1AEE:  BCF    FA6.6
1AF0:  BCF    FA6.7
1AF2:  BSF    FA6.2
1AF4:  MOVFF  FF2,00
1AF8:  BCF    FF2.7
1AFA:  MOVLB  F
1AFC:  MOVLW  55
1AFE:  MOVWF  FA7
1B00:  MOVLW  AA
1B02:  MOVWF  FA7
1B04:  BSF    FA6.1
1B06:  BTFSC  FA6.1
1B08:  BRA    1B06
1B0A:  BCF    FA6.2
1B0C:  MOVF   00,W
1B0E:  IORWF  FF2,F
....................    write_eeprom(++_eloc,_a2); 
1B10:  MOVLB  0
1B12:  INCF   xD6,F
1B14:  MOVFF  D6,FA9
1B18:  MOVFF  DC,FA8
1B1C:  BCF    FA6.6
1B1E:  BCF    FA6.7
1B20:  BSF    FA6.2
1B22:  MOVFF  FF2,00
1B26:  BCF    FF2.7
1B28:  MOVLB  F
1B2A:  MOVLW  55
1B2C:  MOVWF  FA7
1B2E:  MOVLW  AA
1B30:  MOVWF  FA7
1B32:  BSF    FA6.1
1B34:  BTFSC  FA6.1
1B36:  BRA    1B34
1B38:  BCF    FA6.2
1B3A:  MOVF   00,W
1B3C:  IORWF  FF2,F
....................    write_eeprom(++_eloc,_a3); 
1B3E:  MOVLB  0
1B40:  INCF   xD6,F
1B42:  MOVFF  D6,FA9
1B46:  MOVFF  DD,FA8
1B4A:  BCF    FA6.6
1B4C:  BCF    FA6.7
1B4E:  BSF    FA6.2
1B50:  MOVFF  FF2,00
1B54:  BCF    FF2.7
1B56:  MOVLB  F
1B58:  MOVLW  55
1B5A:  MOVWF  FA7
1B5C:  MOVLW  AA
1B5E:  MOVWF  FA7
1B60:  BSF    FA6.1
1B62:  BTFSC  FA6.1
1B64:  BRA    1B62
1B66:  BCF    FA6.2
1B68:  MOVF   00,W
1B6A:  IORWF  FF2,F
....................    write_eeprom(++_eloc,_a4); 
1B6C:  MOVLB  0
1B6E:  INCF   xD6,F
1B70:  MOVFF  D6,FA9
1B74:  MOVFF  DE,FA8
1B78:  BCF    FA6.6
1B7A:  BCF    FA6.7
1B7C:  BSF    FA6.2
1B7E:  MOVFF  FF2,00
1B82:  BCF    FF2.7
1B84:  MOVLB  F
1B86:  MOVLW  55
1B88:  MOVWF  FA7
1B8A:  MOVLW  AA
1B8C:  MOVWF  FA7
1B8E:  BSF    FA6.1
1B90:  BTFSC  FA6.1
1B92:  BRA    1B90
1B94:  BCF    FA6.2
1B96:  MOVF   00,W
1B98:  IORWF  FF2,F
.................... } 
1B9A:  MOVLB  0
1B9C:  RETLW  00
.................... //+++++++++++++++++++++++++++++++ 
.................... void _w_eerom(void){ 
.................... int8 _x1,_x2; 
....................    write_eeprom(0,_sov_cut); 
*
1C3A:  CLRF   FA9
1C3C:  MOVFF  42,FA8
1C40:  BCF    FA6.6
1C42:  BCF    FA6.7
1C44:  BSF    FA6.2
1C46:  MOVFF  FF2,00
1C4A:  BCF    FF2.7
1C4C:  MOVLB  F
1C4E:  MOVLW  55
1C50:  MOVWF  FA7
1C52:  MOVLW  AA
1C54:  MOVWF  FA7
1C56:  BSF    FA6.1
1C58:  BTFSC  FA6.1
1C5A:  BRA    1C58
1C5C:  BCF    FA6.2
1C5E:  MOVF   00,W
1C60:  IORWF  FF2,F
....................    write_eeprom(1,_v_first_val); 
1C62:  MOVLW  01
1C64:  MOVWF  FA9
1C66:  MOVFF  2F,FA8
1C6A:  BCF    FA6.6
1C6C:  BCF    FA6.7
1C6E:  BSF    FA6.2
1C70:  MOVFF  FF2,00
1C74:  BCF    FF2.7
1C76:  MOVLW  55
1C78:  MOVWF  FA7
1C7A:  MOVLW  AA
1C7C:  MOVWF  FA7
1C7E:  BSF    FA6.1
1C80:  BTFSC  FA6.1
1C82:  BRA    1C80
1C84:  BCF    FA6.2
1C86:  MOVF   00,W
1C88:  IORWF  FF2,F
....................    write_eeprom(2,_first_val); 
1C8A:  MOVLW  02
1C8C:  MOVWF  FA9
1C8E:  MOVFF  44,FA8
1C92:  BCF    FA6.6
1C94:  BCF    FA6.7
1C96:  BSF    FA6.2
1C98:  MOVFF  FF2,00
1C9C:  BCF    FF2.7
1C9E:  MOVLW  55
1CA0:  MOVWF  FA7
1CA2:  MOVLW  AA
1CA4:  MOVWF  FA7
1CA6:  BSF    FA6.1
1CA8:  BTFSC  FA6.1
1CAA:  BRA    1CA8
1CAC:  BCF    FA6.2
1CAE:  MOVF   00,W
1CB0:  IORWF  FF2,F
....................    write_eeprom(3,_skip_rupee); 
1CB2:  MOVLW  03
1CB4:  MOVWF  FA9
1CB6:  MOVFF  48,FA8
1CBA:  BCF    FA6.6
1CBC:  BCF    FA6.7
1CBE:  BSF    FA6.2
1CC0:  MOVFF  FF2,00
1CC4:  BCF    FF2.7
1CC6:  MOVLW  55
1CC8:  MOVWF  FA7
1CCA:  MOVLW  AA
1CCC:  MOVWF  FA7
1CCE:  BSF    FA6.1
1CD0:  BTFSC  FA6.1
1CD2:  BRA    1CD0
1CD4:  BCF    FA6.2
1CD6:  MOVF   00,W
1CD8:  IORWF  FF2,F
....................    write_eeprom(4,_rate_fact); 
1CDA:  MOVLW  04
1CDC:  MOVWF  FA9
1CDE:  MOVFF  30,FA8
1CE2:  BCF    FA6.6
1CE4:  BCF    FA6.7
1CE6:  BSF    FA6.2
1CE8:  MOVFF  FF2,00
1CEC:  BCF    FF2.7
1CEE:  MOVLW  55
1CF0:  MOVWF  FA7
1CF2:  MOVLW  AA
1CF4:  MOVWF  FA7
1CF6:  BSF    FA6.1
1CF8:  BTFSC  FA6.1
1CFA:  BRA    1CF8
1CFC:  BCF    FA6.2
1CFE:  MOVF   00,W
1D00:  IORWF  FF2,F
....................    write_eeprom(5,_skip_liters); 
1D02:  MOVLW  05
1D04:  MOVWF  FA9
1D06:  MOVFF  31,FA8
1D0A:  BCF    FA6.6
1D0C:  BCF    FA6.7
1D0E:  BSF    FA6.2
1D10:  MOVFF  FF2,00
1D14:  BCF    FF2.7
1D16:  MOVLW  55
1D18:  MOVWF  FA7
1D1A:  MOVLW  AA
1D1C:  MOVWF  FA7
1D1E:  BSF    FA6.1
1D20:  BTFSC  FA6.1
1D22:  BRA    1D20
1D24:  BCF    FA6.2
1D26:  MOVF   00,W
1D28:  IORWF  FF2,F
....................    write_eeprom(6,_ok_liters); 
1D2A:  MOVLW  06
1D2C:  MOVWF  FA9
1D2E:  MOVFF  32,FA8
1D32:  BCF    FA6.6
1D34:  BCF    FA6.7
1D36:  BSF    FA6.2
1D38:  MOVFF  FF2,00
1D3C:  BCF    FF2.7
1D3E:  MOVLW  55
1D40:  MOVWF  FA7
1D42:  MOVLW  AA
1D44:  MOVWF  FA7
1D46:  BSF    FA6.1
1D48:  BTFSC  FA6.1
1D4A:  BRA    1D48
1D4C:  BCF    FA6.2
1D4E:  MOVF   00,W
1D50:  IORWF  FF2,F
.................... //   write_eeprom(7,_desi_d1); 
.................... //   write_eeprom(8,_desi_d2); 
.................... //   write_eeprom(9,_desi_d3); 
....................    _x1 = make8(_rate, 0); 
1D52:  MOVFF  46,D2
1D56:  MOVLB  0
....................    _x2 = make8(_rate, 1); 
1D58:  MOVFF  47,D3
....................    write_eeprom(10 ,_x1); 
1D5C:  MOVLW  0A
1D5E:  MOVWF  FA9
1D60:  MOVFF  D2,FA8
1D64:  BCF    FA6.6
1D66:  BCF    FA6.7
1D68:  BSF    FA6.2
1D6A:  MOVFF  FF2,00
1D6E:  BCF    FF2.7
1D70:  MOVLB  F
1D72:  MOVLW  55
1D74:  MOVWF  FA7
1D76:  MOVLW  AA
1D78:  MOVWF  FA7
1D7A:  BSF    FA6.1
1D7C:  BTFSC  FA6.1
1D7E:  BRA    1D7C
1D80:  BCF    FA6.2
1D82:  MOVF   00,W
1D84:  IORWF  FF2,F
....................    write_eeprom(11,_x2); 
1D86:  MOVLW  0B
1D88:  MOVWF  FA9
1D8A:  MOVFF  D3,FA8
1D8E:  BCF    FA6.6
1D90:  BCF    FA6.7
1D92:  BSF    FA6.2
1D94:  MOVFF  FF2,00
1D98:  BCF    FF2.7
1D9A:  MOVLW  55
1D9C:  MOVWF  FA7
1D9E:  MOVLW  AA
1DA0:  MOVWF  FA7
1DA2:  BSF    FA6.1
1DA4:  BTFSC  FA6.1
1DA6:  BRA    1DA4
1DA8:  BCF    FA6.2
1DAA:  MOVF   00,W
1DAC:  IORWF  FF2,F
....................    _x1 = make8(_ok_rate, 0); 
1DAE:  MOVFF  2D,D2
1DB2:  MOVLB  0
....................    _x2 = make8(_ok_rate, 1); 
1DB4:  MOVFF  2E,D3
....................    write_eeprom(12 ,_x1); 
1DB8:  MOVLW  0C
1DBA:  MOVWF  FA9
1DBC:  MOVFF  D2,FA8
1DC0:  BCF    FA6.6
1DC2:  BCF    FA6.7
1DC4:  BSF    FA6.2
1DC6:  MOVFF  FF2,00
1DCA:  BCF    FF2.7
1DCC:  MOVLB  F
1DCE:  MOVLW  55
1DD0:  MOVWF  FA7
1DD2:  MOVLW  AA
1DD4:  MOVWF  FA7
1DD6:  BSF    FA6.1
1DD8:  BTFSC  FA6.1
1DDA:  BRA    1DD8
1DDC:  BCF    FA6.2
1DDE:  MOVF   00,W
1DE0:  IORWF  FF2,F
....................    write_eeprom(13,_x2); 
1DE2:  MOVLW  0D
1DE4:  MOVWF  FA9
1DE6:  MOVFF  D3,FA8
1DEA:  BCF    FA6.6
1DEC:  BCF    FA6.7
1DEE:  BSF    FA6.2
1DF0:  MOVFF  FF2,00
1DF4:  BCF    FF2.7
1DF6:  MOVLW  55
1DF8:  MOVWF  FA7
1DFA:  MOVLW  AA
1DFC:  MOVWF  FA7
1DFE:  BSF    FA6.1
1E00:  BTFSC  FA6.1
1E02:  BRA    1E00
1E04:  BCF    FA6.2
1E06:  MOVF   00,W
1E08:  IORWF  FF2,F
....................    _x1 = make8(_pulses, 0); 
1E0A:  MOVFF  27,D2
1E0E:  MOVLB  0
....................    _x2 = make8(_pulses, 1); 
1E10:  MOVFF  28,D3
....................    write_eeprom(14 ,_x1); 
1E14:  MOVLW  0E
1E16:  MOVWF  FA9
1E18:  MOVFF  D2,FA8
1E1C:  BCF    FA6.6
1E1E:  BCF    FA6.7
1E20:  BSF    FA6.2
1E22:  MOVFF  FF2,00
1E26:  BCF    FF2.7
1E28:  MOVLB  F
1E2A:  MOVLW  55
1E2C:  MOVWF  FA7
1E2E:  MOVLW  AA
1E30:  MOVWF  FA7
1E32:  BSF    FA6.1
1E34:  BTFSC  FA6.1
1E36:  BRA    1E34
1E38:  BCF    FA6.2
1E3A:  MOVF   00,W
1E3C:  IORWF  FF2,F
....................    write_eeprom(15,_x2); 
1E3E:  MOVLW  0F
1E40:  MOVWF  FA9
1E42:  MOVFF  D3,FA8
1E46:  BCF    FA6.6
1E48:  BCF    FA6.7
1E4A:  BSF    FA6.2
1E4C:  MOVFF  FF2,00
1E50:  BCF    FF2.7
1E52:  MOVLW  55
1E54:  MOVWF  FA7
1E56:  MOVLW  AA
1E58:  MOVWF  FA7
1E5A:  BSF    FA6.1
1E5C:  BTFSC  FA6.1
1E5E:  BRA    1E5C
1E60:  BCF    FA6.2
1E62:  MOVF   00,W
1E64:  IORWF  FF2,F
....................    _w_e(16 , _totel); 
1E66:  MOVLW  10
1E68:  MOVLB  0
1E6A:  MOVWF  xD6
1E6C:  MOVFF  5F,DA
1E70:  MOVFF  5E,D9
1E74:  MOVFF  5D,D8
1E78:  MOVFF  5C,D7
1E7C:  RCALL  1AD6
....................    _w_e(20 ,_last_fill); 
1E7E:  MOVLW  14
1E80:  MOVWF  xD6
1E82:  MOVFF  63,DA
1E86:  MOVFF  62,D9
1E8A:  MOVFF  61,D8
1E8E:  MOVFF  60,D7
1E92:  RCALL  1AD6
....................    _w_e(24 ,_last_bill); 
1E94:  MOVLW  18
1E96:  MOVWF  xD6
1E98:  MOVFF  67,DA
1E9C:  MOVFF  66,D9
1EA0:  MOVFF  65,D8
1EA4:  MOVFF  64,D7
1EA8:  RCALL  1AD6
....................    _w_e(28 , _hang); 
1EAA:  MOVLW  1C
1EAC:  MOVWF  xD6
1EAE:  MOVFF  7F,DA
1EB2:  MOVFF  7E,D9
1EB6:  MOVFF  7D,D8
1EBA:  MOVFF  7C,D7
1EBE:  RCALL  1AD6
....................    _w_e(32 , _slips); 
1EC0:  MOVLW  20
1EC2:  MOVWF  xD6
1EC4:  MOVFF  77,DA
1EC8:  MOVFF  76,D9
1ECC:  MOVFF  75,D8
1ED0:  MOVFF  74,D7
1ED4:  RCALL  1AD6
.................... //   write_eeprom(36,_noz_pad); 
....................    _x1 = make8(_m_code, 0); 
1ED6:  MOVFF  4A,D2
....................    _x2 = make8(_m_code, 1); 
1EDA:  MOVFF  4B,D3
....................    write_eeprom(37 ,_x1); 
1EDE:  MOVLW  25
1EE0:  MOVWF  FA9
1EE2:  MOVFF  D2,FA8
1EE6:  BCF    FA6.6
1EE8:  BCF    FA6.7
1EEA:  BSF    FA6.2
1EEC:  MOVFF  FF2,00
1EF0:  BCF    FF2.7
1EF2:  MOVLB  F
1EF4:  MOVLW  55
1EF6:  MOVWF  FA7
1EF8:  MOVLW  AA
1EFA:  MOVWF  FA7
1EFC:  BSF    FA6.1
1EFE:  BTFSC  FA6.1
1F00:  BRA    1EFE
1F02:  BCF    FA6.2
1F04:  MOVF   00,W
1F06:  IORWF  FF2,F
....................    write_eeprom(38,_x2); 
1F08:  MOVLW  26
1F0A:  MOVWF  FA9
1F0C:  MOVFF  D3,FA8
1F10:  BCF    FA6.6
1F12:  BCF    FA6.7
1F14:  BSF    FA6.2
1F16:  MOVFF  FF2,00
1F1A:  BCF    FF2.7
1F1C:  MOVLW  55
1F1E:  MOVWF  FA7
1F20:  MOVLW  AA
1F22:  MOVWF  FA7
1F24:  BSF    FA6.1
1F26:  BTFSC  FA6.1
1F28:  BRA    1F26
1F2A:  BCF    FA6.2
1F2C:  MOVF   00,W
1F2E:  IORWF  FF2,F
....................    write_eeprom(39,_skip_var); 
1F30:  MOVLW  27
1F32:  MOVWF  FA9
1F34:  MOVFF  25,FA8
1F38:  BCF    FA6.6
1F3A:  BCF    FA6.7
1F3C:  BSF    FA6.2
1F3E:  MOVFF  FF2,00
1F42:  BCF    FF2.7
1F44:  MOVLW  55
1F46:  MOVWF  FA7
1F48:  MOVLW  AA
1F4A:  MOVWF  FA7
1F4C:  BSF    FA6.1
1F4E:  BTFSC  FA6.1
1F50:  BRA    1F4E
1F52:  BCF    FA6.2
1F54:  MOVF   00,W
1F56:  IORWF  FF2,F
....................  if(_disk_fl)write_eeprom(40,1); 
1F58:  BTFSS  26.4
1F5A:  BRA    1F86
1F5C:  MOVLW  28
1F5E:  MOVWF  FA9
1F60:  MOVLW  01
1F62:  MOVWF  FA8
1F64:  BCF    FA6.6
1F66:  BCF    FA6.7
1F68:  BSF    FA6.2
1F6A:  MOVFF  FF2,00
1F6E:  BCF    FF2.7
1F70:  MOVLW  55
1F72:  MOVWF  FA7
1F74:  MOVLW  AA
1F76:  MOVWF  FA7
1F78:  BSF    FA6.1
1F7A:  BTFSC  FA6.1
1F7C:  BRA    1F7A
1F7E:  BCF    FA6.2
1F80:  MOVF   00,W
1F82:  IORWF  FF2,F
....................  else write_eeprom(40,0); 
1F84:  BRA    1FAC
1F86:  MOVLW  28
1F88:  MOVWF  FA9
1F8A:  CLRF   FA8
1F8C:  BCF    FA6.6
1F8E:  BCF    FA6.7
1F90:  BSF    FA6.2
1F92:  MOVFF  FF2,00
1F96:  BCF    FF2.7
1F98:  MOVLW  55
1F9A:  MOVWF  FA7
1F9C:  MOVLW  AA
1F9E:  MOVWF  FA7
1FA0:  BSF    FA6.1
1FA2:  BTFSC  FA6.1
1FA4:  BRA    1FA2
1FA6:  BCF    FA6.2
1FA8:  MOVF   00,W
1FAA:  IORWF  FF2,F
....................  if(_motor_fl)write_eeprom(41,1); 
1FAC:  MOVLB  0
1FAE:  BTFSS  xA7.6
1FB0:  BRA    1FE0
1FB2:  MOVLW  29
1FB4:  MOVWF  FA9
1FB6:  MOVLW  01
1FB8:  MOVWF  FA8
1FBA:  BCF    FA6.6
1FBC:  BCF    FA6.7
1FBE:  BSF    FA6.2
1FC0:  MOVFF  FF2,00
1FC4:  BCF    FF2.7
1FC6:  MOVLB  F
1FC8:  MOVLW  55
1FCA:  MOVWF  FA7
1FCC:  MOVLW  AA
1FCE:  MOVWF  FA7
1FD0:  BSF    FA6.1
1FD2:  BTFSC  FA6.1
1FD4:  BRA    1FD2
1FD6:  BCF    FA6.2
1FD8:  MOVF   00,W
1FDA:  IORWF  FF2,F
....................  else write_eeprom(41,0); 
1FDC:  BRA    2008
1FDE:  MOVLB  0
1FE0:  MOVLW  29
1FE2:  MOVWF  FA9
1FE4:  CLRF   FA8
1FE6:  BCF    FA6.6
1FE8:  BCF    FA6.7
1FEA:  BSF    FA6.2
1FEC:  MOVFF  FF2,00
1FF0:  BCF    FF2.7
1FF2:  MOVLB  F
1FF4:  MOVLW  55
1FF6:  MOVWF  FA7
1FF8:  MOVLW  AA
1FFA:  MOVWF  FA7
1FFC:  BSF    FA6.1
1FFE:  BTFSC  FA6.1
2000:  BRA    1FFE
2002:  BCF    FA6.2
2004:  MOVF   00,W
2006:  IORWF  FF2,F
....................  
.................... } 
2008:  MOVLB  0
200A:  RETLW  00
.................... //___________________________________ 
.................... void _r_eerom(void){ 
.................... int8 _x1,_x2; 
....................  _sov_cut = read_eeprom(0); 
*
0C32:  MOVFF  FF2,D4
0C36:  BCF    FF2.7
0C38:  CLRF   FA9
0C3A:  BCF    FA6.6
0C3C:  BCF    FA6.7
0C3E:  BSF    FA6.0
0C40:  MOVF   FA8,W
0C42:  BTFSC  xD4.7
0C44:  BSF    FF2.7
0C46:  MOVWF  42
.................... if(_sov_cut > 40)_sov_cut = 20; 
0C48:  MOVF   42,W
0C4A:  SUBLW  28
0C4C:  BC    0C52
0C4E:  MOVLW  14
0C50:  MOVWF  42
....................  _v_first_val = read_eeprom(1); 
0C52:  MOVFF  FF2,D4
0C56:  BCF    FF2.7
0C58:  MOVLW  01
0C5A:  MOVWF  FA9
0C5C:  BCF    FA6.6
0C5E:  BCF    FA6.7
0C60:  BSF    FA6.0
0C62:  MOVF   FA8,W
0C64:  BTFSC  xD4.7
0C66:  BSF    FF2.7
0C68:  MOVWF  2F
.................... if(_v_first_val > 10)_v_first_val = 0; 
0C6A:  MOVF   2F,W
0C6C:  SUBLW  0A
0C6E:  BTFSS  FD8.0
0C70:  CLRF   2F
....................  _first_val = read_eeprom(2); 
0C72:  MOVFF  FF2,D4
0C76:  BCF    FF2.7
0C78:  MOVLW  02
0C7A:  MOVWF  FA9
0C7C:  BCF    FA6.6
0C7E:  BCF    FA6.7
0C80:  BSF    FA6.0
0C82:  MOVF   FA8,W
0C84:  BTFSC  xD4.7
0C86:  BSF    FF2.7
0C88:  MOVWF  44
.................... if(_first_val > 10)_first_val = 0; 
0C8A:  MOVF   44,W
0C8C:  SUBLW  0A
0C8E:  BTFSS  FD8.0
0C90:  CLRF   44
....................  _skip_rupee = read_eeprom(3); 
0C92:  MOVFF  FF2,D4
0C96:  BCF    FF2.7
0C98:  MOVLW  03
0C9A:  MOVWF  FA9
0C9C:  BCF    FA6.6
0C9E:  BCF    FA6.7
0CA0:  BSF    FA6.0
0CA2:  MOVF   FA8,W
0CA4:  BTFSC  xD4.7
0CA6:  BSF    FF2.7
0CA8:  CLRF   49
0CAA:  MOVWF  48
.................... if(_skip_rupee > 30)_skip_rupee = 0; 
0CAC:  MOVF   49,F
0CAE:  BNZ   0CB6
0CB0:  MOVF   48,W
0CB2:  SUBLW  1E
0CB4:  BC    0CBA
0CB6:  CLRF   49
0CB8:  CLRF   48
....................  _rate_fact = read_eeprom(4); 
0CBA:  MOVFF  FF2,D4
0CBE:  BCF    FF2.7
0CC0:  MOVLW  04
0CC2:  MOVWF  FA9
0CC4:  BCF    FA6.6
0CC6:  BCF    FA6.7
0CC8:  BSF    FA6.0
0CCA:  MOVF   FA8,W
0CCC:  BTFSC  xD4.7
0CCE:  BSF    FF2.7
0CD0:  MOVWF  30
.................... if(_rate_fact > 10)_rate_fact = 0; 
0CD2:  MOVF   30,W
0CD4:  SUBLW  0A
0CD6:  BTFSS  FD8.0
0CD8:  CLRF   30
....................  _skip_liters = read_eeprom(5); 
0CDA:  MOVFF  FF2,D4
0CDE:  BCF    FF2.7
0CE0:  MOVLW  05
0CE2:  MOVWF  FA9
0CE4:  BCF    FA6.6
0CE6:  BCF    FA6.7
0CE8:  BSF    FA6.0
0CEA:  MOVF   FA8,W
0CEC:  BTFSC  xD4.7
0CEE:  BSF    FF2.7
0CF0:  MOVWF  31
.................... if(_skip_liters > 30)_skip_liters = 0; 
0CF2:  MOVF   31,W
0CF4:  SUBLW  1E
0CF6:  BTFSS  FD8.0
0CF8:  CLRF   31
....................  _ok_liters = read_eeprom(6); 
0CFA:  MOVFF  FF2,D4
0CFE:  BCF    FF2.7
0D00:  MOVLW  06
0D02:  MOVWF  FA9
0D04:  BCF    FA6.6
0D06:  BCF    FA6.7
0D08:  BSF    FA6.0
0D0A:  MOVF   FA8,W
0D0C:  BTFSC  xD4.7
0D0E:  BSF    FF2.7
0D10:  MOVWF  32
.................... if(_ok_liters > 99)_ok_liters = 0; 
0D12:  MOVF   32,W
0D14:  SUBLW  63
0D16:  BTFSS  FD8.0
0D18:  CLRF   32
....................  //_desi_d1 = read_eeprom(7); 
.................... //if(_desi_d1 > 2)_desi_d1 = 2; 
.................... // _desi_d2 = read_eeprom(8); 
.................... //if(_desi_d2 > 2)_desi_d2 = 2; 
.................... // _desi_d3 = read_eeprom(9); 
.................... //if(_desi_d3 > 2)_desi_d3 = 2; 
....................  _x1 = read_eeprom(10); 
0D1A:  MOVFF  FF2,D4
0D1E:  BCF    FF2.7
0D20:  MOVLW  0A
0D22:  MOVWF  FA9
0D24:  BCF    FA6.6
0D26:  BCF    FA6.7
0D28:  BSF    FA6.0
0D2A:  MOVF   FA8,W
0D2C:  BTFSC  xD4.7
0D2E:  BSF    FF2.7
0D30:  MOVWF  xD2
....................  _x2 = read_eeprom(11); 
0D32:  MOVFF  FF2,D4
0D36:  BCF    FF2.7
0D38:  MOVLW  0B
0D3A:  MOVWF  FA9
0D3C:  BCF    FA6.6
0D3E:  BCF    FA6.7
0D40:  BSF    FA6.0
0D42:  MOVF   FA8,W
0D44:  BTFSC  xD4.7
0D46:  BSF    FF2.7
0D48:  MOVWF  xD3
....................  _rate = make16(_x2,_x1); 
0D4A:  MOVFF  D3,47
0D4E:  MOVFF  D2,46
.................... if(_rate > 19999 || _rate == 0)_rate = 10000; 
0D52:  MOVF   47,W
0D54:  SUBLW  4D
0D56:  BC    0D62
0D58:  XORLW  FF
0D5A:  BNZ   0D6A
0D5C:  MOVF   46,W
0D5E:  SUBLW  1F
0D60:  BNC   0D6A
0D62:  MOVF   46,F
0D64:  BNZ   0D72
0D66:  MOVF   47,F
0D68:  BNZ   0D72
0D6A:  MOVLW  27
0D6C:  MOVWF  47
0D6E:  MOVLW  10
0D70:  MOVWF  46
....................  _x1 = read_eeprom(12); 
0D72:  MOVFF  FF2,D4
0D76:  BCF    FF2.7
0D78:  MOVLW  0C
0D7A:  MOVWF  FA9
0D7C:  BCF    FA6.6
0D7E:  BCF    FA6.7
0D80:  BSF    FA6.0
0D82:  MOVF   FA8,W
0D84:  BTFSC  xD4.7
0D86:  BSF    FF2.7
0D88:  MOVWF  xD2
....................  _x2 = read_eeprom(13); 
0D8A:  MOVFF  FF2,D4
0D8E:  BCF    FF2.7
0D90:  MOVLW  0D
0D92:  MOVWF  FA9
0D94:  BCF    FA6.6
0D96:  BCF    FA6.7
0D98:  BSF    FA6.0
0D9A:  MOVF   FA8,W
0D9C:  BTFSC  xD4.7
0D9E:  BSF    FF2.7
0DA0:  MOVWF  xD3
....................  _ok_rate = make16(_x2,_x1); 
0DA2:  MOVFF  D3,2E
0DA6:  MOVFF  D2,2D
.................... if(_ok_rate > 19999)_ok_rate = 6500; 
0DAA:  MOVF   2E,W
0DAC:  SUBLW  4D
0DAE:  BC    0DC2
0DB0:  XORLW  FF
0DB2:  BNZ   0DBA
0DB4:  MOVF   2D,W
0DB6:  SUBLW  1F
0DB8:  BC    0DC2
0DBA:  MOVLW  19
0DBC:  MOVWF  2E
0DBE:  MOVLW  64
0DC0:  MOVWF  2D
....................  _x1 = read_eeprom(14); 
0DC2:  MOVFF  FF2,D4
0DC6:  BCF    FF2.7
0DC8:  MOVLW  0E
0DCA:  MOVWF  FA9
0DCC:  BCF    FA6.6
0DCE:  BCF    FA6.7
0DD0:  BSF    FA6.0
0DD2:  MOVF   FA8,W
0DD4:  BTFSC  xD4.7
0DD6:  BSF    FF2.7
0DD8:  MOVWF  xD2
....................  _x2 = read_eeprom(15); 
0DDA:  MOVFF  FF2,D4
0DDE:  BCF    FF2.7
0DE0:  MOVLW  0F
0DE2:  MOVWF  FA9
0DE4:  BCF    FA6.6
0DE6:  BCF    FA6.7
0DE8:  BSF    FA6.0
0DEA:  MOVF   FA8,W
0DEC:  BTFSC  xD4.7
0DEE:  BSF    FF2.7
0DF0:  MOVWF  xD3
....................  _pulses = make16(_x2,_x1); 
0DF2:  MOVFF  D3,28
0DF6:  MOVFF  D2,27
.................... if( _pulses > 2000) _pulses = 100; 
0DFA:  MOVF   28,W
0DFC:  SUBLW  06
0DFE:  BC    0E10
0E00:  XORLW  FF
0E02:  BNZ   0E0A
0E04:  MOVF   27,W
0E06:  SUBLW  D0
0E08:  BC    0E10
0E0A:  CLRF   28
0E0C:  MOVLW  64
0E0E:  MOVWF  27
.................... _totel = _r_e(16); 
0E10:  MOVLW  10
0E12:  MOVWF  xD4
0E14:  RCALL  0B88
0E16:  MOVFF  03,5F
0E1A:  MOVFF  02,5E
0E1E:  MOVFF  01,5D
0E22:  MOVFF  00,5C
.................... _last_fill = _r_e(20); 
0E26:  MOVLW  14
0E28:  MOVWF  xD4
0E2A:  RCALL  0B88
0E2C:  MOVFF  03,63
0E30:  MOVFF  02,62
0E34:  MOVFF  01,61
0E38:  MOVFF  00,60
.................... _last_bill = _r_e(24); 
0E3C:  MOVLW  18
0E3E:  MOVWF  xD4
0E40:  RCALL  0B88
0E42:  MOVFF  03,67
0E46:  MOVFF  02,66
0E4A:  MOVFF  01,65
0E4E:  MOVFF  00,64
.................... _hang = _r_e(28); 
0E52:  MOVLW  1C
0E54:  MOVWF  xD4
0E56:  RCALL  0B88
0E58:  MOVFF  03,7F
0E5C:  MOVFF  02,7E
0E60:  MOVFF  01,7D
0E64:  MOVFF  00,7C
.................... _slips = _r_e(32); 
0E68:  MOVLW  20
0E6A:  MOVWF  xD4
0E6C:  RCALL  0B88
0E6E:  MOVFF  03,77
0E72:  MOVFF  02,76
0E76:  MOVFF  01,75
0E7A:  MOVFF  00,74
.................... // _noz_pad = read_eeprom(36); 
.................... //if(_noz_pad > 1)_noz_pad = 0; 
....................  _x1 = read_eeprom(37); 
0E7E:  MOVFF  FF2,D4
0E82:  BCF    FF2.7
0E84:  MOVLW  25
0E86:  MOVWF  FA9
0E88:  BCF    FA6.6
0E8A:  BCF    FA6.7
0E8C:  BSF    FA6.0
0E8E:  MOVF   FA8,W
0E90:  BTFSC  xD4.7
0E92:  BSF    FF2.7
0E94:  MOVWF  xD2
....................  _x2 = read_eeprom(38); 
0E96:  MOVFF  FF2,D4
0E9A:  BCF    FF2.7
0E9C:  MOVLW  26
0E9E:  MOVWF  FA9
0EA0:  BCF    FA6.6
0EA2:  BCF    FA6.7
0EA4:  BSF    FA6.0
0EA6:  MOVF   FA8,W
0EA8:  BTFSC  xD4.7
0EAA:  BSF    FF2.7
0EAC:  MOVWF  xD3
....................  _m_code = make16(_x2,_x1); 
0EAE:  MOVFF  D3,4B
0EB2:  MOVFF  D2,4A
.................... if(_m_code > 9999)_m_code = 2350; 
0EB6:  MOVF   4B,W
0EB8:  SUBLW  26
0EBA:  BC    0ECE
0EBC:  XORLW  FF
0EBE:  BNZ   0EC6
0EC0:  MOVF   4A,W
0EC2:  SUBLW  0F
0EC4:  BC    0ECE
0EC6:  MOVLW  09
0EC8:  MOVWF  4B
0ECA:  MOVLW  2E
0ECC:  MOVWF  4A
....................  _skip_var = read_eeprom(39); 
0ECE:  MOVFF  FF2,D4
0ED2:  BCF    FF2.7
0ED4:  MOVLW  27
0ED6:  MOVWF  FA9
0ED8:  BCF    FA6.6
0EDA:  BCF    FA6.7
0EDC:  BSF    FA6.0
0EDE:  MOVF   FA8,W
0EE0:  BTFSC  xD4.7
0EE2:  BSF    FF2.7
0EE4:  MOVWF  25
.................... if( _skip_var > 1) _skip_var = 0; 
0EE6:  MOVF   25,W
0EE8:  SUBLW  01
0EEA:  BTFSS  FD8.0
0EEC:  CLRF   25
....................  
.................... if(1 != read_eeprom(40))_disk_fl = 0; 
0EEE:  MOVFF  FF2,D4
0EF2:  BCF    FF2.7
0EF4:  MOVLW  28
0EF6:  MOVWF  FA9
0EF8:  BCF    FA6.6
0EFA:  BCF    FA6.7
0EFC:  BSF    FA6.0
0EFE:  MOVF   FA8,W
0F00:  BTFSC  xD4.7
0F02:  BSF    FF2.7
0F04:  SUBLW  01
0F06:  BZ    0F0C
0F08:  BCF    26.4
.................... else _disk_fl = 1; 
0F0A:  BRA    0F0E
0F0C:  BSF    26.4
.................... if(1 != read_eeprom(41))_motor_fl = 0; 
0F0E:  MOVFF  FF2,D4
0F12:  BCF    FF2.7
0F14:  MOVLW  29
0F16:  MOVWF  FA9
0F18:  BCF    FA6.6
0F1A:  BCF    FA6.7
0F1C:  BSF    FA6.0
0F1E:  MOVF   FA8,W
0F20:  BTFSC  xD4.7
0F22:  BSF    FF2.7
0F24:  SUBLW  01
0F26:  BZ    0F2C
0F28:  BCF    xA7.6
.................... else _motor_fl = 1; 
0F2A:  BRA    0F2E
0F2C:  BSF    xA7.6
....................  
.................... _lasts = read_eeprom(100); 
0F2E:  MOVFF  FF2,D4
0F32:  BCF    FF2.7
0F34:  MOVLW  64
0F36:  MOVWF  FA9
0F38:  BCF    FA6.6
0F3A:  BCF    FA6.7
0F3C:  BSF    FA6.0
0F3E:  MOVF   FA8,W
0F40:  BTFSC  xD4.7
0F42:  BSF    FF2.7
0F44:  MOVWF  xA8
.................... if(_lasts > 5)_lasts = 0; 
0F46:  MOVF   xA8,W
0F48:  SUBLW  05
0F4A:  BTFSS  FD8.0
0F4C:  CLRF   xA8
....................  
.................... } 
0F4E:  GOTO   0F8C (RETURN)
.................... //SMALL DISPLAY++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
.................... void cd4094(int8 __data) { 
.................... int8 j; 
....................       for (j=0;j<=7;++j){ 
*
0550:  CLRF   xDC
0552:  MOVF   xDC,W
0554:  SUBLW  07
0556:  BNC   0576
....................       if(bit_test(__data,7)){ 
0558:  BTFSS  xDB.7
055A:  BRA    0560
....................          output_high(_dat_d); 
055C:  BSF    F89.2
....................       } 
....................       else{ 
055E:  BRA    0562
....................          output_low(_dat_d); 
0560:  BCF    F89.2
....................       } 
....................       rotate_left(&__data,1); 
0562:  RLNCF  xDB,F
....................       output_high(_clock_d); 
0564:  BSF    F89.3
....................       delay_us(5); //5 
0566:  MOVLW  04
0568:  MOVWF  00
056A:  DECFSZ 00,F
056C:  BRA    056A
056E:  BRA    0570
....................       output_low(_clock_d); 
0570:  BCF    F89.3
....................    } 
0572:  INCF   xDC,F
0574:  BRA    0552
.................... } 
0576:  RETLW  00
.................... // 22 BIG DISPLAY*************************************************************** 
.................... void _all_disp(void){ 
.................... int8 _c_t; 
....................  
....................      for(_c_t=1;_c_t<16;++_c_t){ 
0578:  MOVLW  01
057A:  MOVWF  xD2
057C:  MOVF   xD2,W
057E:  SUBLW  0F
0580:  BNC   05D2
....................       output_low(_strob_d); 
0582:  BCF    F89.4
....................      cd4094(seg_p[_c_t] * 16); 
0584:  CLRF   03
0586:  MOVF   xD2,W
0588:  ADDLW  C1
058A:  MOVWF  FE9
058C:  MOVLW  00
058E:  ADDWFC 03,W
0590:  MOVWF  FEA
0592:  MOVF   FEF,W
0594:  MULLW  10
0596:  MOVFF  FF3,D4
059A:  MOVFF  D4,DB
059E:  RCALL  0550
....................       cd4094(seg[_var1]); 
05A0:  CLRF   03
05A2:  MOVF   xA4,W
05A4:  ADDLW  B1
05A6:  MOVWF  FE9
05A8:  MOVLW  00
05AA:  ADDWFC 03,W
05AC:  MOVWF  FEA
05AE:  MOVFF  FEF,D3
05B2:  MOVFF  D3,DB
05B6:  RCALL  0550
....................       _dig[_c_t - 1] = _var1; 
05B8:  MOVLW  01
05BA:  SUBWF  xD2,W
05BC:  CLRF   03
05BE:  ADDLW  8C
05C0:  MOVWF  FE9
05C2:  MOVLW  00
05C4:  ADDWFC 03,W
05C6:  MOVWF  FEA
05C8:  MOVFF  A4,FEF
....................       output_high(_strob_d); 
05CC:  BSF    F89.4
....................      } 
05CE:  INCF   xD2,F
05D0:  BRA    057C
....................  
....................      for(_c_t=1;_c_t<8;++_c_t){ 
05D2:  MOVLW  01
05D4:  MOVWF  xD2
05D6:  MOVF   xD2,W
05D8:  SUBLW  07
05DA:  BNC   062A
....................       output_low(_strob_d); 
05DC:  BCF    F89.4
....................      cd4094(seg_p[_c_t]); 
05DE:  CLRF   03
05E0:  MOVF   xD2,W
05E2:  ADDLW  C1
05E4:  MOVWF  FE9
05E6:  MOVLW  00
05E8:  ADDWFC 03,W
05EA:  MOVWF  FEA
05EC:  MOVFF  FEF,D3
05F0:  MOVFF  D3,DB
05F4:  RCALL  0550
....................       cd4094(seg[_var1]); 
05F6:  CLRF   03
05F8:  MOVF   xA4,W
05FA:  ADDLW  B1
05FC:  MOVWF  FE9
05FE:  MOVLW  00
0600:  ADDWFC 03,W
0602:  MOVWF  FEA
0604:  MOVFF  FEF,D3
0608:  MOVFF  D3,DB
060C:  RCALL  0550
....................      _dig[(_c_t -1) + 15] = _var1; 
060E:  MOVLW  01
0610:  SUBWF  xD2,W
0612:  ADDLW  0F
0614:  CLRF   03
0616:  ADDLW  8C
0618:  MOVWF  FE9
061A:  MOVLW  00
061C:  ADDWFC 03,W
061E:  MOVWF  FEA
0620:  MOVFF  A4,FEF
....................      output_high(_strob_d); 
0624:  BSF    F89.4
....................      } 
0626:  INCF   xD2,F
0628:  BRA    05D6
.................... output_low(_strob_d); 
062A:  BCF    F89.4
.................... output_low(_dat_d); 
062C:  BCF    F89.2
.................... output_low(_clock_d); 
062E:  BCF    F89.3
.................... } 
0630:  RETLW  00
.................... //BIG DISPLAY************************************************************** 
.................... void _disp_data(void){ 
.................... int8 _c_t; 
....................      for(_c_t=1;_c_t<16;++_c_t){ 
*
1048:  MOVLW  01
104A:  MOVWF  xD6
104C:  MOVF   xD6,W
104E:  SUBLW  0F
1050:  BNC   10A2
....................       output_low(_strob_d); 
1052:  BCF    F89.4
....................      cd4094(seg_p[_c_t] * 16); 
1054:  CLRF   03
1056:  MOVF   xD6,W
1058:  ADDLW  C1
105A:  MOVWF  FE9
105C:  MOVLW  00
105E:  ADDWFC 03,W
1060:  MOVWF  FEA
1062:  MOVF   FEF,W
1064:  MULLW  10
1066:  MOVFF  FF3,D8
106A:  MOVFF  D8,DB
106E:  CALL   0550
....................       cd4094(seg[_dig[_c_t - 1]]); 
1072:  MOVLW  01
1074:  SUBWF  xD6,W
1076:  CLRF   03
1078:  ADDLW  8C
107A:  MOVWF  FE9
107C:  MOVLW  00
107E:  ADDWFC 03,W
1080:  MOVWF  FEA
1082:  CLRF   03
1084:  MOVF   FEF,W
1086:  ADDLW  B1
1088:  MOVWF  FE9
108A:  MOVLW  00
108C:  ADDWFC 03,W
108E:  MOVWF  FEA
1090:  MOVFF  FEF,D9
1094:  MOVFF  D9,DB
1098:  CALL   0550
....................      output_high(_strob_d); 
109C:  BSF    F89.4
....................      } 
109E:  INCF   xD6,F
10A0:  BRA    104C
....................  
....................      for(_c_t=1;_c_t<8;++_c_t){ 
10A2:  MOVLW  01
10A4:  MOVWF  xD6
10A6:  MOVF   xD6,W
10A8:  SUBLW  07
10AA:  BNC   10FA
....................      output_low(_strob_d); 
10AC:  BCF    F89.4
....................      cd4094(seg_p[_c_t]); 
10AE:  CLRF   03
10B0:  MOVF   xD6,W
10B2:  ADDLW  C1
10B4:  MOVWF  FE9
10B6:  MOVLW  00
10B8:  ADDWFC 03,W
10BA:  MOVWF  FEA
10BC:  MOVFF  FEF,D7
10C0:  MOVFF  D7,DB
10C4:  CALL   0550
....................      cd4094(seg[_dig[(_c_t -1) + 15]]); 
10C8:  MOVLW  01
10CA:  SUBWF  xD6,W
10CC:  ADDLW  0F
10CE:  CLRF   03
10D0:  ADDLW  8C
10D2:  MOVWF  FE9
10D4:  MOVLW  00
10D6:  ADDWFC 03,W
10D8:  MOVWF  FEA
10DA:  CLRF   03
10DC:  MOVF   FEF,W
10DE:  ADDLW  B1
10E0:  MOVWF  FE9
10E2:  MOVLW  00
10E4:  ADDWFC 03,W
10E6:  MOVWF  FEA
10E8:  MOVFF  FEF,DA
10EC:  MOVFF  DA,DB
10F0:  CALL   0550
....................      output_high(_strob_d); 
10F4:  BSF    F89.4
....................      } 
10F6:  INCF   xD6,F
10F8:  BRA    10A6
.................... output_low(_strob_d); 
10FA:  BCF    F89.4
.................... output_low(_dat_d); 
10FC:  BCF    F89.2
.................... output_low(_clock_d); 
10FE:  BCF    F89.3
.................... } 
1100:  RETLW  00
.................... /* 
.................... //SMALL DISPLAY++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
.................... void cd4094(int8 __data) { 
.................... int8 j; 
....................       for (j=0;j<=7;++j){ 
....................       if(bit_test(__data,7)){ 
....................          output_high(_dat_d); 
....................       } 
....................       else{ 
....................          output_low(_dat_d); 
....................       } 
....................       rotate_left(&__data,1); 
....................       output_high(_clock_d); 
....................       delay_us(5); 
....................       output_low(_clock_d); 
....................    } 
.................... } 
.................... // 22 BIG DISPLAY*************************************************************** 
.................... void _all_disp(void){ 
.................... int8 _c_t; 
.................... output_high(_strob_d); 
....................      for(_c_t=0;_c_t<22;++_c_t){ 
....................      _dig[_c_t] = _var1;; 
....................      cd4094(seg[_var1]); 
....................      } 
.................... output_low(_strob_d); 
.................... } 
.................... //BIG DISPLAY************************************************************** 
.................... void _disp_data(void){ 
.................... int8 _c_t; 
.................... output_high(_strob_d); 
....................      for(_c_t=0;_c_t<22;++_c_t){ 
....................         if(_c_t == (14 +_desi_d1) || _c_t == (6 +_desi_d2)  || _c_t == (0 + _desi_d3) )cd4094(seg[_dig[_c_t]]+128); 
....................         else cd4094(seg[_dig[_c_t]]); 
....................      } 
.................... output_low(_strob_d); 
.................... } 
.................... */ 
.................... //****************************************************************************** 
.................... void _get_time(void){ 
.................... /////////////////////////////////////GET TIME 
.................... ds1307_get_date(day,month,yr,dow); 
.................... ds1307_get_time(hrs,min,sec); 
.................... /////////////////////////////////////GET TIME 
.................... if(hrs > 23){ 
*
0B4C:  MOVF   1D,W
0B4E:  SUBLW  17
0B50:  BC    0B86
.................... hrs = 12; 
0B52:  MOVLW  0C
0B54:  MOVWF  1D
.................... min = 0; 
0B56:  CLRF   1E
.................... sec = 0; 
0B58:  CLRF   1F
.................... day = 1; 
0B5A:  MOVLW  01
0B5C:  MOVWF  1A
.................... month = 1; 
0B5E:  MOVWF  1B
.................... yr = 17; 
0B60:  MOVLW  11
0B62:  MOVWF  1C
.................... dow  = 1; 
0B64:  MOVLW  01
0B66:  MOVWF  20
.................... ds1307_set_date_time(day, month, yr,  dow,  hrs,  min,  sec); 
0B68:  MOVFF  1A,D6
0B6C:  MOVFF  1B,D7
0B70:  MOVFF  1C,D8
0B74:  MOVFF  20,D9
0B78:  MOVFF  1D,DA
0B7C:  MOVFF  1E,DB
0B80:  MOVFF  1F,DC
0B84:  RCALL  08E0
.................... } 
.................... //rtc_get_time(_hr,_min,_sec); 
.................... //rtc_get_date(_day,_mth,_year,_dow); 
.................... } 
0B86:  RETLW  00
....................  
.................... //****************************************************************************** 
.................... void _init_p(void){ 
.................... printf("%c",27); 
*
2DC4:  MOVLW  1B
2DC6:  BTFSS  F9E.4
2DC8:  BRA    2DC6
2DCA:  MOVWF  FAD
.................... printf("%c",64); 
2DCC:  MOVLW  40
2DCE:  BTFSS  F9E.4
2DD0:  BRA    2DCE
2DD2:  MOVWF  FAD
.................... delay_ms(10); 
2DD4:  MOVLW  0A
2DD6:  MOVWF  xD7
2DD8:  CALL   0FF8
.................... _rx_fl = 0; 
2DDC:  BCF    xA7.4
.................... _ir = 0; 
2DDE:  CLRF   xB0
.................... _rs232[0] = 0; 
2DE0:  CLRF   xAB
.................... printf("%c",16); 
2DE2:  MOVLW  10
2DE4:  BTFSS  F9E.4
2DE6:  BRA    2DE4
2DE8:  MOVWF  FAD
.................... printf("%c",4); 
2DEA:  MOVLW  04
2DEC:  BTFSS  F9E.4
2DEE:  BRA    2DEC
2DF0:  MOVWF  FAD
.................... printf("%c",4); 
2DF2:  MOVLW  04
2DF4:  BTFSS  F9E.4
2DF6:  BRA    2DF4
2DF8:  MOVWF  FAD
.................... delay_ms(20); 
2DFA:  MOVLW  14
2DFC:  MOVWF  xD7
2DFE:  CALL   0FF8
.................... _printer_fl = 1; 
2E02:  BSF    xA7.5
.................... } 
2E04:  GOTO   3112 (RETURN)
.................... //****************************************************************************** 
.................... void _align(int8 _al){ 
.................... printf("%c",27); 
*
2E90:  MOVLW  1B
2E92:  BTFSS  F9E.4
2E94:  BRA    2E92
2E96:  MOVWF  FAD
.................... printf("%c",97); 
2E98:  MOVLW  61
2E9A:  BTFSS  F9E.4
2E9C:  BRA    2E9A
2E9E:  MOVWF  FAD
.................... if(_al == 1)printf("%c",48); 
2EA0:  DECFSZ xD2,W
2EA2:  BRA    2EAC
2EA4:  MOVLW  30
2EA6:  BTFSS  F9E.4
2EA8:  BRA    2EA6
2EAA:  MOVWF  FAD
.................... if(_al == 2)printf("%c",49); 
2EAC:  MOVF   xD2,W
2EAE:  SUBLW  02
2EB0:  BNZ   2EBA
2EB2:  MOVLW  31
2EB4:  BTFSS  F9E.4
2EB6:  BRA    2EB4
2EB8:  MOVWF  FAD
.................... if(_al == 3)printf("%c",50); 
2EBA:  MOVF   xD2,W
2EBC:  SUBLW  03
2EBE:  BNZ   2EC8
2EC0:  MOVLW  32
2EC2:  BTFSS  F9E.4
2EC4:  BRA    2EC2
2EC6:  MOVWF  FAD
.................... delay_ms(10); 
2EC8:  MOVLW  0A
2ECA:  MOVWF  xD7
2ECC:  CALL   0FF8
.................... } 
2ED0:  RETLW  00
.................... //****************************************************************************** 
.................... void _gap(int8 _gp){ 
.................... printf("%c",27); 
2ED2:  MOVLW  1B
2ED4:  BTFSS  F9E.4
2ED6:  BRA    2ED4
2ED8:  MOVWF  FAD
.................... printf("%c",100); 
2EDA:  MOVLW  64
2EDC:  BTFSS  F9E.4
2EDE:  BRA    2EDC
2EE0:  MOVWF  FAD
.................... printf("%c",_gp); 
2EE2:  MOVF   xD2,W
2EE4:  BTFSS  F9E.4
2EE6:  BRA    2EE4
2EE8:  MOVWF  FAD
.................... delay_ms(10); 
2EEA:  MOVLW  0A
2EEC:  MOVWF  xD7
2EEE:  CALL   0FF8
.................... } 
2EF2:  RETLW  00
.................... //****************************************************************************** 
.................... void _cut(){ 
.................... printf("%c",29); 
*
30D0:  MOVLW  1D
30D2:  BTFSS  F9E.4
30D4:  BRA    30D2
30D6:  MOVWF  FAD
.................... printf("%c",86); 
30D8:  MOVLW  56
30DA:  BTFSS  F9E.4
30DC:  BRA    30DA
30DE:  MOVWF  FAD
.................... printf("%c",1); 
30E0:  MOVLW  01
30E2:  BTFSS  F9E.4
30E4:  BRA    30E2
30E6:  MOVWF  FAD
.................... delay_ms(10); 
30E8:  MOVLW  0A
30EA:  MOVWF  xD7
30EC:  CALL   0FF8
.................... } 
30F0:  GOTO   3648 (RETURN)
.................... //****************************************************************************** 
.................... void _fount(int8 _fo){ 
.................... printf("%c",27); 
*
2E08:  MOVLW  1B
2E0A:  BTFSS  F9E.4
2E0C:  BRA    2E0A
2E0E:  MOVWF  FAD
.................... printf("%c",33); 
2E10:  MOVLW  21
2E12:  BTFSS  F9E.4
2E14:  BRA    2E12
2E16:  MOVWF  FAD
.................... if(_fo == 1)printf("%c",1); 
2E18:  DECFSZ xD2,W
2E1A:  BRA    2E24
2E1C:  MOVLW  01
2E1E:  BTFSS  F9E.4
2E20:  BRA    2E1E
2E22:  MOVWF  FAD
.................... if(_fo == 2)printf("%c",1); 
2E24:  MOVF   xD2,W
2E26:  SUBLW  02
2E28:  BNZ   2E32
2E2A:  MOVLW  01
2E2C:  BTFSS  F9E.4
2E2E:  BRA    2E2C
2E30:  MOVWF  FAD
.................... if(_fo == 3)printf("%c",16); 
2E32:  MOVF   xD2,W
2E34:  SUBLW  03
2E36:  BNZ   2E40
2E38:  MOVLW  10
2E3A:  BTFSS  F9E.4
2E3C:  BRA    2E3A
2E3E:  MOVWF  FAD
.................... if(_fo == 4)printf("%c",32); 
2E40:  MOVF   xD2,W
2E42:  SUBLW  04
2E44:  BNZ   2E4E
2E46:  MOVLW  20
2E48:  BTFSS  F9E.4
2E4A:  BRA    2E48
2E4C:  MOVWF  FAD
.................... if(_fo == 5)printf("%c",48); 
2E4E:  MOVF   xD2,W
2E50:  SUBLW  05
2E52:  BNZ   2E5C
2E54:  MOVLW  30
2E56:  BTFSS  F9E.4
2E58:  BRA    2E56
2E5A:  MOVWF  FAD
.................... if(_fo == 6)printf("%c",17); 
2E5C:  MOVF   xD2,W
2E5E:  SUBLW  06
2E60:  BNZ   2E6A
2E62:  MOVLW  11
2E64:  BTFSS  F9E.4
2E66:  BRA    2E64
2E68:  MOVWF  FAD
.................... if(_fo == 7)printf("%c",33); 
2E6A:  MOVF   xD2,W
2E6C:  SUBLW  07
2E6E:  BNZ   2E78
2E70:  MOVLW  21
2E72:  BTFSS  F9E.4
2E74:  BRA    2E72
2E76:  MOVWF  FAD
.................... if(_fo == 8)printf("%c",49); 
2E78:  MOVF   xD2,W
2E7A:  SUBLW  08
2E7C:  BNZ   2E86
2E7E:  MOVLW  31
2E80:  BTFSS  F9E.4
2E82:  BRA    2E80
2E84:  MOVWF  FAD
.................... delay_ms(10); 
2E86:  MOVLW  0A
2E88:  MOVWF  xD7
2E8A:  CALL   0FF8
.................... } 
2E8E:  RETLW  00
.................... //****************************************************************************** 
.................... void _get_slip(void){ 
.................... _p_wait: 
.................... if(!input(_p_busy))goto _p_wait; 
*
30F4:  BTFSC  F82.0
30F6:  BRA    30FA
30F8:  BRA    30F4
.................... _print_on; 
30FA:  BCF    F8A.0
.................... enable_interrupts(INT_RDA); 
30FC:  BSF    F9D.5
.................... set_tris_c(0b10000110); 
30FE:  MOVLW  86
3100:  MOVWF  F94
.................... delay_ms(100); 
3102:  MOVLW  64
3104:  MOVWF  xD7
3106:  CALL   0FF8
.................... output_low(_p_busy); 
310A:  BCF    F8B.0
.................... _get_time(); 
310C:  CALL   09C0
.................... _init_p(); 
3110:  BRA    2DC4
.................... if(_printer_fl){ 
3112:  BTFSS  xA7.5
3114:  BRA    3648
.................... ++_slips; 
3116:  MOVLW  01
3118:  ADDWF  74,F
311A:  BTFSC  FD8.0
311C:  INCF   75,F
311E:  BTFSC  FD8.2
3120:  INCF   76,F
3122:  BTFSC  FD8.2
3124:  INCF   77,F
.................... _fount(3); 
3126:  MOVLW  03
3128:  MOVWF  xD2
312A:  RCALL  2E08
.................... _align(2); 
312C:  MOVLW  02
312E:  MOVWF  xD2
3130:  RCALL  2E90
.................... //printf("FAST OIL."); 
.................... //printf("%c",10); 
.................... printf("TOTAL PARCO."); 
3132:  CLRF   xD2
3134:  MOVF   xD2,W
3136:  CALL   00B6
313A:  INCF   xD2,F
313C:  MOVWF  00
313E:  MOVF   00,W
3140:  BTFSS  F9E.4
3142:  BRA    3140
3144:  MOVWF  FAD
3146:  MOVLW  0C
3148:  SUBWF  xD2,W
314A:  BNZ   3134
.................... printf("%c",10); 
314C:  MOVLW  0A
314E:  BTFSS  F9E.4
3150:  BRA    314E
3152:  MOVWF  FAD
.................... printf("Ghulam Mustafa Kerio Petroleum Services."); 
3154:  CLRF   xD2
3156:  MOVF   xD2,W
3158:  CALL   00DE
315C:  INCF   xD2,F
315E:  MOVWF  00
3160:  MOVF   00,W
3162:  BTFSS  F9E.4
3164:  BRA    3162
3166:  MOVWF  FAD
3168:  MOVLW  28
316A:  SUBWF  xD2,W
316C:  BNZ   3156
.................... printf("%c",10); 
316E:  MOVLW  0A
3170:  BTFSS  F9E.4
3172:  BRA    3170
3174:  MOVWF  FAD
.................... _gap(1); 
3176:  MOVLW  01
3178:  MOVWF  xD2
317A:  RCALL  2ED2
.................... _fount(6); 
317C:  MOVLW  06
317E:  MOVWF  xD2
3180:  RCALL  2E08
.................... _align(2); 
3182:  MOVLW  02
3184:  MOVWF  xD2
3186:  RCALL  2E90
.................... printf("Retodero Bus Terminal."); 
3188:  CLRF   xD2
318A:  MOVF   xD2,W
318C:  CALL   0122
3190:  INCF   xD2,F
3192:  MOVWF  00
3194:  MOVF   00,W
3196:  BTFSS  F9E.4
3198:  BRA    3196
319A:  MOVWF  FAD
319C:  MOVLW  16
319E:  SUBWF  xD2,W
31A0:  BNZ   318A
.................... printf("%c",10); 
31A2:  MOVLW  0A
31A4:  BTFSS  F9E.4
31A6:  BRA    31A4
31A8:  MOVWF  FAD
.................... printf("larkana."); 
31AA:  CLRF   xD2
31AC:  MOVF   xD2,W
31AE:  CALL   0154
31B2:  INCF   xD2,F
31B4:  MOVWF  00
31B6:  MOVF   00,W
31B8:  BTFSS  F9E.4
31BA:  BRA    31B8
31BC:  MOVWF  FAD
31BE:  MOVLW  08
31C0:  SUBWF  xD2,W
31C2:  BNZ   31AC
.................... printf("%c",10); 
31C4:  MOVLW  0A
31C6:  BTFSS  F9E.4
31C8:  BRA    31C6
31CA:  MOVWF  FAD
.................... _gap(1); 
31CC:  MOVLW  01
31CE:  MOVWF  xD2
31D0:  RCALL  2ED2
.................... //_fount(7); 
.................... //printf("GUJRANWALA.  Tel # 055-3261007"); 
.................... //printf("Tel 03474704780 / 03004865981"); 
.................... //printf("%c",10); 
.................... //_gap(1); 
.................... _fount(4); 
31D2:  MOVLW  04
31D4:  MOVWF  xD2
31D6:  RCALL  2E08
.................... _align(1); 
31D8:  MOVLW  01
31DA:  MOVWF  xD2
31DC:  RCALL  2E90
.................... printf("DIESEL."); 
31DE:  CLRF   xD2
31E0:  MOVF   xD2,W
31E2:  CALL   0178
31E6:  INCF   xD2,F
31E8:  MOVWF  00
31EA:  MOVF   00,W
31EC:  BTFSS  F9E.4
31EE:  BRA    31EC
31F0:  MOVWF  FAD
31F2:  MOVLW  07
31F4:  SUBWF  xD2,W
31F6:  BNZ   31E0
.................... //printf("PETROL."); 
.................... printf("%c",10); 
31F8:  MOVLW  0A
31FA:  BTFSS  F9E.4
31FC:  BRA    31FA
31FE:  MOVWF  FAD
.................... printf("Nozel No   10  "); 
3200:  CLRF   xD2
3202:  MOVF   xD2,W
3204:  CALL   019A
3208:  INCF   xD2,F
320A:  MOVWF  00
320C:  MOVF   00,W
320E:  BTFSS  F9E.4
3210:  BRA    320E
3212:  MOVWF  FAD
3214:  MOVLW  08
3216:  SUBWF  xD2,W
3218:  BNZ   3202
321A:  MOVLW  03
321C:  MOVWF  xD3
321E:  MOVLW  20
3220:  BTFSS  F9E.4
3222:  BRA    3220
3224:  MOVWF  FAD
3226:  DECFSZ xD3,F
3228:  BRA    321E
322A:  MOVLW  08
322C:  MOVWF  xD4
322E:  MOVF   xD4,W
3230:  CALL   019A
3234:  INCF   xD4,F
3236:  MOVWF  00
3238:  MOVF   00,W
323A:  BTFSS  F9E.4
323C:  BRA    323A
323E:  MOVWF  FAD
3240:  MOVLW  0C
3242:  SUBWF  xD4,W
3244:  BNZ   322E
.................... printf("%c",10); 
3246:  MOVLW  0A
3248:  BTFSS  F9E.4
324A:  BRA    3248
324C:  MOVWF  FAD
.................... printf("Slip  No.  "); 
324E:  CLRF   xD2
3250:  MOVF   xD2,W
3252:  CALL   01C2
3256:  INCF   xD2,F
3258:  MOVWF  00
325A:  MOVF   00,W
325C:  BTFSS  F9E.4
325E:  BRA    325C
3260:  MOVWF  FAD
3262:  MOVLW  0B
3264:  SUBWF  xD2,W
3266:  BNZ   3250
.................... printf("%lu",_slips); 
3268:  MOVLW  41
326A:  MOVWF  FE9
326C:  MOVFF  77,D9
3270:  MOVFF  76,D8
3274:  MOVFF  75,D7
3278:  MOVFF  74,D6
327C:  RCALL  2EF4
.................... printf("%c",10); 
327E:  MOVLW  0A
3280:  BTFSS  F9E.4
3282:  BRA    3280
3284:  MOVWF  FAD
.................... printf("Date:"); 
3286:  CLRF   xD2
3288:  MOVF   xD2,W
328A:  CALL   01E8
328E:  INCF   xD2,F
3290:  MOVWF  00
3292:  MOVF   00,W
3294:  BTFSS  F9E.4
3296:  BRA    3294
3298:  MOVWF  FAD
329A:  MOVLW  05
329C:  SUBWF  xD2,W
329E:  BNZ   3288
.................... printf("%02u-",day); 
32A0:  MOVFF  1A,D2
32A4:  MOVLW  01
32A6:  MOVWF  xD3
32A8:  RCALL  2FBC
32AA:  MOVLW  2D
32AC:  BTFSS  F9E.4
32AE:  BRA    32AC
32B0:  MOVWF  FAD
.................... printf("%02u-20",month); 
32B2:  MOVFF  1B,D2
32B6:  MOVLW  01
32B8:  MOVWF  xD3
32BA:  RCALL  2FBC
32BC:  MOVLW  2D
32BE:  BTFSS  F9E.4
32C0:  BRA    32BE
32C2:  MOVWF  FAD
32C4:  MOVLW  32
32C6:  BTFSS  F9E.4
32C8:  BRA    32C6
32CA:  MOVWF  FAD
32CC:  MOVLW  30
32CE:  BTFSS  F9E.4
32D0:  BRA    32CE
32D2:  MOVWF  FAD
.................... printf("%02u ",yr); 
32D4:  MOVFF  1C,D2
32D8:  MOVLW  01
32DA:  MOVWF  xD3
32DC:  RCALL  2FBC
32DE:  MOVLW  20
32E0:  BTFSS  F9E.4
32E2:  BRA    32E0
32E4:  MOVWF  FAD
.................... printf("%02u:",hrs); 
32E6:  MOVFF  1D,D2
32EA:  MOVLW  01
32EC:  MOVWF  xD3
32EE:  RCALL  2FBC
32F0:  MOVLW  3A
32F2:  BTFSS  F9E.4
32F4:  BRA    32F2
32F6:  MOVWF  FAD
.................... printf("%02u:",min); 
32F8:  MOVFF  1E,D2
32FC:  MOVLW  01
32FE:  MOVWF  xD3
3300:  RCALL  2FBC
3302:  MOVLW  3A
3304:  BTFSS  F9E.4
3306:  BRA    3304
3308:  MOVWF  FAD
.................... printf("%02u",sec); 
330A:  MOVFF  1F,D2
330E:  MOVLW  01
3310:  MOVWF  xD3
3312:  RCALL  2FBC
.................... printf("%c",10); 
3314:  MOVLW  0A
3316:  BTFSS  F9E.4
3318:  BRA    3316
331A:  MOVWF  FAD
.................... _gap(1); 
331C:  MOVLW  01
331E:  MOVWF  xD2
3320:  RCALL  2ED2
.................... printf("Vehicle No.  __________"); 
3322:  CLRF   xD2
3324:  MOVF   xD2,W
3326:  CALL   0208
332A:  INCF   xD2,F
332C:  MOVWF  00
332E:  MOVF   00,W
3330:  BTFSS  F9E.4
3332:  BRA    3330
3334:  MOVWF  FAD
3336:  MOVLW  0D
3338:  SUBWF  xD2,W
333A:  BNZ   3324
333C:  MOVLW  0A
333E:  MOVWF  xD3
3340:  MOVLW  5F
3342:  BTFSS  F9E.4
3344:  BRA    3342
3346:  MOVWF  FAD
3348:  DECFSZ xD3,F
334A:  BRA    3340
.................... printf("%c",10); 
334C:  MOVLW  0A
334E:  BTFSS  F9E.4
3350:  BRA    334E
3352:  MOVWF  FAD
.................... printf("AMOUNT  Rs.:  "); 
3354:  CLRF   xD2
3356:  MOVF   xD2,W
3358:  CALL   0230
335C:  INCF   xD2,F
335E:  MOVWF  00
3360:  MOVF   00,W
3362:  BTFSS  F9E.4
3364:  BRA    3362
3366:  MOVWF  FAD
3368:  MOVLW  0E
336A:  SUBWF  xD2,W
336C:  BNZ   3356
336E:  CLRF   18
3370:  BTFSC  FF2.7
3372:  BSF    18.7
3374:  BCF    FF2.7
.................... printf("%lu.",_rupee / 100); 
3376:  MOVFF  4F,FA
337A:  MOVFF  4E,F9
337E:  MOVFF  4D,F8
3382:  MOVFF  4C,F7
3386:  CLRF   xFE
3388:  CLRF   xFD
338A:  CLRF   xFC
338C:  MOVLW  64
338E:  MOVWF  xFB
3390:  CALL   0376
3394:  BTFSC  18.7
3396:  BSF    FF2.7
3398:  MOVFF  03,D5
339C:  MOVFF  02,D4
33A0:  MOVFF  01,D3
33A4:  MOVFF  00,D2
33A8:  MOVLW  41
33AA:  MOVWF  FE9
33AC:  MOVFF  03,D9
33B0:  MOVFF  02,D8
33B4:  MOVFF  01,D7
33B8:  MOVFF  00,D6
33BC:  RCALL  2EF4
33BE:  MOVLW  2E
33C0:  BTFSS  F9E.4
33C2:  BRA    33C0
33C4:  MOVWF  FAD
33C6:  CLRF   18
33C8:  BTFSC  FF2.7
33CA:  BSF    18.7
33CC:  BCF    FF2.7
.................... printf("%02lu  ",_rupee % 100); 
33CE:  MOVFF  4F,FA
33D2:  MOVFF  4E,F9
33D6:  MOVFF  4D,F8
33DA:  MOVFF  4C,F7
33DE:  CLRF   xFE
33E0:  CLRF   xFD
33E2:  CLRF   xFC
33E4:  MOVLW  64
33E6:  MOVWF  xFB
33E8:  CALL   0376
33EC:  BTFSC  18.7
33EE:  BSF    FF2.7
33F0:  MOVFF  FEF,D2
33F4:  MOVFF  FEC,D3
33F8:  MOVFF  FEC,D4
33FC:  MOVFF  FEC,D5
3400:  MOVLW  42
3402:  MOVWF  FE9
3404:  MOVFF  D5,D9
3408:  MOVFF  D4,D8
340C:  MOVFF  D3,D7
3410:  MOVFF  D2,D6
3414:  RCALL  2EF4
3416:  MOVLW  20
3418:  BTFSS  F9E.4
341A:  BRA    3418
341C:  MOVWF  FAD
341E:  MOVLW  20
3420:  BTFSS  F9E.4
3422:  BRA    3420
3424:  MOVWF  FAD
.................... printf("%c",10); 
3426:  MOVLW  0A
3428:  BTFSS  F9E.4
342A:  BRA    3428
342C:  MOVWF  FAD
.................... printf("QTY. Lit.  :  "); 
342E:  CLRF   xD2
3430:  MOVF   xD2,W
3432:  CALL   025A
3436:  INCF   xD2,F
3438:  MOVWF  00
343A:  MOVF   00,W
343C:  BTFSS  F9E.4
343E:  BRA    343C
3440:  MOVWF  FAD
3442:  MOVLW  0E
3444:  SUBWF  xD2,W
3446:  BNZ   3430
3448:  CLRF   18
344A:  BTFSC  FF2.7
344C:  BSF    18.7
344E:  BCF    FF2.7
.................... printf("%lu.",_liters / 100); 
3450:  MOVFF  53,FA
3454:  MOVFF  52,F9
3458:  MOVFF  51,F8
345C:  MOVFF  50,F7
3460:  CLRF   xFE
3462:  CLRF   xFD
3464:  CLRF   xFC
3466:  MOVLW  64
3468:  MOVWF  xFB
346A:  CALL   0376
346E:  BTFSC  18.7
3470:  BSF    FF2.7
3472:  MOVFF  03,D5
3476:  MOVFF  02,D4
347A:  MOVFF  01,D3
347E:  MOVFF  00,D2
3482:  MOVLW  41
3484:  MOVWF  FE9
3486:  MOVFF  03,D9
348A:  MOVFF  02,D8
348E:  MOVFF  01,D7
3492:  MOVFF  00,D6
3496:  RCALL  2EF4
3498:  MOVLW  2E
349A:  BTFSS  F9E.4
349C:  BRA    349A
349E:  MOVWF  FAD
34A0:  CLRF   18
34A2:  BTFSC  FF2.7
34A4:  BSF    18.7
34A6:  BCF    FF2.7
.................... printf("%02lu  ",_liters % 100); 
34A8:  MOVFF  53,FA
34AC:  MOVFF  52,F9
34B0:  MOVFF  51,F8
34B4:  MOVFF  50,F7
34B8:  CLRF   xFE
34BA:  CLRF   xFD
34BC:  CLRF   xFC
34BE:  MOVLW  64
34C0:  MOVWF  xFB
34C2:  CALL   0376
34C6:  BTFSC  18.7
34C8:  BSF    FF2.7
34CA:  MOVFF  FEF,D2
34CE:  MOVFF  FEC,D3
34D2:  MOVFF  FEC,D4
34D6:  MOVFF  FEC,D5
34DA:  MOVLW  42
34DC:  MOVWF  FE9
34DE:  MOVFF  D5,D9
34E2:  MOVFF  D4,D8
34E6:  MOVFF  D3,D7
34EA:  MOVFF  D2,D6
34EE:  RCALL  2EF4
34F0:  MOVLW  20
34F2:  BTFSS  F9E.4
34F4:  BRA    34F2
34F6:  MOVWF  FAD
34F8:  MOVLW  20
34FA:  BTFSS  F9E.4
34FC:  BRA    34FA
34FE:  MOVWF  FAD
.................... printf("%c",10); 
3500:  MOVLW  0A
3502:  BTFSS  F9E.4
3504:  BRA    3502
3506:  MOVWF  FAD
.................... printf("RATE / Lit.:  "); 
3508:  CLRF   xD2
350A:  MOVF   xD2,W
350C:  CALL   0284
3510:  INCF   xD2,F
3512:  MOVWF  00
3514:  MOVF   00,W
3516:  BTFSS  F9E.4
3518:  BRA    3516
351A:  MOVWF  FAD
351C:  MOVLW  0E
351E:  SUBWF  xD2,W
3520:  BNZ   350A
.................... printf("%lu.",_rate / 100); 
3522:  MOVFF  47,D9
3526:  MOVFF  46,D8
352A:  CLRF   xDB
352C:  MOVLW  64
352E:  MOVWF  xDA
3530:  CALL   18EA
3534:  MOVFF  02,D3
3538:  MOVFF  01,D2
353C:  MOVLW  10
353E:  MOVWF  FE9
3540:  MOVFF  02,D5
3544:  MOVFF  01,D4
3548:  RCALL  302C
354A:  MOVLW  2E
354C:  BTFSS  F9E.4
354E:  BRA    354C
3550:  MOVWF  FAD
.................... printf("%02lu  ",_rate % 100); 
3552:  MOVFF  47,D9
3556:  MOVFF  46,D8
355A:  CLRF   xDB
355C:  MOVLW  64
355E:  MOVWF  xDA
3560:  CALL   18EA
3564:  MOVFF  00,D2
3568:  MOVFF  03,D3
356C:  MOVLW  0B
356E:  MOVWF  FE9
3570:  MOVFF  03,D5
3574:  MOVFF  00,D4
3578:  RCALL  302C
357A:  MOVLW  20
357C:  BTFSS  F9E.4
357E:  BRA    357C
3580:  MOVWF  FAD
3582:  MOVLW  20
3584:  BTFSS  F9E.4
3586:  BRA    3584
3588:  MOVWF  FAD
.................... printf("%c",10); 
358A:  MOVLW  0A
358C:  BTFSS  F9E.4
358E:  BRA    358C
3590:  MOVWF  FAD
.................... _gap(1); 
3592:  MOVLW  01
3594:  MOVWF  xD2
3596:  RCALL  2ED2
.................... _fount(4); 
3598:  MOVLW  04
359A:  MOVWF  xD2
359C:  RCALL  2E08
.................... //printf("Contact: Malik Abdul Khaliq."); 
.................... printf("Complaint and suggestion."); 
359E:  CLRF   xD2
35A0:  MOVF   xD2,W
35A2:  CALL   02AE
35A6:  INCF   xD2,F
35A8:  MOVWF  00
35AA:  MOVF   00,W
35AC:  BTFSS  F9E.4
35AE:  BRA    35AC
35B0:  MOVWF  FAD
35B2:  MOVLW  19
35B4:  SUBWF  xD2,W
35B6:  BNZ   35A0
.................... printf("%c",10); 
35B8:  MOVLW  0A
35BA:  BTFSS  F9E.4
35BC:  BRA    35BA
35BE:  MOVWF  FAD
.................... _fount(4); 
35C0:  MOVLW  04
35C2:  MOVWF  xD2
35C4:  RCALL  2E08
.................... //printf("Mob :  0305-2855082"); 
.................... //printf("%c",10); 
.................... printf("Mob :  0335-3394498"); 
35C6:  CLRF   xD2
35C8:  MOVF   xD2,W
35CA:  CALL   02E2
35CE:  INCF   xD2,F
35D0:  MOVWF  00
35D2:  MOVF   00,W
35D4:  BTFSS  F9E.4
35D6:  BRA    35D4
35D8:  MOVWF  FAD
35DA:  MOVLW  13
35DC:  SUBWF  xD2,W
35DE:  BNZ   35C8
.................... printf("%c",10); 
35E0:  MOVLW  0A
35E2:  BTFSS  F9E.4
35E4:  BRA    35E2
35E6:  MOVWF  FAD
.................... _gap(1); 
35E8:  MOVLW  01
35EA:  MOVWF  xD2
35EC:  RCALL  2ED2
.................... _align(2); 
35EE:  MOVLW  02
35F0:  MOVWF  xD2
35F2:  RCALL  2E90
.................... printf("24/7 Hours Service."); 
35F4:  CLRF   xD2
35F6:  MOVF   xD2,W
35F8:  CALL   0310
35FC:  INCF   xD2,F
35FE:  MOVWF  00
3600:  MOVF   00,W
3602:  BTFSS  F9E.4
3604:  BRA    3602
3606:  MOVWF  FAD
3608:  MOVLW  13
360A:  SUBWF  xD2,W
360C:  BNZ   35F6
.................... printf("%c",10); 
360E:  MOVLW  0A
3610:  BTFSS  F9E.4
3612:  BRA    3610
3614:  MOVWF  FAD
.................... _fount(7); 
3616:  MOVLW  07
3618:  MOVWF  xD2
361A:  CALL   2E08
.................... printf("Thank you. Please Come again."); 
361E:  CLRF   xD2
3620:  MOVF   xD2,W
3622:  CALL   033E
3626:  INCF   xD2,F
3628:  MOVWF  00
362A:  MOVF   00,W
362C:  BTFSS  F9E.4
362E:  BRA    362C
3630:  MOVWF  FAD
3632:  MOVLW  1D
3634:  SUBWF  xD2,W
3636:  BNZ   3620
.................... printf("%c",10); 
3638:  MOVLW  0A
363A:  BTFSS  F9E.4
363C:  BRA    363A
363E:  MOVWF  FAD
.................... _gap(5); 
3640:  MOVLW  05
3642:  MOVWF  xD2
3644:  RCALL  2ED2
.................... _cut(); 
3646:  BRA    30D0
.................... } 
.................... output_high(_p_busy); 
3648:  BSF    F8B.0
.................... _print_off; 
364A:  BSF    F8A.0
.................... set_tris_c(0b10000111); 
364C:  MOVLW  87
364E:  MOVWF  F94
.................... //disable_interrupts(INT_RDA); 
.................... } 
3650:  GOTO   4A82 (RETURN)
.................... //****************************************************************************** 
.................... void _init_system(void){ 
....................    set_tris_a(0b00000000); 
*
0F52:  MOVLW  00
0F54:  MOVWF  F92
....................    set_tris_b(0b10000010); 
0F56:  MOVLW  82
0F58:  MOVWF  F93
....................    set_tris_c(0b10000111); 
0F5A:  MOVLW  87
0F5C:  MOVWF  F94
....................    set_tris_d(0b00001000); 
0F5E:  MOVLW  08
0F60:  MOVWF  F95
....................    set_tris_e(0b00000000); 
0F62:  BCF    F96.0
0F64:  BCF    F96.1
0F66:  BCF    F96.2
.................... //   _d_count = 100; 
.................... // SETUP_ADC_PORTS(NO_ANALOGS); 
....................  enable_interrupts(GLOBAL); 
0F68:  MOVLW  C0
0F6A:  IORWF  FF2,F
.................... enable_interrupts(INT_RDA); 
0F6C:  BSF    F9D.5
.................... // disable_interrupts(INT_EXT); 
....................  _buz_off; 
0F6E:  BSF    F8A.3
....................  disable_interrupts(INT_Timer2); 
0F70:  BCF    F9D.1
....................  setup_timer_2 (T2_DIV_BY_16, 255, 16); 
0F72:  MOVLW  78
0F74:  IORLW  06
0F76:  MOVWF  FCA
0F78:  MOVLW  FF
0F7A:  MOVWF  FCB
.................... _var1 = _clear; 
0F7C:  MOVLW  0F
0F7E:  MOVWF  xA4
.................... _all_disp(); 
0F80:  CALL   0578
.................... ds1307_init(); 
0F84:  GOTO   074E
.................... _get_time(); 
0F88:  RCALL  09C0
.................... _r_eerom(); 
0F8A:  BRA    0C32
.................... _rupee = 0; 
0F8C:  CLRF   4F
0F8E:  CLRF   4E
0F90:  CLRF   4D
0F92:  CLRF   4C
.................... _noz_fl = 1; 
0F94:  BSF    xA6.0
.................... _skip_fl = 0; 
0F96:  BCF    26.3
.................... _motor_off; 
0F98:  BSF    F8A.4
.................... _sov1_off; 
0F9A:  BSF    F8A.5
.................... _sov2_off; 
0F9C:  BSF    F8A.6
.................... _on_fl=0; 
0F9E:  BCF    xA6.2
.................... _totelizer_off; 
0FA0:  BSF    F8C.0
.................... _tm2_off; 
0FA2:  BCF    F8C.5
.................... _print_off; 
0FA4:  BSF    F8A.0
.................... _incr_fl = 0; 
0FA6:  BCF    xA6.3
.................... _pl_fl = 0; 
0FA8:  BCF    xA7.0
.................... _price = 0; 
0FAA:  CLRF   57
0FAC:  CLRF   56
0FAE:  CLRF   55
0FB0:  CLRF   54
.................... _petrol = 0; 
0FB2:  CLRF   5B
0FB4:  CLRF   5A
0FB6:  CLRF   59
0FB8:  CLRF   58
.................... _oil_fl = 0; 
0FBA:  BCF    xA6.6
.................... _tc_fl = 0; 
0FBC:  BCF    xA6.7
.................... _liter_fl = 0; 
0FBE:  BCF    xA7.2
.................... _price_fl = 0; 
0FC0:  BCF    xA6.5
.................... //_date = 0512014; 
.................... _t =  13; 
0FC2:  MOVLW  0D
0FC4:  MOVWF  3C
.................... _c =  11; 
0FC6:  MOVLW  0B
0FC8:  MOVWF  3B
.................... _r =  14; 
0FCA:  MOVLW  0E
0FCC:  MOVWF  3D
.................... _s =  15; 
0FCE:  MOVLW  0F
0FD0:  MOVWF  3E
.................... _l =  16; 
0FD2:  MOVLW  10
0FD4:  MOVWF  3A
.................... _p =  12; 
0FD6:  MOVLW  0C
0FD8:  MOVWF  39
.................... _P1 = 17; 
0FDA:  MOVLW  11
0FDC:  MOVWF  34
.................... _P2 = 18; 
0FDE:  MOVLW  12
0FE0:  MOVWF  35
.................... _P3 = 19; 
0FE2:  MOVLW  13
0FE4:  MOVWF  36
.................... _P4 = 20; 
0FE6:  MOVLW  14
0FE8:  MOVWF  37
.................... _P5 = 21; 
0FEA:  MOVLW  15
0FEC:  MOVWF  38
.................... _code_seq = 0; 
0FEE:  CLRF   21
.................... _code_id  = 0; 
0FF0:  CLRF   2C
0FF2:  CLRF   2B
.................... } 
0FF4:  GOTO   45A0 (RETURN)
.................... //****************************************************************************** 
.................... void _all_disp1(int32  _var_all ){ 
.................... int32 _pp2; 
.................... _dd1d = _var_all; 
*
1156:  MOVFF  DF,83
115A:  MOVFF  DE,82
115E:  MOVFF  DD,81
1162:  MOVFF  DC,80
.................... _pp2 = _dd1d; 
1166:  MOVFF  83,E3
116A:  MOVFF  82,E2
116E:  MOVFF  81,E1
1172:  MOVFF  80,E0
.................... IF(_dd1d < _kror){ 
1176:  MOVF   x83,F
1178:  BNZ   1196
117A:  MOVF   x82,W
117C:  SUBLW  98
117E:  BNC   1196
1180:  BNZ   1190
1182:  MOVF   x81,W
1184:  SUBLW  96
1186:  BNC   1196
1188:  BNZ   1190
118A:  MOVF   x80,W
118C:  SUBLW  7F
118E:  BNC   1196
.................... _d1 = _clear; 
1190:  MOVLW  0F
1192:  MOVWF  x96
.................... }else{ 
1194:  BRA    1206
1196:  CLRF   18
1198:  BTFSC  FF2.7
119A:  BSF    18.7
119C:  BCF    FF2.7
.................... _d1 = _pp2 / _kror; 
119E:  MOVFF  E3,FA
11A2:  MOVFF  E2,F9
11A6:  MOVFF  E1,F8
11AA:  MOVFF  E0,F7
11AE:  CLRF   xFE
11B0:  MOVLW  98
11B2:  MOVWF  xFD
11B4:  MOVLW  96
11B6:  MOVWF  xFC
11B8:  MOVLW  80
11BA:  MOVWF  xFB
11BC:  CALL   0376
11C0:  BTFSC  18.7
11C2:  BSF    FF2.7
11C4:  MOVFF  00,96
11C8:  CLRF   18
11CA:  BTFSC  FF2.7
11CC:  BSF    18.7
11CE:  BCF    FF2.7
.................... _pp2 = _pp2 % _kror; 
11D0:  MOVFF  E3,FA
11D4:  MOVFF  E2,F9
11D8:  MOVFF  E1,F8
11DC:  MOVFF  E0,F7
11E0:  CLRF   xFE
11E2:  MOVLW  98
11E4:  MOVWF  xFD
11E6:  MOVLW  96
11E8:  MOVWF  xFC
11EA:  MOVLW  80
11EC:  MOVWF  xFB
11EE:  CALL   0376
11F2:  BTFSC  18.7
11F4:  BSF    FF2.7
11F6:  MOVFF  FEF,E0
11FA:  MOVFF  FEC,E1
11FE:  MOVFF  FEC,E2
1202:  MOVFF  FEC,E3
.................... } 
.................... IF(_dd1d < _ten_lakh){ 
1206:  MOVF   x83,F
1208:  BNZ   1226
120A:  MOVF   x82,W
120C:  SUBLW  0F
120E:  BNC   1226
1210:  BNZ   1220
1212:  MOVF   x81,W
1214:  SUBLW  42
1216:  BNC   1226
1218:  BNZ   1220
121A:  MOVF   x80,W
121C:  SUBLW  3F
121E:  BNC   1226
.................... _d2 = _clear; 
1220:  MOVLW  0F
1222:  MOVWF  x93
.................... }else{ 
1224:  BRA    1296
1226:  CLRF   18
1228:  BTFSC  FF2.7
122A:  BSF    18.7
122C:  BCF    FF2.7
.................... _d2 = _pp2 /_ten_lakh; 
122E:  MOVFF  E3,FA
1232:  MOVFF  E2,F9
1236:  MOVFF  E1,F8
123A:  MOVFF  E0,F7
123E:  CLRF   xFE
1240:  MOVLW  0F
1242:  MOVWF  xFD
1244:  MOVLW  42
1246:  MOVWF  xFC
1248:  MOVLW  40
124A:  MOVWF  xFB
124C:  CALL   0376
1250:  BTFSC  18.7
1252:  BSF    FF2.7
1254:  MOVFF  00,93
1258:  CLRF   18
125A:  BTFSC  FF2.7
125C:  BSF    18.7
125E:  BCF    FF2.7
.................... _pp2 = _pp2 % _ten_lakh; 
1260:  MOVFF  E3,FA
1264:  MOVFF  E2,F9
1268:  MOVFF  E1,F8
126C:  MOVFF  E0,F7
1270:  CLRF   xFE
1272:  MOVLW  0F
1274:  MOVWF  xFD
1276:  MOVLW  42
1278:  MOVWF  xFC
127A:  MOVLW  40
127C:  MOVWF  xFB
127E:  CALL   0376
1282:  BTFSC  18.7
1284:  BSF    FF2.7
1286:  MOVFF  FEF,E0
128A:  MOVFF  FEC,E1
128E:  MOVFF  FEC,E2
1292:  MOVFF  FEC,E3
.................... } 
.................... IF(_dd1d < _lakh){ 
1296:  MOVF   x83,F
1298:  BNZ   12B6
129A:  MOVF   x82,W
129C:  SUBLW  01
129E:  BNC   12B6
12A0:  BNZ   12B0
12A2:  MOVF   x81,W
12A4:  SUBLW  86
12A6:  BNC   12B6
12A8:  BNZ   12B0
12AA:  MOVF   x80,W
12AC:  SUBLW  9F
12AE:  BNC   12B6
.................... _d3 = _clear; 
12B0:  MOVLW  0F
12B2:  MOVWF  x94
.................... }else{ 
12B4:  BRA    1326
12B6:  CLRF   18
12B8:  BTFSC  FF2.7
12BA:  BSF    18.7
12BC:  BCF    FF2.7
.................... _d3 = _pp2 /_lakh; 
12BE:  MOVFF  E3,FA
12C2:  MOVFF  E2,F9
12C6:  MOVFF  E1,F8
12CA:  MOVFF  E0,F7
12CE:  CLRF   xFE
12D0:  MOVLW  01
12D2:  MOVWF  xFD
12D4:  MOVLW  86
12D6:  MOVWF  xFC
12D8:  MOVLW  A0
12DA:  MOVWF  xFB
12DC:  CALL   0376
12E0:  BTFSC  18.7
12E2:  BSF    FF2.7
12E4:  MOVFF  00,94
12E8:  CLRF   18
12EA:  BTFSC  FF2.7
12EC:  BSF    18.7
12EE:  BCF    FF2.7
.................... _pp2 = _pp2 % _lakh; 
12F0:  MOVFF  E3,FA
12F4:  MOVFF  E2,F9
12F8:  MOVFF  E1,F8
12FC:  MOVFF  E0,F7
1300:  CLRF   xFE
1302:  MOVLW  01
1304:  MOVWF  xFD
1306:  MOVLW  86
1308:  MOVWF  xFC
130A:  MOVLW  A0
130C:  MOVWF  xFB
130E:  CALL   0376
1312:  BTFSC  18.7
1314:  BSF    FF2.7
1316:  MOVFF  FEF,E0
131A:  MOVFF  FEC,E1
131E:  MOVFF  FEC,E2
1322:  MOVFF  FEC,E3
.................... } 
.................... IF(_dd1d < _ten_th){ 
1326:  MOVF   x83,F
1328:  BNZ   1342
132A:  MOVF   x82,F
132C:  BNZ   1342
132E:  MOVF   x81,W
1330:  SUBLW  27
1332:  BNC   1342
1334:  BNZ   133C
1336:  MOVF   x80,W
1338:  SUBLW  0F
133A:  BNC   1342
.................... _d4 = _clear; 
133C:  MOVLW  0F
133E:  MOVWF  x99
.................... }else{ 
1340:  BRA    13AE
1342:  CLRF   18
1344:  BTFSC  FF2.7
1346:  BSF    18.7
1348:  BCF    FF2.7
.................... _d4 = _pp2 /_ten_th; 
134A:  MOVFF  E3,FA
134E:  MOVFF  E2,F9
1352:  MOVFF  E1,F8
1356:  MOVFF  E0,F7
135A:  CLRF   xFE
135C:  CLRF   xFD
135E:  MOVLW  27
1360:  MOVWF  xFC
1362:  MOVLW  10
1364:  MOVWF  xFB
1366:  CALL   0376
136A:  BTFSC  18.7
136C:  BSF    FF2.7
136E:  MOVFF  00,99
1372:  CLRF   18
1374:  BTFSC  FF2.7
1376:  BSF    18.7
1378:  BCF    FF2.7
.................... _pp2 = _pp2 % _ten_th; 
137A:  MOVFF  E3,FA
137E:  MOVFF  E2,F9
1382:  MOVFF  E1,F8
1386:  MOVFF  E0,F7
138A:  CLRF   xFE
138C:  CLRF   xFD
138E:  MOVLW  27
1390:  MOVWF  xFC
1392:  MOVLW  10
1394:  MOVWF  xFB
1396:  CALL   0376
139A:  BTFSC  18.7
139C:  BSF    FF2.7
139E:  MOVFF  FEF,E0
13A2:  MOVFF  FEC,E1
13A6:  MOVFF  FEC,E2
13AA:  MOVFF  FEC,E3
.................... } 
.................... IF(_dd1d < _thou){ 
13AE:  MOVF   x83,F
13B0:  BNZ   13CA
13B2:  MOVF   x82,F
13B4:  BNZ   13CA
13B6:  MOVF   x81,W
13B8:  SUBLW  03
13BA:  BNC   13CA
13BC:  BNZ   13C4
13BE:  MOVF   x80,W
13C0:  SUBLW  E7
13C2:  BNC   13CA
.................... _d5 = _clear; 
13C4:  MOVLW  0F
13C6:  MOVWF  x9A
.................... }else{ 
13C8:  BRA    1436
13CA:  CLRF   18
13CC:  BTFSC  FF2.7
13CE:  BSF    18.7
13D0:  BCF    FF2.7
.................... _d5 = _pp2 /_thou; 
13D2:  MOVFF  E3,FA
13D6:  MOVFF  E2,F9
13DA:  MOVFF  E1,F8
13DE:  MOVFF  E0,F7
13E2:  CLRF   xFE
13E4:  CLRF   xFD
13E6:  MOVLW  03
13E8:  MOVWF  xFC
13EA:  MOVLW  E8
13EC:  MOVWF  xFB
13EE:  CALL   0376
13F2:  BTFSC  18.7
13F4:  BSF    FF2.7
13F6:  MOVFF  00,9A
13FA:  CLRF   18
13FC:  BTFSC  FF2.7
13FE:  BSF    18.7
1400:  BCF    FF2.7
.................... _pp2 = _pp2 % _thou; 
1402:  MOVFF  E3,FA
1406:  MOVFF  E2,F9
140A:  MOVFF  E1,F8
140E:  MOVFF  E0,F7
1412:  CLRF   xFE
1414:  CLRF   xFD
1416:  MOVLW  03
1418:  MOVWF  xFC
141A:  MOVLW  E8
141C:  MOVWF  xFB
141E:  CALL   0376
1422:  BTFSC  18.7
1424:  BSF    FF2.7
1426:  MOVFF  FEF,E0
142A:  MOVFF  FEC,E1
142E:  MOVFF  FEC,E2
1432:  MOVFF  FEC,E3
1436:  CLRF   18
1438:  BTFSC  FF2.7
143A:  BSF    18.7
143C:  BCF    FF2.7
.................... } 
.................... _d6 = _pp2 /_hund; 
143E:  MOVFF  E3,FA
1442:  MOVFF  E2,F9
1446:  MOVFF  E1,F8
144A:  MOVFF  E0,F7
144E:  CLRF   xFE
1450:  CLRF   xFD
1452:  CLRF   xFC
1454:  MOVLW  64
1456:  MOVWF  xFB
1458:  CALL   0376
145C:  BTFSC  18.7
145E:  BSF    FF2.7
1460:  MOVFF  00,97
1464:  CLRF   18
1466:  BTFSC  FF2.7
1468:  BSF    18.7
146A:  BCF    FF2.7
.................... _pp2 = _pp2 % _hund; 
146C:  MOVFF  E3,FA
1470:  MOVFF  E2,F9
1474:  MOVFF  E1,F8
1478:  MOVFF  E0,F7
147C:  CLRF   xFE
147E:  CLRF   xFD
1480:  CLRF   xFC
1482:  MOVLW  64
1484:  MOVWF  xFB
1486:  CALL   0376
148A:  BTFSC  18.7
148C:  BSF    FF2.7
148E:  MOVFF  FEF,E0
1492:  MOVFF  FEC,E1
1496:  MOVFF  FEC,E2
149A:  MOVFF  FEC,E3
149E:  CLRF   18
14A0:  BTFSC  FF2.7
14A2:  BSF    18.7
14A4:  BCF    FF2.7
.................... _d7 = _pp2 / _ten; 
14A6:  MOVFF  E3,FA
14AA:  MOVFF  E2,F9
14AE:  MOVFF  E1,F8
14B2:  MOVFF  E0,F7
14B6:  CLRF   xFE
14B8:  CLRF   xFD
14BA:  CLRF   xFC
14BC:  MOVLW  0A
14BE:  MOVWF  xFB
14C0:  CALL   0376
14C4:  BTFSC  18.7
14C6:  BSF    FF2.7
14C8:  MOVFF  00,98
14CC:  CLRF   18
14CE:  BTFSC  FF2.7
14D0:  BSF    18.7
14D2:  BCF    FF2.7
.................... _d8 = _pp2 % _ten; 
14D4:  MOVFF  E3,FA
14D8:  MOVFF  E2,F9
14DC:  MOVFF  E1,F8
14E0:  MOVFF  E0,F7
14E4:  CLRF   xFE
14E6:  CLRF   xFD
14E8:  CLRF   xFC
14EA:  MOVLW  0A
14EC:  MOVWF  xFB
14EE:  CALL   0376
14F2:  BTFSC  18.7
14F4:  BSF    FF2.7
14F6:  MOVFF  FEF,92
....................  
....................  
....................  
.................... /* 
.................... _dd1d = _var_all; 
.................... _pp2 = _dd1d; 
.................... IF(_dd1d < _kror)_d1 = _clear; 
.................... else _d1 = _pp2 / _kror; 
.................... _pp2 = _pp2 % _kror; 
.................... IF(_dd1d < _ten_lakh)_d2 = _clear; 
.................... else _d2 = _pp2 /_ten_lakh; 
.................... _pp2 = _pp2 % _ten_lakh; 
.................... IF(_dd1d < _lakh) _d3 = _clear; 
.................... else _d3 = _pp2 /_lakh; 
.................... _pp2 = _pp2 % _lakh; 
.................... IF(_dd1d < _ten_th)_d4 = _clear; 
.................... else _d4 = _pp2 /_ten_th; 
.................... _pp2 = _pp2 % _ten_th; 
.................... IF(_dd1d < _thou)_d5 = _clear; 
.................... else _d5 = _pp2 /_thou; 
.................... _pp2 = _pp2 % _thou; 
.................... _d6 = _pp2 /_hund; 
.................... _pp2 = _pp2 % _hund; 
.................... _d7 = _pp2 / _ten; 
.................... _d8 = _pp2 % _ten; 
.................... */ 
.................... } 
14FA:  RETLW  00
.................... //****************************************************************************** 
.................... void _all_disp2(int32 _var2_all){ 
.................... int32 _vv,_d2_r; 
.................... _dd2d = _var2_all; 
*
1520:  MOVFF  DD,87
1524:  MOVFF  DC,86
1528:  MOVFF  DB,85
152C:  MOVFF  DA,84
.................... _vv = _dd2d; 
1530:  MOVFF  87,E1
1534:  MOVFF  86,E0
1538:  MOVFF  85,DF
153C:  MOVFF  84,DE
.................... if(_dd2d  < _kror){ 
1540:  MOVF   x87,F
1542:  BNZ   1560
1544:  MOVF   x86,W
1546:  SUBLW  98
1548:  BNC   1560
154A:  BNZ   155A
154C:  MOVF   x85,W
154E:  SUBLW  96
1550:  BNC   1560
1552:  BNZ   155A
1554:  MOVF   x84,W
1556:  SUBLW  7F
1558:  BNC   1560
.................... _d9 = _clear; 
155A:  MOVLW  0F
155C:  MOVWF  x95
.................... }else{ 
155E:  BRA    15D0
1560:  CLRF   18
1562:  BTFSC  FF2.7
1564:  BSF    18.7
1566:  BCF    FF2.7
.................... _d9 = _vv / _kror; 
1568:  MOVFF  E1,FA
156C:  MOVFF  E0,F9
1570:  MOVFF  DF,F8
1574:  MOVFF  DE,F7
1578:  CLRF   xFE
157A:  MOVLW  98
157C:  MOVWF  xFD
157E:  MOVLW  96
1580:  MOVWF  xFC
1582:  MOVLW  80
1584:  MOVWF  xFB
1586:  CALL   0376
158A:  BTFSC  18.7
158C:  BSF    FF2.7
158E:  MOVFF  00,95
1592:  CLRF   18
1594:  BTFSC  FF2.7
1596:  BSF    18.7
1598:  BCF    FF2.7
.................... _vv = _vv % _kror; 
159A:  MOVFF  E1,FA
159E:  MOVFF  E0,F9
15A2:  MOVFF  DF,F8
15A6:  MOVFF  DE,F7
15AA:  CLRF   xFE
15AC:  MOVLW  98
15AE:  MOVWF  xFD
15B0:  MOVLW  96
15B2:  MOVWF  xFC
15B4:  MOVLW  80
15B6:  MOVWF  xFB
15B8:  CALL   0376
15BC:  BTFSC  18.7
15BE:  BSF    FF2.7
15C0:  MOVFF  FEF,DE
15C4:  MOVFF  FEC,DF
15C8:  MOVFF  FEC,E0
15CC:  MOVFF  FEC,E1
.................... } 
.................... if(_dd2d  < _ten_lakh){ 
15D0:  MOVF   x87,F
15D2:  BNZ   15F0
15D4:  MOVF   x86,W
15D6:  SUBLW  0F
15D8:  BNC   15F0
15DA:  BNZ   15EA
15DC:  MOVF   x85,W
15DE:  SUBLW  42
15E0:  BNC   15F0
15E2:  BNZ   15EA
15E4:  MOVF   x84,W
15E6:  SUBLW  3F
15E8:  BNC   15F0
.................... _d10 = _clear; 
15EA:  MOVLW  0F
15EC:  MOVWF  x9C
.................... }else{ 
15EE:  BRA    1660
15F0:  CLRF   18
15F2:  BTFSC  FF2.7
15F4:  BSF    18.7
15F6:  BCF    FF2.7
.................... _d10 = _vv /_ten_lakh; 
15F8:  MOVFF  E1,FA
15FC:  MOVFF  E0,F9
1600:  MOVFF  DF,F8
1604:  MOVFF  DE,F7
1608:  CLRF   xFE
160A:  MOVLW  0F
160C:  MOVWF  xFD
160E:  MOVLW  42
1610:  MOVWF  xFC
1612:  MOVLW  40
1614:  MOVWF  xFB
1616:  CALL   0376
161A:  BTFSC  18.7
161C:  BSF    FF2.7
161E:  MOVFF  00,9C
1622:  CLRF   18
1624:  BTFSC  FF2.7
1626:  BSF    18.7
1628:  BCF    FF2.7
.................... _vv = _vv % _ten_lakh; 
162A:  MOVFF  E1,FA
162E:  MOVFF  E0,F9
1632:  MOVFF  DF,F8
1636:  MOVFF  DE,F7
163A:  CLRF   xFE
163C:  MOVLW  0F
163E:  MOVWF  xFD
1640:  MOVLW  42
1642:  MOVWF  xFC
1644:  MOVLW  40
1646:  MOVWF  xFB
1648:  CALL   0376
164C:  BTFSC  18.7
164E:  BSF    FF2.7
1650:  MOVFF  FEF,DE
1654:  MOVFF  FEC,DF
1658:  MOVFF  FEC,E0
165C:  MOVFF  FEC,E1
.................... } 
.................... if(_dd2d  < _lakh){ 
1660:  MOVF   x87,F
1662:  BNZ   1680
1664:  MOVF   x86,W
1666:  SUBLW  01
1668:  BNC   1680
166A:  BNZ   167A
166C:  MOVF   x85,W
166E:  SUBLW  86
1670:  BNC   1680
1672:  BNZ   167A
1674:  MOVF   x84,W
1676:  SUBLW  9F
1678:  BNC   1680
.................... _d11 = _clear; 
167A:  MOVLW  0F
167C:  MOVWF  x9B
.................... }else{ 
167E:  BRA    16F0
1680:  CLRF   18
1682:  BTFSC  FF2.7
1684:  BSF    18.7
1686:  BCF    FF2.7
.................... _d11 = _vv /_lakh; 
1688:  MOVFF  E1,FA
168C:  MOVFF  E0,F9
1690:  MOVFF  DF,F8
1694:  MOVFF  DE,F7
1698:  CLRF   xFE
169A:  MOVLW  01
169C:  MOVWF  xFD
169E:  MOVLW  86
16A0:  MOVWF  xFC
16A2:  MOVLW  A0
16A4:  MOVWF  xFB
16A6:  CALL   0376
16AA:  BTFSC  18.7
16AC:  BSF    FF2.7
16AE:  MOVFF  00,9B
16B2:  CLRF   18
16B4:  BTFSC  FF2.7
16B6:  BSF    18.7
16B8:  BCF    FF2.7
.................... _vv = _vv % _lakh; 
16BA:  MOVFF  E1,FA
16BE:  MOVFF  E0,F9
16C2:  MOVFF  DF,F8
16C6:  MOVFF  DE,F7
16CA:  CLRF   xFE
16CC:  MOVLW  01
16CE:  MOVWF  xFD
16D0:  MOVLW  86
16D2:  MOVWF  xFC
16D4:  MOVLW  A0
16D6:  MOVWF  xFB
16D8:  CALL   0376
16DC:  BTFSC  18.7
16DE:  BSF    FF2.7
16E0:  MOVFF  FEF,DE
16E4:  MOVFF  FEC,DF
16E8:  MOVFF  FEC,E0
16EC:  MOVFF  FEC,E1
.................... } 
....................  
.................... if(_dd2d  < _ten_th){ 
16F0:  MOVF   x87,F
16F2:  BNZ   170C
16F4:  MOVF   x86,F
16F6:  BNZ   170C
16F8:  MOVF   x85,W
16FA:  SUBLW  27
16FC:  BNC   170C
16FE:  BNZ   1706
1700:  MOVF   x84,W
1702:  SUBLW  0F
1704:  BNC   170C
.................... _d12 = _clear; 
1706:  MOVLW  0F
1708:  MOVWF  x9D
.................... }else{ 
170A:  BRA    1778
170C:  CLRF   18
170E:  BTFSC  FF2.7
1710:  BSF    18.7
1712:  BCF    FF2.7
.................... _d12 = _vv /_ten_th; 
1714:  MOVFF  E1,FA
1718:  MOVFF  E0,F9
171C:  MOVFF  DF,F8
1720:  MOVFF  DE,F7
1724:  CLRF   xFE
1726:  CLRF   xFD
1728:  MOVLW  27
172A:  MOVWF  xFC
172C:  MOVLW  10
172E:  MOVWF  xFB
1730:  CALL   0376
1734:  BTFSC  18.7
1736:  BSF    FF2.7
1738:  MOVFF  00,9D
173C:  CLRF   18
173E:  BTFSC  FF2.7
1740:  BSF    18.7
1742:  BCF    FF2.7
.................... _vv = _vv % _ten_th; 
1744:  MOVFF  E1,FA
1748:  MOVFF  E0,F9
174C:  MOVFF  DF,F8
1750:  MOVFF  DE,F7
1754:  CLRF   xFE
1756:  CLRF   xFD
1758:  MOVLW  27
175A:  MOVWF  xFC
175C:  MOVLW  10
175E:  MOVWF  xFB
1760:  CALL   0376
1764:  BTFSC  18.7
1766:  BSF    FF2.7
1768:  MOVFF  FEF,DE
176C:  MOVFF  FEC,DF
1770:  MOVFF  FEC,E0
1774:  MOVFF  FEC,E1
.................... } 
.................... if(_dd2d  < _thou){ 
1778:  MOVF   x87,F
177A:  BNZ   1794
177C:  MOVF   x86,F
177E:  BNZ   1794
1780:  MOVF   x85,W
1782:  SUBLW  03
1784:  BNC   1794
1786:  BNZ   178E
1788:  MOVF   x84,W
178A:  SUBLW  E7
178C:  BNC   1794
.................... _d13 = _clear; 
178E:  MOVLW  0F
1790:  MOVWF  x8E
.................... }else{ 
1792:  BRA    1800
1794:  CLRF   18
1796:  BTFSC  FF2.7
1798:  BSF    18.7
179A:  BCF    FF2.7
.................... _d13 = _vv /_thou; 
179C:  MOVFF  E1,FA
17A0:  MOVFF  E0,F9
17A4:  MOVFF  DF,F8
17A8:  MOVFF  DE,F7
17AC:  CLRF   xFE
17AE:  CLRF   xFD
17B0:  MOVLW  03
17B2:  MOVWF  xFC
17B4:  MOVLW  E8
17B6:  MOVWF  xFB
17B8:  CALL   0376
17BC:  BTFSC  18.7
17BE:  BSF    FF2.7
17C0:  MOVFF  00,8E
17C4:  CLRF   18
17C6:  BTFSC  FF2.7
17C8:  BSF    18.7
17CA:  BCF    FF2.7
.................... _vv = _vv % _thou; 
17CC:  MOVFF  E1,FA
17D0:  MOVFF  E0,F9
17D4:  MOVFF  DF,F8
17D8:  MOVFF  DE,F7
17DC:  CLRF   xFE
17DE:  CLRF   xFD
17E0:  MOVLW  03
17E2:  MOVWF  xFC
17E4:  MOVLW  E8
17E6:  MOVWF  xFB
17E8:  CALL   0376
17EC:  BTFSC  18.7
17EE:  BSF    FF2.7
17F0:  MOVFF  FEF,DE
17F4:  MOVFF  FEC,DF
17F8:  MOVFF  FEC,E0
17FC:  MOVFF  FEC,E1
1800:  CLRF   18
1802:  BTFSC  FF2.7
1804:  BSF    18.7
1806:  BCF    FF2.7
.................... } 
.................... _d14 = _vv /_hund; 
1808:  MOVFF  E1,FA
180C:  MOVFF  E0,F9
1810:  MOVFF  DF,F8
1814:  MOVFF  DE,F7
1818:  CLRF   xFE
181A:  CLRF   xFD
181C:  CLRF   xFC
181E:  MOVLW  64
1820:  MOVWF  xFB
1822:  CALL   0376
1826:  BTFSC  18.7
1828:  BSF    FF2.7
182A:  MOVFF  00,8F
182E:  CLRF   18
1830:  BTFSC  FF2.7
1832:  BSF    18.7
1834:  BCF    FF2.7
.................... _vv = _vv % _hund; 
1836:  MOVFF  E1,FA
183A:  MOVFF  E0,F9
183E:  MOVFF  DF,F8
1842:  MOVFF  DE,F7
1846:  CLRF   xFE
1848:  CLRF   xFD
184A:  CLRF   xFC
184C:  MOVLW  64
184E:  MOVWF  xFB
1850:  CALL   0376
1854:  BTFSC  18.7
1856:  BSF    FF2.7
1858:  MOVFF  FEF,DE
185C:  MOVFF  FEC,DF
1860:  MOVFF  FEC,E0
1864:  MOVFF  FEC,E1
1868:  CLRF   18
186A:  BTFSC  FF2.7
186C:  BSF    18.7
186E:  BCF    FF2.7
.................... _d15 = _vv / _ten; 
1870:  MOVFF  E1,FA
1874:  MOVFF  E0,F9
1878:  MOVFF  DF,F8
187C:  MOVFF  DE,F7
1880:  CLRF   xFE
1882:  CLRF   xFD
1884:  CLRF   xFC
1886:  MOVLW  0A
1888:  MOVWF  xFB
188A:  CALL   0376
188E:  BTFSC  18.7
1890:  BSF    FF2.7
1892:  MOVFF  00,91
1896:  CLRF   18
1898:  BTFSC  FF2.7
189A:  BSF    18.7
189C:  BCF    FF2.7
.................... _d16 = _vv % _ten; 
189E:  MOVFF  E1,FA
18A2:  MOVFF  E0,F9
18A6:  MOVFF  DF,F8
18AA:  MOVFF  DE,F7
18AE:  CLRF   xFE
18B0:  CLRF   xFD
18B2:  CLRF   xFC
18B4:  MOVLW  0A
18B6:  MOVWF  xFB
18B8:  CALL   0376
18BC:  BTFSC  18.7
18BE:  BSF    FF2.7
18C0:  MOVFF  FEF,90
....................  
....................  
....................  
....................  
.................... /* 
.................... _dd2d = _var2_all; 
.................... _vv = _dd2d; 
.................... if(_dd2d  < _kror) _d9 = _clear; 
.................... else _d9 = _vv / _kror; 
.................... _vv = _vv % _kror; 
....................  
.................... if(_dd2d  < _ten_lakh) _d10 = _clear; 
.................... else _d10 = _vv /_ten_lakh; 
.................... _vv = _vv % _ten_lakh; 
....................  
.................... if(_dd2d  < _lakh)_d11 = _clear; 
.................... else _d11 = _vv /_lakh; 
.................... _vv = _vv % _lakh; 
....................  
.................... if(_dd2d  < _ten_th) _d12 = _clear; 
.................... else _d12 = _vv /_ten_th; 
.................... _vv = _vv % _ten_th; 
....................  
.................... if(_dd2d  < _thou) _d13 = _clear; 
.................... else _d13 = _vv /_thou; 
.................... _vv = _vv % _thou; 
....................  
.................... _d14 = _vv /_hund; 
.................... _vv = _vv % _hund; 
.................... _d15 = _vv / _ten; 
.................... _d16 = _vv % _ten; 
.................... */ 
.................... } 
18C4:  RETLW  00
.................... //****************************************************************************** 
.................... void _disp1b(void){ 
.................... int32 _d1_r; 
.................... if(_price > 999999){ 
*
2B16:  MOVF   57,F
2B18:  BNZ   2B34
2B1A:  MOVF   56,W
2B1C:  SUBLW  0E
2B1E:  BC    2B3E
2B20:  XORLW  FF
2B22:  BNZ   2B34
2B24:  MOVF   55,W
2B26:  SUBLW  41
2B28:  BC    2B3E
2B2A:  XORLW  FF
2B2C:  BNZ   2B34
2B2E:  MOVF   54,W
2B30:  SUBLW  3F
2B32:  BC    2B3E
.................... _price = 0; 
2B34:  CLRF   57
2B36:  CLRF   56
2B38:  CLRF   55
2B3A:  CLRF   54
.................... _code_val = 0; 
2B3C:  CLRF   41
.................... } 
.................... _d1_r = _price  * 100; 
2B3E:  MOVFF  57,D9
2B42:  MOVFF  56,D8
2B46:  MOVFF  55,D7
2B4A:  MOVFF  54,D6
2B4E:  CLRF   xDD
2B50:  CLRF   xDC
2B52:  CLRF   xDB
2B54:  MOVLW  64
2B56:  MOVWF  xDA
2B58:  CALL   1102
2B5C:  MOVFF  03,D5
2B60:  MOVFF  02,D4
2B64:  MOVFF  01,D3
2B68:  MOVFF  00,D2
.................... _all_disp1(_d1_r); 
2B6C:  MOVFF  D5,DF
2B70:  MOVFF  D4,DE
2B74:  MOVFF  D3,DD
2B78:  MOVFF  D2,DC
2B7C:  CALL   1156
.................... if(_d1_r < 100000)_d1 = 12; 
2B80:  MOVF   xD5,F
2B82:  BNZ   2B9E
2B84:  MOVF   xD4,W
2B86:  SUBLW  01
2B88:  BNC   2B9E
2B8A:  BNZ   2B9A
2B8C:  MOVF   xD3,W
2B8E:  SUBLW  86
2B90:  BNC   2B9E
2B92:  BNZ   2B9A
2B94:  MOVF   xD2,W
2B96:  SUBLW  9F
2B98:  BNC   2B9E
2B9A:  MOVLW  0C
2B9C:  MOVWF  x96
....................  
.................... //IF(_price < _lakh)_d1 = _clear; 
.................... //IF(_price < _ten_th)_d2 = _clear; 
.................... //IF(_price < _thou) _d3 = _clear; 
.................... //IF(_price < _hund)_d4 = _clear; 
.................... //IF(_price < _ten)_d5 = _clear; 
.................... } 
2B9E:  RETLW  00
....................  
.................... //****************************************************************************** 
.................... void _disp1a(void){ 
.................... int32 _d1_r; 
.................... _d1_r = _price ; 
*
2A4C:  MOVFF  57,D5
2A50:  MOVFF  56,D4
2A54:  MOVFF  55,D3
2A58:  MOVFF  54,D2
.................... _all_disp1(_d1_r); 
2A5C:  MOVFF  D5,DF
2A60:  MOVFF  D4,DE
2A64:  MOVFF  D3,DD
2A68:  MOVFF  D2,DC
2A6C:  CALL   1156
.................... IF(_d1_r < _kror)_d1 = 12; 
2A70:  MOVF   xD5,F
2A72:  BNZ   2A8E
2A74:  MOVF   xD4,W
2A76:  SUBLW  98
2A78:  BNC   2A8E
2A7A:  BNZ   2A8A
2A7C:  MOVF   xD3,W
2A7E:  SUBLW  96
2A80:  BNC   2A8E
2A82:  BNZ   2A8A
2A84:  MOVF   xD2,W
2A86:  SUBLW  7F
2A88:  BNC   2A8E
2A8A:  MOVLW  0C
2A8C:  MOVWF  x96
.................... } 
2A8E:  GOTO   2AF8 (RETURN)
.................... //****************************************************************************** 
.................... void _disp3(int16 _d_rate){ 
.................... int16 _t_rate; 
....................  _t_rate = _d_rate; 
*
192C:  MOVFF  D5,D7
1930:  MOVFF  D4,D6
.................... _d17 = _clear; 
1934:  MOVLW  0F
1936:  MOVWF  x9E
.................... if(_d_rate < _ten_th )_d18 = _clear; 
1938:  MOVF   xD5,W
193A:  SUBLW  27
193C:  BNC   194C
193E:  BNZ   1946
1940:  MOVF   xD4,W
1942:  SUBLW  0F
1944:  BNC   194C
1946:  MOVLW  0F
1948:  MOVWF  x9F
.................... else _d18 = _t_rate /_ten_th; 
194A:  BRA    1962
194C:  MOVFF  D7,D9
1950:  MOVFF  D6,D8
1954:  MOVLW  27
1956:  MOVWF  xDB
1958:  MOVLW  10
195A:  MOVWF  xDA
195C:  RCALL  18EA
195E:  MOVFF  01,9F
.................... _t_rate = _t_rate % _ten_th; 
1962:  MOVFF  D7,D9
1966:  MOVFF  D6,D8
196A:  MOVLW  27
196C:  MOVWF  xDB
196E:  MOVLW  10
1970:  MOVWF  xDA
1972:  RCALL  18EA
1974:  MOVFF  00,D6
1978:  MOVFF  03,D7
.................... _d19 = _t_rate /_thou; 
197C:  MOVFF  D7,D9
1980:  MOVFF  D6,D8
1984:  MOVLW  03
1986:  MOVWF  xDB
1988:  MOVLW  E8
198A:  MOVWF  xDA
198C:  RCALL  18EA
198E:  MOVFF  01,A0
.................... _t_rate = _t_rate % _thou; 
1992:  MOVFF  D7,D9
1996:  MOVFF  D6,D8
199A:  MOVLW  03
199C:  MOVWF  xDB
199E:  MOVLW  E8
19A0:  MOVWF  xDA
19A2:  RCALL  18EA
19A4:  MOVFF  00,D6
19A8:  MOVFF  03,D7
.................... _d20 = _t_rate / _hund; 
19AC:  MOVFF  D7,D9
19B0:  MOVFF  D6,D8
19B4:  CLRF   xDB
19B6:  MOVLW  64
19B8:  MOVWF  xDA
19BA:  RCALL  18EA
19BC:  MOVFF  01,A1
.................... _t_rate = _t_rate % _hund; 
19C0:  MOVFF  D7,D9
19C4:  MOVFF  D6,D8
19C8:  CLRF   xDB
19CA:  MOVLW  64
19CC:  MOVWF  xDA
19CE:  RCALL  18EA
19D0:  MOVFF  00,D6
19D4:  MOVFF  03,D7
.................... _d21 = _t_rate /_ten; 
19D8:  MOVFF  D7,D9
19DC:  MOVFF  D6,D8
19E0:  CLRF   xDB
19E2:  MOVLW  0A
19E4:  MOVWF  xDA
19E6:  RCALL  18EA
19E8:  MOVFF  01,8D
.................... _d22 = _t_rate %_ten; 
19EC:  MOVFF  D7,D9
19F0:  MOVFF  D6,D8
19F4:  CLRF   xDB
19F6:  MOVLW  0A
19F8:  MOVWF  xDA
19FA:  RCALL  18EA
19FC:  MOVFF  00,8C
.................... } 
1A00:  RETLW  00
.................... //****************************************************************************** 
.................... void _disp2(void){ 
.................... Int32 _dd2_r; 
.................... _dd2_r = _liters; 
*
18C6:  MOVFF  53,D9
18CA:  MOVFF  52,D8
18CE:  MOVFF  51,D7
18D2:  MOVFF  50,D6
.................... _all_disp2(_dd2_r); 
18D6:  MOVFF  D9,DD
18DA:  MOVFF  D8,DC
18DE:  MOVFF  D7,DB
18E2:  MOVFF  D6,DA
18E6:  RCALL  1520
....................  
.................... /* 
.................... int32 _d1_l,_ll; 
.................... _ll = _liters; 
.................... _d1_l = _ll; 
.................... IF(_ll < _kror)_d9 = _clear; 
.................... else _d9 = _d1_l / _kror; 
....................  
.................... _d1_l = _d1_l % _kror; 
.................... IF(_ll < _ten_lakh)_d10 = _clear; 
.................... else _d10 = _d1_l / _ten_lakh; 
....................  
.................... _d1_l = _d1_l % _ten_lakh; 
.................... IF(_ll < _lakh)_d11 = _clear; 
.................... else _d11 = _d1_l / _lakh; 
....................  
.................... _d1_l = _d1_l % _lakh; 
.................... IF(_ll < _ten_th) _d12 = _clear; 
.................... else _d12 = _d1_l /_ten_th; 
....................  
.................... _d1_l = _d1_l % _ten_th; 
.................... IF(_ll < _thou)_d13 = _clear; 
.................... else _d13 = _d1_l /_thou; 
.................... _d1_l = _d1_l % _thou; 
.................... _d14 = _d1_l /_hund; 
.................... _d1_l = _d1_l % _hund; 
.................... _d15 = _d1_l / 10; 
.................... _d16 = _d1_l % 10; 
.................... */ 
.................... } 
18E8:  RETLW  00
.................... //****************************************************************************** 
....................  
.................... void _disp1(void){ 
.................... Int32 _d1_r,_rr; 
.................... //_d1_r = _rupee / 10; 
.................... //_rr = _rupee / 10; 
.................... //_d1_r = _rupee; 
.................... //_rr = _rupee; 
.................... //_all_disp1(_d1_r); 
.................... _d1_r = _rupee; 
*
14FC:  MOVFF  4F,D7
1500:  MOVFF  4E,D6
1504:  MOVFF  4D,D5
1508:  MOVFF  4C,D4
.................... _all_disp1(_d1_r); 
150C:  MOVFF  D7,DF
1510:  MOVFF  D6,DE
1514:  MOVFF  D5,DD
1518:  MOVFF  D4,DC
151C:  RCALL  1156
....................  
.................... //IF(_rr <  _kror)_d1 = _clear; 
.................... //IF(_rr < _ten_lakh)_d2 = _clear; 
.................... //IF(_rr < _lakh) _d3 = _clear; 
.................... //IF(_rr < _ten_th)_d4 = _clear; 
.................... //IF(_rr <  _thou )_d5 = _clear; 
.................... } 
151E:  RETLW  00
.................... //****************************************************************************** 
.................... void _totel_disp(void){ 
*
42FE:  CLRF   18
4300:  BTFSC  FF2.7
4302:  BSF    18.7
4304:  BCF    FF2.7
.................... int32 _d1_r ; 
.................... _all_disp1(_totel % 100); 
4306:  MOVFF  5F,FA
430A:  MOVFF  5E,F9
430E:  MOVFF  5D,F8
4312:  MOVFF  5C,F7
4316:  CLRF   xFE
4318:  CLRF   xFD
431A:  CLRF   xFC
431C:  MOVLW  64
431E:  MOVWF  xFB
4320:  CALL   0376
4324:  BTFSC  18.7
4326:  BSF    FF2.7
4328:  MOVFF  FEF,D6
432C:  MOVFF  FEC,D7
4330:  MOVFF  FEC,D8
4334:  MOVFF  FEC,D9
4338:  MOVFF  D9,DF
433C:  MOVFF  D8,DE
4340:  MOVFF  D7,DD
4344:  MOVFF  D6,DC
4348:  CALL   1156
434C:  CLRF   18
434E:  BTFSC  FF2.7
4350:  BSF    18.7
4352:  BCF    FF2.7
.................... _all_disp2(_totel / 100); 
4354:  MOVFF  5F,FA
4358:  MOVFF  5E,F9
435C:  MOVFF  5D,F8
4360:  MOVFF  5C,F7
4364:  CLRF   xFE
4366:  CLRF   xFD
4368:  CLRF   xFC
436A:  MOVLW  64
436C:  MOVWF  xFB
436E:  CALL   0376
4372:  BTFSC  18.7
4374:  BSF    FF2.7
4376:  MOVFF  03,D9
437A:  MOVFF  02,D8
437E:  MOVFF  01,D7
4382:  MOVFF  00,D6
4386:  MOVFF  03,DD
438A:  MOVFF  02,DC
438E:  MOVFF  01,DB
4392:  MOVFF  00,DA
4396:  CALL   1520
.................... //_d1 = _clear; 
.................... //_d2 = _clear; 
.................... //_d3 = _clear; 
.................... //_d4 = _clear; 
.................... //_d5 = _clear; 
.................... _d6 = _clear; 
439A:  MOVLW  0F
439C:  MOVWF  x97
.................... _disp_data(); 
439E:  CALL   1048
.................... } 
43A2:  GOTO   4B06 (RETURN)
.................... //****************************************************************************** 
.................... /* 
.................... void _td_disp(void){ 
.................... int32 _d1_r ; 
.................... _all_disp2(_td); 
.................... _d1 = _clear; 
.................... _d2 = _clear; 
.................... _d3 = _clear; 
.................... _d4 = _clear; 
.................... _d5 = _clear; 
.................... _d6 = _clear; 
.................... _d7 = _clear; 
.................... _d8 = _clear; 
.................... _disp_data(); 
.................... } 
.................... */ 
.................... //****************************************************************************** 
.................... /* 
.................... void _hang_disp(void){ 
.................... int32 _d1_r ; 
.................... _all_disp2(_hang/ _hund); 
.................... _d1_r = _hang % _hund; 
.................... _d7 = _d1_r / _ten; 
.................... _d8 = _d1_r % _ten; 
.................... _d1 = _clear; 
.................... _d2 = _clear; 
.................... _d3 = _clear; 
.................... _d4 = _clear; 
.................... _d5 = _clear; 
.................... _d6 = _clear; 
.................... _disp_data(); 
.................... } 
.................... */ 
.................... //****************************************************************************** 
.................... void _disp2a(void){ 
.................... int32 _d2_r ; 
.................... /* 
.................... if(_petrol > 999999 && !_deci_fl){ 
.................... _petrol = 0; 
.................... _code_val = 0; 
.................... } 
.................... if(_petrol > 99999999 && _deci_fl){ 
.................... _petrol = 0; 
.................... _code_val = 0; 
.................... } 
.................... if(!_deci_fl)_d2_r = _petrol * 100; 
.................... else _d2_r = _petrol; 
.................... */ 
.................... if(_petrol > 999999){ 
*
40DA:  MOVF   5B,F
40DC:  BNZ   40F8
40DE:  MOVF   5A,W
40E0:  SUBLW  0E
40E2:  BC    4102
40E4:  XORLW  FF
40E6:  BNZ   40F8
40E8:  MOVF   59,W
40EA:  SUBLW  41
40EC:  BC    4102
40EE:  XORLW  FF
40F0:  BNZ   40F8
40F2:  MOVF   58,W
40F4:  SUBLW  3F
40F6:  BC    4102
.................... _petrol = 0; 
40F8:  CLRF   5B
40FA:  CLRF   5A
40FC:  CLRF   59
40FE:  CLRF   58
.................... _code_val = 0; 
4100:  CLRF   41
.................... } 
.................... _d2_r = _petrol * 100; 
4102:  MOVFF  5B,D9
4106:  MOVFF  5A,D8
410A:  MOVFF  59,D7
410E:  MOVFF  58,D6
4112:  CLRF   xDD
4114:  CLRF   xDC
4116:  CLRF   xDB
4118:  MOVLW  64
411A:  MOVWF  xDA
411C:  CALL   1102
4120:  MOVFF  03,D5
4124:  MOVFF  02,D4
4128:  MOVFF  01,D3
412C:  MOVFF  00,D2
.................... _all_disp2(_d2_r); 
4130:  MOVFF  D5,DD
4134:  MOVFF  D4,DC
4138:  MOVFF  D3,DB
413C:  MOVFF  D2,DA
4140:  CALL   1520
.................... if(_d2_r < 10000000) _d9 = 10; 
4144:  MOVF   xD5,F
4146:  BNZ   4162
4148:  MOVF   xD4,W
414A:  SUBLW  98
414C:  BNC   4162
414E:  BNZ   415E
4150:  MOVF   xD3,W
4152:  SUBLW  96
4154:  BNC   4162
4156:  BNZ   415E
4158:  MOVF   xD2,W
415A:  SUBLW  7F
415C:  BNC   4162
415E:  MOVLW  0A
4160:  MOVWF  x95
....................  
.................... /* 
.................... IF(_d2_r < _kror) _d9 = _clear; 
.................... IF(_d2_r < _ten_lakh) _d10 = _clear; 
.................... IF(_d2_r < _lakh)_d11 = _clear; 
.................... IF(_d2_r < _ten_th) _d12 = _clear; 
.................... IF(_d2_r < _thou) _d13 = _clear; 
.................... */ 
.................... } 
4162:  RETLW  00
.................... //****************************************************************************** 
.................... void _price_enter(void){ 
.................... if(_key1 == _p1)_price = 10000; 
*
2A92:  MOVF   34,W
2A94:  SUBWF  xA5,W
2A96:  BNZ   2AA4
2A98:  CLRF   57
2A9A:  CLRF   56
2A9C:  MOVLW  27
2A9E:  MOVWF  55
2AA0:  MOVLW  10
2AA2:  MOVWF  54
.................... if(_key1 == _p2)_price = 20000; 
2AA4:  MOVF   35,W
2AA6:  SUBWF  xA5,W
2AA8:  BNZ   2AB6
2AAA:  CLRF   57
2AAC:  CLRF   56
2AAE:  MOVLW  4E
2AB0:  MOVWF  55
2AB2:  MOVLW  20
2AB4:  MOVWF  54
.................... if(_key1 == _p3)_price = 30000; 
2AB6:  MOVF   36,W
2AB8:  SUBWF  xA5,W
2ABA:  BNZ   2AC8
2ABC:  CLRF   57
2ABE:  CLRF   56
2AC0:  MOVLW  75
2AC2:  MOVWF  55
2AC4:  MOVLW  30
2AC6:  MOVWF  54
.................... if(_key1 == _p4)_price = 40000; 
2AC8:  MOVF   37,W
2ACA:  SUBWF  xA5,W
2ACC:  BNZ   2ADA
2ACE:  CLRF   57
2AD0:  CLRF   56
2AD2:  MOVLW  9C
2AD4:  MOVWF  55
2AD6:  MOVLW  40
2AD8:  MOVWF  54
.................... if(_key1 == _p5)_price = 50000; 
2ADA:  MOVF   38,W
2ADC:  SUBWF  xA5,W
2ADE:  BNZ   2AEC
2AE0:  CLRF   57
2AE2:  CLRF   56
2AE4:  MOVLW  C3
2AE6:  MOVWF  55
2AE8:  MOVLW  50
2AEA:  MOVWF  54
.................... _liters = 0; 
2AEC:  CLRF   53
2AEE:  CLRF   52
2AF0:  CLRF   51
2AF2:  CLRF   50
.................... _code_val  = 0; 
2AF4:  CLRF   41
.................... _disp1a(); 
2AF6:  BRA    2A4C
.................... _d9 = _clear; 
2AF8:  MOVLW  0F
2AFA:  MOVWF  x95
.................... _d10 = _clear; 
2AFC:  MOVWF  x9C
.................... _d11 = _clear; 
2AFE:  MOVWF  x9B
.................... _d12 = _clear; 
2B00:  MOVWF  x9D
.................... _d13 = _clear; 
2B02:  MOVWF  x8E
.................... _d14 = _clear; 
2B04:  MOVWF  x8F
.................... _d15 = _clear; 
2B06:  MOVWF  x91
.................... _d16 = _clear; 
2B08:  MOVWF  x90
.................... _d1 = 12; 
2B0A:  MOVLW  0C
2B0C:  MOVWF  x96
.................... _disp_data(); 
2B0E:  CALL   1048
.................... _key1 = 0; 
2B12:  CLRF   xA5
.................... } 
2B14:  RETLW  00
.................... //****************************************************************************** 
.................... void _petrol_enter(void){ 
.................... //_deci_fl = 0; 
.................... if(_key1 == _p1)_petrol = 10; 
*
4164:  MOVF   34,W
4166:  SUBWF  xA5,W
4168:  BNZ   4174
416A:  CLRF   5B
416C:  CLRF   5A
416E:  CLRF   59
4170:  MOVLW  0A
4172:  MOVWF  58
.................... if(_key1 == _p2)_petrol = 20; 
4174:  MOVF   35,W
4176:  SUBWF  xA5,W
4178:  BNZ   4184
417A:  CLRF   5B
417C:  CLRF   5A
417E:  CLRF   59
4180:  MOVLW  14
4182:  MOVWF  58
.................... if(_key1 == _p3)_petrol = 30; 
4184:  MOVF   36,W
4186:  SUBWF  xA5,W
4188:  BNZ   4194
418A:  CLRF   5B
418C:  CLRF   5A
418E:  CLRF   59
4190:  MOVLW  1E
4192:  MOVWF  58
.................... if(_key1 == _p4)_petrol = 40; 
4194:  MOVF   37,W
4196:  SUBWF  xA5,W
4198:  BNZ   41A4
419A:  CLRF   5B
419C:  CLRF   5A
419E:  CLRF   59
41A0:  MOVLW  28
41A2:  MOVWF  58
.................... if(_key1 == _p5)_petrol = 50; 
41A4:  MOVF   38,W
41A6:  SUBWF  xA5,W
41A8:  BNZ   41B4
41AA:  CLRF   5B
41AC:  CLRF   5A
41AE:  CLRF   59
41B0:  MOVLW  32
41B2:  MOVWF  58
.................... _price = 0; 
41B4:  CLRF   57
41B6:  CLRF   56
41B8:  CLRF   55
41BA:  CLRF   54
.................... _disp2a(); 
41BC:  RCALL  40DA
.................... _d1 = _clear; 
41BE:  MOVLW  0F
41C0:  MOVWF  x96
.................... _d2 = _clear; 
41C2:  MOVWF  x93
.................... _d3 = _clear; 
41C4:  MOVWF  x94
.................... _d4 = _clear; 
41C6:  MOVWF  x99
.................... _d5 = _clear; 
41C8:  MOVWF  x9A
.................... _d6 = _clear; 
41CA:  MOVWF  x97
.................... _d7 = _clear; 
41CC:  MOVWF  x98
.................... _d8 = _clear; 
41CE:  MOVWF  x92
.................... _disp_data(); 
41D0:  CALL   1048
.................... _key1 = 0; 
41D4:  CLRF   xA5
.................... _code_val  = 0; 
41D6:  CLRF   41
.................... } 
41D8:  GOTO   4228 (RETURN)
.................... //****************************************************************************** 
.................... void _rst(void){ 
.................... _on_fl = 0; 
*
200C:  BCF    xA6.2
....................  _p_deci_fl = 0; 
200E:  BCF    26.1
.................... _liters = _last_fill; 
2010:  MOVFF  63,53
2014:  MOVFF  62,52
2018:  MOVFF  61,51
201C:  MOVFF  60,50
.................... _rupee = _last_bill; 
2020:  MOVFF  67,4F
2024:  MOVFF  66,4E
2028:  MOVFF  65,4D
202C:  MOVFF  64,4C
.................... _disp1(); 
2030:  CALL   14FC
.................... _disp2(); 
2034:  RCALL  18C6
.................... _disp3(_rate); 
2036:  MOVFF  47,D5
203A:  MOVFF  46,D4
203E:  RCALL  192C
.................... _disp_data(); 
2040:  CALL   1048
.................... } 
2044:  RETLW  00
.................... //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
.................... void _set_skip(void){ 
.................... int16 _pu,_pd; 
.................... _pu = _ok_rate + (int16)_rate_fact * 100; 
*
1A20:  CLRF   xDB
1A22:  MOVFF  30,DA
1A26:  MOVFF  DB,DD
1A2A:  MOVFF  30,DC
1A2E:  CLRF   xDF
1A30:  MOVLW  64
1A32:  MOVWF  xDE
1A34:  RCALL  1A02
1A36:  MOVF   01,W
1A38:  ADDWF  2D,W
1A3A:  MOVWF  xD6
1A3C:  MOVF   02,W
1A3E:  ADDWFC 2E,W
1A40:  MOVWF  xD7
.................... if(_ok_rate > ((int16)_rate_fact * 100))_pd = _ok_rate - (int16)_rate_fact * 100; 
1A42:  CLRF   xDB
1A44:  MOVFF  30,DA
1A48:  MOVFF  DB,DD
1A4C:  MOVFF  30,DC
1A50:  CLRF   xDF
1A52:  MOVLW  64
1A54:  MOVWF  xDE
1A56:  RCALL  1A02
1A58:  MOVF   02,W
1A5A:  MOVWF  03
1A5C:  SUBWF  2E,W
1A5E:  BNC   1A8A
1A60:  BNZ   1A68
1A62:  MOVF   2D,W
1A64:  SUBWF  01,W
1A66:  BC    1A8A
1A68:  CLRF   xDB
1A6A:  MOVFF  30,DA
1A6E:  MOVFF  DB,DD
1A72:  MOVFF  30,DC
1A76:  CLRF   xDF
1A78:  MOVLW  64
1A7A:  MOVWF  xDE
1A7C:  RCALL  1A02
1A7E:  MOVF   01,W
1A80:  SUBWF  2D,W
1A82:  MOVWF  xD8
1A84:  MOVF   02,W
1A86:  SUBWFB 2E,W
1A88:  MOVWF  xD9
.................... if(_price_fl){ 
1A8A:  BTFSS  xA6.5
1A8C:  BRA    1AC4
....................    if(_price < _pu && _price > _pd )_skip_val = 0; 
1A8E:  MOVF   57,F
1A90:  BNZ   1ABE
1A92:  MOVF   56,F
1A94:  BNZ   1ABE
1A96:  MOVF   55,W
1A98:  SUBWF  xD7,W
1A9A:  BNC   1ABE
1A9C:  BNZ   1AA4
1A9E:  MOVF   xD6,W
1AA0:  SUBWF  54,W
1AA2:  BC    1ABE
1AA4:  MOVF   57,F
1AA6:  BNZ   1ABA
1AA8:  MOVF   56,F
1AAA:  BNZ   1ABA
1AAC:  MOVF   xD9,W
1AAE:  SUBWF  55,W
1AB0:  BNC   1ABE
1AB2:  BNZ   1ABA
1AB4:  MOVF   54,W
1AB6:  SUBWF  xD8,W
1AB8:  BC    1ABE
1ABA:  CLRF   43
....................    else _skip_val = _skip_rupee; 
1ABC:  BRA    1AC2
1ABE:  MOVFF  48,43
.................... }else{ 
1AC2:  BRA    1AD4
....................    if(_ok_liters == 0){ 
1AC4:  MOVF   32,F
1AC6:  BNZ   1AD0
....................    _skip_val = _skip_liters; 
1AC8:  MOVFF  31,43
....................    _sk_l_fl = 1; 
1ACC:  BSF    26.5
....................    }else{ 
1ACE:  BRA    1AD4
....................    _skip_val = 0; 
1AD0:  CLRF   43
....................    _sk_l_fl = 0; 
1AD2:  BCF    26.5
....................    } 
....................  } 
....................  
.................... } 
1AD4:  RETLW  00
.................... //****************************************************************************** 
.................... void _initilize(void){ 
.................... int32 _temp_cal; 
.................... //enable_interrupts(GLOBAL); 
.................... //enable_interrupts(INT_RB); 
.................... //enable_interrupts(INT_Timer2); 
.................... //setup_timer_2(T2_DIV_BY_16, 255, 16); 
.................... ////if(!input(pin_b0))ext_int_edge( 0, L_TO_H); 
.................... ////else ext_int_edge( 0, H_TO_L); 
.................... if(_price > 0){ 
*
267E:  MOVF   54,F
2680:  BNZ   268E
2682:  MOVF   55,F
2684:  BNZ   268E
2686:  MOVF   56,F
2688:  BNZ   268E
268A:  MOVF   57,F
268C:  BZ    274E
.................... _temp_cal  = _price * 100; 
268E:  MOVFF  57,D9
2692:  MOVFF  56,D8
2696:  MOVFF  55,D7
269A:  MOVFF  54,D6
269E:  CLRF   xDD
26A0:  CLRF   xDC
26A2:  CLRF   xDB
26A4:  MOVLW  64
26A6:  MOVWF  xDA
26A8:  CALL   1102
26AC:  MOVFF  03,D5
26B0:  MOVFF  02,D4
26B4:  MOVFF  01,D3
26B8:  MOVFF  00,D2
.................... _temp_cal = _temp_cal / (int32)_rate; 
26BC:  MOVFF  46,00
26C0:  MOVFF  47,01
26C4:  CLRF   02
26C6:  CLRF   03
26C8:  MOVFF  03,D9
26CC:  MOVFF  02,D8
26D0:  MOVFF  47,D7
26D4:  MOVFF  46,D6
26D8:  CLRF   18
26DA:  BTFSC  FF2.7
26DC:  BSF    18.7
26DE:  BCF    FF2.7
26E0:  MOVFF  D5,FA
26E4:  MOVFF  D4,F9
26E8:  MOVFF  D3,F8
26EC:  MOVFF  D2,F7
26F0:  MOVFF  03,FE
26F4:  MOVFF  02,FD
26F8:  MOVFF  47,FC
26FC:  MOVFF  46,FB
2700:  CALL   0376
2704:  BTFSC  18.7
2706:  BSF    FF2.7
2708:  MOVFF  03,D5
270C:  MOVFF  02,D4
2710:  MOVFF  01,D3
2714:  MOVFF  00,D2
.................... _petrol = _temp_cal; 
2718:  MOVFF  D5,5B
271C:  MOVFF  D4,5A
2720:  MOVFF  D3,59
2724:  MOVFF  D2,58
.................... _chk_fill = 1; 
2728:  BSF    xA6.4
.................... _liters = (int32)_first_val; 
272A:  CLRF   53
272C:  CLRF   52
272E:  CLRF   51
2730:  MOVFF  44,50
.................... _price_fl = 1; 
2734:  BSF    xA6.5
.................... _w_e(71 ,_price); 
2736:  MOVLW  47
2738:  MOVWF  xD6
273A:  MOVFF  57,DA
273E:  MOVFF  56,D9
2742:  MOVFF  55,D8
2746:  MOVFF  54,D7
274A:  CALL   1AD6
.................... } 
.................... if(_petrol > 0 && !_price_fl)_liter_fl = 1; 
274E:  MOVF   58,F
2750:  BNZ   275E
2752:  MOVF   59,F
2754:  BNZ   275E
2756:  MOVF   5A,F
2758:  BNZ   275E
275A:  MOVF   5B,F
275C:  BZ    2762
275E:  BTFSS  xA6.5
2760:  BSF    xA7.2
.................... if(_petrol > 0)_chk_fill = 1; 
2762:  MOVF   58,F
2764:  BNZ   2772
2766:  MOVF   59,F
2768:  BNZ   2772
276A:  MOVF   5A,F
276C:  BNZ   2772
276E:  MOVF   5B,F
2770:  BTFSS  FD8.2
2772:  BSF    xA6.4
.................... if(_chk_fill)_w_e(61 ,_petrol); 
2774:  BTFSS  xA6.4
2776:  BRA    2792
2778:  MOVLW  3D
277A:  MOVWF  xD6
277C:  MOVFF  5B,DA
2780:  MOVFF  5A,D9
2784:  MOVFF  59,D8
2788:  MOVFF  58,D7
278C:  CALL   1AD6
.................... else _w_e(61 ,0); 
2790:  BRA    27A2
2792:  MOVLW  3D
2794:  MOVWF  xD6
2796:  CLRF   xDA
2798:  CLRF   xD9
279A:  CLRF   xD8
279C:  CLRF   xD7
279E:  CALL   1AD6
.................... _set_skip(); 
27A2:  CALL   1A20
.................... _skip_factor = 0; 
27A6:  CLRF   45
27A8:  CLRF   18
27AA:  BTFSC  FF2.7
27AC:  BSF    18.7
27AE:  BCF    FF2.7
.................... _to_val = _totel / 100; 
27B0:  MOVFF  5F,FA
27B4:  MOVFF  5E,F9
27B8:  MOVFF  5D,F8
27BC:  MOVFF  5C,F7
27C0:  CLRF   xFE
27C2:  CLRF   xFD
27C4:  CLRF   xFC
27C6:  MOVLW  64
27C8:  MOVWF  xFB
27CA:  CALL   0376
27CE:  BTFSC  18.7
27D0:  BSF    FF2.7
27D2:  MOVFF  03,6F
27D6:  MOVFF  02,6E
27DA:  MOVFF  01,6D
27DE:  MOVFF  00,6C
.................... _skip_at_fl = 0; 
27E2:  BCF    xA7.1
.................... _liters = 0; 
27E4:  CLRF   53
27E6:  CLRF   52
27E8:  CLRF   51
27EA:  CLRF   50
.................... _rupee = 0 ; 
27EC:  CLRF   4F
27EE:  CLRF   4E
27F0:  CLRF   4D
27F2:  CLRF   4C
.................... /////////// pulser 
.................... if(input(_s_skip)){ 
27F4:  BTFSS  F81.1
27F6:  BRA    282C
.................... _factor = 10000 / (_pulses - (int16)_skip_val); 
27F8:  CLRF   03
27FA:  MOVF   43,W
27FC:  SUBWF  27,W
27FE:  MOVWF  00
2800:  MOVF   03,W
2802:  SUBWFB 28,W
2804:  MOVWF  03
2806:  MOVFF  00,D6
280A:  MOVWF  xD7
280C:  MOVLW  27
280E:  MOVWF  xD9
2810:  MOVLW  10
2812:  MOVWF  xD8
2814:  MOVFF  03,DB
2818:  MOVFF  00,DA
281C:  CALL   18EA
2820:  MOVFF  02,2A
2824:  MOVFF  01,29
.................... _sk_sw_fl = 1; 
2828:  BSF    26.7
.................... }else{ 
282A:  BRA    284A
.................... _factor = 10000 / _pulses; 
282C:  MOVLW  27
282E:  MOVWF  xD9
2830:  MOVLW  10
2832:  MOVWF  xD8
2834:  MOVFF  28,DB
2838:  MOVFF  27,DA
283C:  CALL   18EA
2840:  MOVFF  02,2A
2844:  MOVFF  01,29
.................... _sk_sw_fl = 0; 
2848:  BCF    26.7
.................... } 
.................... _count = 0; 
284A:  CLRF   73
284C:  CLRF   72
284E:  CLRF   71
2850:  CLRF   70
.................... _add = 0; 
2852:  CLRF   3F
.................... _skip_chk = 0; 
2854:  CLRF   24
.................... ////////// 
.................... } 
2856:  GOTO   49EE (RETURN)
.................... //********************  LAST % FILL 
.................... void _last5_fill(void){ 
.................... ++_lasts; 
*
1B9E:  INCF   xA8,F
.................... if(_lasts > 5)_lasts = 1; 
1BA0:  MOVF   xA8,W
1BA2:  SUBLW  05
1BA4:  BC    1BAA
1BA6:  MOVLW  01
1BA8:  MOVWF  xA8
.................... if(_lasts == 1)_tp = 101; 
1BAA:  DECFSZ xA8,W
1BAC:  BRA    1BB2
1BAE:  MOVLW  65
1BB0:  MOVWF  xA9
.................... if(_lasts == 2)_tp = 111; 
1BB2:  MOVF   xA8,W
1BB4:  SUBLW  02
1BB6:  BNZ   1BBC
1BB8:  MOVLW  6F
1BBA:  MOVWF  xA9
.................... if(_lasts == 3)_tp = 121; 
1BBC:  MOVF   xA8,W
1BBE:  SUBLW  03
1BC0:  BNZ   1BC6
1BC2:  MOVLW  79
1BC4:  MOVWF  xA9
.................... if(_lasts == 4)_tp = 131; 
1BC6:  MOVF   xA8,W
1BC8:  SUBLW  04
1BCA:  BNZ   1BD0
1BCC:  MOVLW  83
1BCE:  MOVWF  xA9
.................... if(_lasts == 5)_tp = 141; 
1BD0:  MOVF   xA8,W
1BD2:  SUBLW  05
1BD4:  BNZ   1BDA
1BD6:  MOVLW  8D
1BD8:  MOVWF  xA9
.................... _w_e(_tp ,_last_fill); 
1BDA:  MOVFF  A9,D6
1BDE:  MOVFF  63,DA
1BE2:  MOVFF  62,D9
1BE6:  MOVFF  61,D8
1BEA:  MOVFF  60,D7
1BEE:  RCALL  1AD6
.................... _w_e((_tp + 5) ,_last_bill); 
1BF0:  MOVLW  05
1BF2:  ADDWF  xA9,W
1BF4:  MOVWF  xD2
1BF6:  MOVWF  xD6
1BF8:  MOVFF  67,DA
1BFC:  MOVFF  66,D9
1C00:  MOVFF  65,D8
1C04:  MOVFF  64,D7
1C08:  RCALL  1AD6
.................... write_eeprom(100,_lasts); 
1C0A:  MOVLW  64
1C0C:  MOVWF  FA9
1C0E:  MOVFF  A8,FA8
1C12:  BCF    FA6.6
1C14:  BCF    FA6.7
1C16:  BSF    FA6.2
1C18:  MOVFF  FF2,00
1C1C:  BCF    FF2.7
1C1E:  MOVLB  F
1C20:  MOVLW  55
1C22:  MOVWF  FA7
1C24:  MOVLW  AA
1C26:  MOVWF  FA7
1C28:  BSF    FA6.1
1C2A:  BTFSC  FA6.1
1C2C:  BRA    1C2A
1C2E:  BCF    FA6.2
1C30:  MOVF   00,W
1C32:  IORWF  FF2,F
.................... } 
1C34:  MOVLB  0
1C36:  GOTO   208A (RETURN)
.................... //****************************************************************************** 
.................... void _stop_fill(void){ 
.................... _buz_on; 
*
2046:  BCF    F8A.3
.................... _motor_off; 
2048:  BSF    F8A.4
.................... _sov1_off; 
204A:  BSF    F8A.5
.................... _sov2_off; 
204C:  BSF    F8A.6
.................... _skip_fl = 0; 
204E:  BCF    26.3
.................... //disable_interrupts(INT_EXT); 
.................... disable_interrupts(INT_RB); 
2050:  BCF    FF2.3
.................... disable_interrupts(INT_Timer2); 
2052:  BCF    F9D.1
.................... if(_liters > 0){ 
2054:  MOVF   50,F
2056:  BNZ   2064
2058:  MOVF   51,F
205A:  BNZ   2064
205C:  MOVF   52,F
205E:  BNZ   2064
2060:  MOVF   53,F
2062:  BZ    208C
.................... _last_fill = _liters; 
2064:  MOVFF  53,63
2068:  MOVFF  52,62
206C:  MOVFF  51,61
2070:  MOVFF  50,60
.................... _last_bill = _rupee; 
2074:  MOVFF  4F,67
2078:  MOVFF  4E,66
207C:  MOVFF  4D,65
2080:  MOVFF  4C,64
.................... //_totel = _totel2  + _liters; 
....................    if(_p_fl){ 
2084:  BTFSS  26.6
2086:  BRA    208C
....................    _last5_fill(); 
2088:  BRA    1B9E
....................    _p_fl = 0; 
208A:  BCF    26.6
....................    } 
.................... //_get_slip();///////////////////////////////////PRINTER 
.................... } 
.................... _chk_fill = 0; 
208C:  BCF    xA6.4
.................... _price_fl = 0; 
208E:  BCF    xA6.5
.................... _liter_fl = 0; 
2090:  BCF    xA7.2
.................... _price = 0; 
2092:  CLRF   57
2094:  CLRF   56
2096:  CLRF   55
2098:  CLRF   54
.................... _petrol = 0; 
209A:  CLRF   5B
209C:  CLRF   5A
209E:  CLRF   59
20A0:  CLRF   58
.................... _w_e(51 ,0); 
20A2:  MOVLW  33
20A4:  MOVWF  xD6
20A6:  CLRF   xDA
20A8:  CLRF   xD9
20AA:  CLRF   xD8
20AC:  CLRF   xD7
20AE:  RCALL  1AD6
.................... _w_e(61 ,0); 
20B0:  MOVLW  3D
20B2:  MOVWF  xD6
20B4:  CLRF   xDA
20B6:  CLRF   xD9
20B8:  CLRF   xD8
20BA:  CLRF   xD7
20BC:  RCALL  1AD6
.................... _w_e(71 ,0); 
20BE:  MOVLW  47
20C0:  MOVWF  xD6
20C2:  CLRF   xDA
20C4:  CLRF   xD9
20C6:  CLRF   xD8
20C8:  CLRF   xD7
20CA:  RCALL  1AD6
....................  _w_eerom(); 
20CC:  RCALL  1C3A
.................... //if(_noz_pad !=  1){ 
.................... if(_noz_off)_rst(); 
20CE:  BTFSS  F82.2
20D0:  BRA    20D4
20D2:  RCALL  200C
.................... //}else{ 
.................... //scan_keypad2(); 
.................... //if(_key2 == _s)_rst(); 
.................... //} 
.................... delay_ms(300); 
20D4:  MOVLW  02
20D6:  MOVWF  xD2
20D8:  MOVLW  96
20DA:  MOVWF  xD7
20DC:  CALL   0FF8
20E0:  DECFSZ xD2,F
20E2:  BRA    20D8
.................... _buz_off; 
20E4:  BSF    F8A.3
.................... } 
20E6:  RETLW  00
.................... //****************************************************************************** 
.................... void _power_down(void){ 
.................... _w_fail_c: 
.................... if(input(_wapda)){ 
20E8:  BTFSS  F82.1
20EA:  BRA    2126
.................... //disable_interrupts(INT_EXT); 
.................... disable_interrupts(INT_RB); 
20EC:  BCF    FF2.3
.................... _d9 = 12; 
20EE:  MOVLW  0C
20F0:  MOVWF  x95
.................... _motor_off; 
20F2:  BSF    F8A.4
.................... _sov1_off; 
20F4:  BSF    F8A.5
.................... _sov2_off; 
20F6:  BSF    F8A.6
.................... _disp_data(); 
20F8:  CALL   1048
.................... delay_ms(500); 
20FC:  MOVLW  02
20FE:  MOVWF  xD2
2100:  MOVLW  FA
2102:  MOVWF  xD7
2104:  CALL   0FF8
2108:  DECFSZ xD2,F
210A:  BRA    2100
.................... _d9 = _clear; 
210C:  MOVLW  0F
210E:  MOVWF  x95
.................... _disp_data(); 
2110:  CALL   1048
.................... delay_ms(500); 
2114:  MOVLW  02
2116:  MOVWF  xD2
2118:  MOVLW  FA
211A:  MOVWF  xD7
211C:  CALL   0FF8
2120:  DECFSZ xD2,F
2122:  BRA    2118
.................... goto _w_fail_c; 
2124:  BRA    20E8
.................... } 
.................... //if(_noz_pad !=  1){ 
.................... if(_noz_off || !_on_fl)return;//nnnnnnnnnnnnnnnnnnnn 
2126:  BTFSC  F82.2
2128:  BRA    212E
212A:  BTFSC  xA6.2
212C:  BRA    2130
212E:  BRA    215C
.................... //}else{ 
.................... //scan_keypad2(); 
.................... //if(_key2 == _s)return;; 
.................... //} 
.................... _disp_data(); 
2130:  CALL   1048
.................... _motor_on; 
2134:  BCF    F8A.4
.................... delay_ms(500); 
2136:  MOVLW  02
2138:  MOVWF  xD2
213A:  MOVLW  FA
213C:  MOVWF  xD7
213E:  CALL   0FF8
2142:  DECFSZ xD2,F
2144:  BRA    213A
.................... _sov1_on; 
2146:  BCF    F8A.5
.................... enable_interrupts(INT_RB); 
2148:  BSF    FF2.3
.................... //enable_interrupts(INT_EXT); 
.................... //if(!input(pin_b0))ext_int_edge( 0, L_TO_H); 
.................... //else ext_int_edge( 0, H_TO_L); 
.................... delay_ms(500); 
214A:  MOVLW  02
214C:  MOVWF  xD2
214E:  MOVLW  FA
2150:  MOVWF  xD7
2152:  CALL   0FF8
2156:  DECFSZ xD2,F
2158:  BRA    214E
.................... _sov2_on; 
215A:  BCF    F8A.6
.................... } 
215C:  RETLW  00
.................... //****************************************************************************** 
.................... void _control(void){ 
.................... _liters = 0; 
215E:  CLRF   53
2160:  CLRF   52
2162:  CLRF   51
2164:  CLRF   50
.................... _count = 0; 
2166:  CLRF   73
2168:  CLRF   72
216A:  CLRF   71
216C:  CLRF   70
.................... _add = 0; 
216E:  CLRF   3F
.................... _steps: 
.................... if(input(_wapda))_power_down(); 
2170:  BTFSS  F82.1
2172:  BRA    2176
2174:  RCALL  20E8
.................... ////////////////////// 
.................... //if(_noz_pad == 1){ 
.................... //scan_keypad2(); 
.................... //if(_key2 == _s)goto _end_fill; 
.................... //} 
.................... //////////////////// 
.................... //if(_noz_off && _noz_pad != 1)goto _end_fill; 
.................... if(_noz_off)goto _end_fill; 
2176:  BTFSS  F82.2
2178:  BRA    217C
217A:  BRA    25A0
.................... if(_liters > _first_val){ 
217C:  MOVF   53,F
217E:  BNZ   218E
2180:  MOVF   52,F
2182:  BNZ   218E
2184:  MOVF   51,F
2186:  BNZ   218E
2188:  MOVF   50,W
218A:  SUBWF  44,W
218C:  BC    2204
.................... _rupee = _liters *_rate/100; 
218E:  MOVFF  53,D9
2192:  MOVFF  52,D8
2196:  MOVFF  51,D7
219A:  MOVFF  50,D6
219E:  CLRF   xDD
21A0:  CLRF   xDC
21A2:  MOVFF  47,DB
21A6:  MOVFF  46,DA
21AA:  CALL   1102
21AE:  MOVFF  03,D5
21B2:  MOVFF  02,D4
21B6:  MOVFF  01,D3
21BA:  MOVFF  00,D2
21BE:  CLRF   18
21C0:  BTFSC  FF2.7
21C2:  BSF    18.7
21C4:  BCF    FF2.7
21C6:  MOVFF  03,FA
21CA:  MOVFF  02,F9
21CE:  MOVFF  01,F8
21D2:  MOVFF  00,F7
21D6:  CLRF   xFE
21D8:  CLRF   xFD
21DA:  CLRF   xFC
21DC:  MOVLW  64
21DE:  MOVWF  xFB
21E0:  CALL   0376
21E4:  BTFSC  18.7
21E6:  BSF    FF2.7
21E8:  MOVFF  03,4F
21EC:  MOVFF  02,4E
21F0:  MOVFF  01,4D
21F4:  MOVFF  00,4C
.................... _disp2(); 
21F8:  CALL   18C6
.................... _disp1(); 
21FC:  CALL   14FC
.................... _disp_data(); 
2200:  CALL   1048
.................... } 
....................  
.................... if(_liters < _v_first_val )goto _steps; 
2204:  MOVF   53,F
2206:  BNZ   2218
2208:  MOVF   52,F
220A:  BNZ   2218
220C:  MOVF   51,F
220E:  BNZ   2218
2210:  MOVF   2F,W
2212:  SUBWF  50,W
2214:  BC    2218
2216:  BRA    2170
.................... if(_petrol  > _sov_cut || _petrol == 0)_sov2_on; 
2218:  MOVF   5B,F
221A:  BNZ   223A
221C:  MOVF   5A,F
221E:  BNZ   223A
2220:  MOVF   59,F
2222:  BNZ   223A
2224:  MOVF   58,W
2226:  SUBWF  42,W
2228:  BNC   223A
222A:  MOVF   58,F
222C:  BNZ   223C
222E:  MOVF   59,F
2230:  BNZ   223C
2232:  MOVF   5A,F
2234:  BNZ   223C
2236:  MOVF   5B,F
2238:  BTFSC  FD8.2
223A:  BCF    F8A.6
.................... if(_liters <= _first_val)goto _steps; 
223C:  MOVF   53,F
223E:  BNZ   2250
2240:  MOVF   52,F
2242:  BNZ   2250
2244:  MOVF   51,F
2246:  BNZ   2250
2248:  MOVF   50,W
224A:  SUBWF  44,W
224C:  BNC   2250
224E:  BRA    2170
.................... //if(_price_fl )++_liters; 
....................  
....................  
.................... _fill: 
.................... if(input(_wapda))_power_down(); 
2250:  BTFSS  F82.1
2252:  BRA    2256
2254:  RCALL  20E8
.................... if(_noz_off){ 
2256:  BTFSS  F82.2
2258:  BRA    2268
.................... delay_ms(115); 
225A:  MOVLW  73
225C:  MOVWF  xD7
225E:  CALL   0FF8
....................    if(_noz_off)   goto _end_fill; 
2262:  BTFSS  F82.2
2264:  BRA    2268
2266:  BRA    25A0
.................... } 
....................  
.................... if(_change_fl){ 
2268:  BTFSS  xA7.3
226A:  BRA    259E
.................... _rupee = (_liters *(int32)_rate )/ 100; 
226C:  MOVFF  46,00
2270:  MOVFF  47,01
2274:  CLRF   02
2276:  CLRF   03
2278:  MOVFF  03,D5
227C:  MOVFF  02,D4
2280:  MOVFF  47,D3
2284:  MOVFF  46,D2
2288:  MOVFF  53,D9
228C:  MOVFF  52,D8
2290:  MOVFF  51,D7
2294:  MOVFF  50,D6
2298:  MOVFF  03,DD
229C:  MOVFF  02,DC
22A0:  MOVFF  47,DB
22A4:  MOVFF  46,DA
22A8:  CALL   1102
22AC:  MOVFF  03,D6
22B0:  MOVFF  02,D5
22B4:  MOVFF  01,D4
22B8:  MOVFF  00,D3
22BC:  CLRF   18
22BE:  BTFSC  FF2.7
22C0:  BSF    18.7
22C2:  BCF    FF2.7
22C4:  MOVFF  03,FA
22C8:  MOVFF  02,F9
22CC:  MOVFF  01,F8
22D0:  MOVFF  00,F7
22D4:  CLRF   xFE
22D6:  CLRF   xFD
22D8:  CLRF   xFC
22DA:  MOVLW  64
22DC:  MOVWF  xFB
22DE:  CALL   0376
22E2:  BTFSC  18.7
22E4:  BSF    FF2.7
22E6:  MOVFF  03,4F
22EA:  MOVFF  02,4E
22EE:  MOVFF  01,4D
22F2:  MOVFF  00,4C
.................... //   if(_liters > _first_val+1){ 
....................      _disp2(); 
22F6:  CALL   18C6
....................      _disp1(); 
22FA:  CALL   14FC
....................     _disp_data(); 
22FE:  CALL   1048
....................    _change_fl = 0; 
2302:  BCF    xA7.3
2304:  CLRF   18
2306:  BTFSC  FF2.7
2308:  BSF    18.7
230A:  BCF    FF2.7
.................... //   } 
.................... if(_totel / 100  >  _to_val ){ 
230C:  MOVFF  5F,FA
2310:  MOVFF  5E,F9
2314:  MOVFF  5D,F8
2318:  MOVFF  5C,F7
231C:  CLRF   xFE
231E:  CLRF   xFD
2320:  CLRF   xFC
2322:  MOVLW  64
2324:  MOVWF  xFB
2326:  CALL   0376
232A:  BTFSC  18.7
232C:  BSF    FF2.7
232E:  MOVFF  03,D5
2332:  MOVFF  02,D4
2336:  MOVFF  01,D3
233A:  MOVFF  00,D2
233E:  MOVF   6F,W
2340:  SUBWF  03,W
2342:  BNC   239E
2344:  BNZ   235C
2346:  MOVF   6E,W
2348:  SUBWF  xD4,W
234A:  BNC   239E
234C:  BNZ   235C
234E:  MOVF   6D,W
2350:  SUBWF  xD3,W
2352:  BNC   239E
2354:  BNZ   235C
2356:  MOVF   xD2,W
2358:  SUBWF  6C,W
235A:  BC    239E
235C:  CLRF   18
235E:  BTFSC  FF2.7
2360:  BSF    18.7
2362:  BCF    FF2.7
.................... _to_val = _totel / 100; 
2364:  MOVFF  5F,FA
2368:  MOVFF  5E,F9
236C:  MOVFF  5D,F8
2370:  MOVFF  5C,F7
2374:  CLRF   xFE
2376:  CLRF   xFD
2378:  CLRF   xFC
237A:  MOVLW  64
237C:  MOVWF  xFB
237E:  CALL   0376
2382:  BTFSC  18.7
2384:  BSF    FF2.7
2386:  MOVFF  03,6F
238A:  MOVFF  02,6E
238E:  MOVFF  01,6D
2392:  MOVFF  00,6C
.................... int_count = 0; 
2396:  CLRF   xA2
.................... _totelizer_on; 
2398:  BCF    F8C.0
.................... _tm2_on; 
239A:  BSF    F8C.5
.................... _buz_on; 
239C:  BCF    F8A.3
.................... } 
.................... ///////////////////////////ok vals 
.................... if(!_sk_l_fl){ 
239E:  BTFSC  26.5
23A0:  BRA    2420
....................    if(_liters > (int32)_ok_liters * 100){ 
23A2:  CLRF   xD5
23A4:  CLRF   xD4
23A6:  CLRF   xD3
23A8:  MOVFF  32,D2
23AC:  MOVFF  D5,D9
23B0:  MOVFF  D4,D8
23B4:  MOVFF  D3,D7
23B8:  MOVFF  32,D6
23BC:  CLRF   xDD
23BE:  CLRF   xDC
23C0:  CLRF   xDB
23C2:  MOVLW  64
23C4:  MOVWF  xDA
23C6:  CALL   1102
23CA:  MOVF   03,W
23CC:  SUBWF  53,W
23CE:  BNC   2420
23D0:  BNZ   23E8
23D2:  MOVF   02,W
23D4:  SUBWF  52,W
23D6:  BNC   2420
23D8:  BNZ   23E8
23DA:  MOVF   01,W
23DC:  SUBWF  51,W
23DE:  BNC   2420
23E0:  BNZ   23E8
23E2:  MOVF   50,W
23E4:  SUBWF  00,W
23E6:  BC    2420
....................    _skip_val = _skip_liters; 
23E8:  MOVFF  31,43
....................    _factor = 10000 / (_pulses - (int16)_skip_val); 
23EC:  CLRF   03
23EE:  MOVF   43,W
23F0:  SUBWF  27,W
23F2:  MOVWF  00
23F4:  MOVF   03,W
23F6:  SUBWFB 28,W
23F8:  MOVWF  03
23FA:  MOVFF  00,D2
23FE:  MOVWF  xD3
2400:  MOVLW  27
2402:  MOVWF  xD9
2404:  MOVLW  10
2406:  MOVWF  xD8
2408:  MOVFF  03,DB
240C:  MOVFF  00,DA
2410:  CALL   18EA
2414:  MOVFF  02,2A
2418:  MOVFF  01,29
....................    _sk_l_fl = 1; 
241C:  BSF    26.5
....................    _sk_sw_fl = 1; 
241E:  BSF    26.7
....................    } 
.................... } 
....................  
.................... ////////////////////////////////Button 
.................... if(input(_s_skip)){ 
2420:  BTFSS  F81.1
2422:  BRA    245C
....................    if(!_sk_sw_fl){ 
2424:  BTFSC  26.7
2426:  BRA    245A
....................    _factor = 10000 / (_pulses - (int16)_skip_val); 
2428:  CLRF   03
242A:  MOVF   43,W
242C:  SUBWF  27,W
242E:  MOVWF  00
2430:  MOVF   03,W
2432:  SUBWFB 28,W
2434:  MOVWF  03
2436:  MOVFF  00,D2
243A:  MOVWF  xD3
243C:  MOVLW  27
243E:  MOVWF  xD9
2440:  MOVLW  10
2442:  MOVWF  xD8
2444:  MOVFF  03,DB
2448:  MOVFF  00,DA
244C:  CALL   18EA
2450:  MOVFF  02,2A
2454:  MOVFF  01,29
....................    _sk_sw_fl = 1; 
2458:  BSF    26.7
....................    } 
.................... }else{ 
245A:  BRA    247E
....................    if(_sk_sw_fl){ 
245C:  BTFSS  26.7
245E:  BRA    247E
....................    _factor = 10000 / _pulses; 
2460:  MOVLW  27
2462:  MOVWF  xD9
2464:  MOVLW  10
2466:  MOVWF  xD8
2468:  MOVFF  28,DB
246C:  MOVFF  27,DA
2470:  CALL   18EA
2474:  MOVFF  02,2A
2478:  MOVFF  01,29
....................    _sk_sw_fl = 0; 
247C:  BCF    26.7
....................    } 
.................... } 
.................... //////////////////////////////// 
.................... if(_chk_fill){ 
247E:  BTFSS  xA6.4
2480:  BRA    259E
....................    if(_liters > _petrol - (int32)_sov_cut)_sov2_off; 
2482:  CLRF   01
2484:  CLRF   02
2486:  CLRF   03
2488:  MOVF   42,W
248A:  SUBWF  58,W
248C:  MOVWF  00
248E:  MOVF   01,W
2490:  SUBWFB 59,W
2492:  MOVWF  01
2494:  MOVF   02,W
2496:  SUBWFB 5A,W
2498:  MOVWF  02
249A:  MOVF   03,W
249C:  SUBWFB 5B,W
249E:  MOVWF  03
24A0:  SUBWF  53,W
24A2:  BNC   24BE
24A4:  BNZ   24BC
24A6:  MOVF   02,W
24A8:  SUBWF  52,W
24AA:  BNC   24BE
24AC:  BNZ   24BC
24AE:  MOVF   01,W
24B0:  SUBWF  51,W
24B2:  BNC   24BE
24B4:  BNZ   24BC
24B6:  MOVF   50,W
24B8:  SUBWF  00,W
24BA:  BTFSS  FD8.0
24BC:  BSF    F8A.6
....................    if(_liters >= _petrol){ 
24BE:  MOVF   5B,W
24C0:  SUBWF  53,W
24C2:  BNC   259E
24C4:  BNZ   24DC
24C6:  MOVF   5A,W
24C8:  SUBWF  52,W
24CA:  BNC   259E
24CC:  BNZ   24DC
24CE:  MOVF   59,W
24D0:  SUBWF  51,W
24D2:  BNC   259E
24D4:  BNZ   24DC
24D6:  MOVF   58,W
24D8:  SUBWF  50,W
24DA:  BNC   259E
....................    disable_interrupts(INT_RB); 
24DC:  BCF    FF2.3
....................    _motor_off; 
24DE:  BSF    F8A.4
....................    _sov1_off; 
24E0:  BSF    F8A.5
....................    _sov2_off; 
24E2:  BSF    F8A.6
....................    _chk_fill = 0; 
24E4:  BCF    xA6.4
....................    delay_ms(200); 
24E6:  MOVLW  C8
24E8:  MOVWF  xD7
24EA:  CALL   0FF8
....................    _liters = _petrol; 
24EE:  MOVFF  5B,53
24F2:  MOVFF  5A,52
24F6:  MOVFF  59,51
24FA:  MOVFF  58,50
....................   _rupee = (_liters *(int32)_rate )/ 100; 
24FE:  MOVFF  46,00
2502:  MOVFF  47,01
2506:  CLRF   02
2508:  CLRF   03
250A:  MOVFF  03,D5
250E:  MOVFF  02,D4
2512:  MOVFF  47,D3
2516:  MOVFF  46,D2
251A:  MOVFF  53,D9
251E:  MOVFF  52,D8
2522:  MOVFF  51,D7
2526:  MOVFF  50,D6
252A:  MOVFF  03,DD
252E:  MOVFF  02,DC
2532:  MOVFF  47,DB
2536:  MOVFF  46,DA
253A:  CALL   1102
253E:  MOVFF  03,D6
2542:  MOVFF  02,D5
2546:  MOVFF  01,D4
254A:  MOVFF  00,D3
254E:  CLRF   18
2550:  BTFSC  FF2.7
2552:  BSF    18.7
2554:  BCF    FF2.7
2556:  MOVFF  03,FA
255A:  MOVFF  02,F9
255E:  MOVFF  01,F8
2562:  MOVFF  00,F7
2566:  CLRF   xFE
2568:  CLRF   xFD
256A:  CLRF   xFC
256C:  MOVLW  64
256E:  MOVWF  xFB
2570:  CALL   0376
2574:  BTFSC  18.7
2576:  BSF    FF2.7
2578:  MOVFF  03,4F
257C:  MOVFF  02,4E
2580:  MOVFF  01,4D
2584:  MOVFF  00,4C
....................    if(_price_fl)_rupee = _price; 
2588:  BTFSS  xA6.5
258A:  BRA    259C
258C:  MOVFF  57,4F
2590:  MOVFF  56,4E
2594:  MOVFF  55,4D
2598:  MOVFF  54,4C
....................    goto _end_fill; 
259C:  BRA    25A0
....................    } 
....................  } 
.................... } 
....................  
.................... goto _fill; 
259E:  BRA    2250
.................... _end_fill: 
....................    disable_interrupts(INT_RB); 
25A0:  BCF    FF2.3
....................    _motor_off; 
25A2:  BSF    F8A.4
....................    _sov1_off; 
25A4:  BSF    F8A.5
....................    _sov2_off; 
25A6:  BSF    F8A.6
....................  
....................    _totel = _totel2  + _liters; 
25A8:  MOVF   50,W
25AA:  ADDWF  x88,W
25AC:  MOVWF  5C
25AE:  MOVF   51,W
25B0:  ADDWFC x89,W
25B2:  MOVWF  5D
25B4:  MOVF   52,W
25B6:  ADDWFC x8A,W
25B8:  MOVWF  5E
25BA:  MOVF   53,W
25BC:  ADDWFC x8B,W
25BE:  MOVWF  5F
25C0:  CLRF   18
25C2:  BTFSC  FF2.7
25C4:  BSF    18.7
25C6:  BCF    FF2.7
....................    if(_totel / 100  >  _to_val ){ 
25C8:  MOVFF  5F,FA
25CC:  MOVFF  5E,F9
25D0:  MOVFF  5D,F8
25D4:  MOVFF  5C,F7
25D8:  CLRF   xFE
25DA:  CLRF   xFD
25DC:  CLRF   xFC
25DE:  MOVLW  64
25E0:  MOVWF  xFB
25E2:  CALL   0376
25E6:  BTFSC  18.7
25E8:  BSF    FF2.7
25EA:  MOVFF  03,D5
25EE:  MOVFF  02,D4
25F2:  MOVFF  01,D3
25F6:  MOVFF  00,D2
25FA:  MOVF   6F,W
25FC:  SUBWF  03,W
25FE:  BNC   265A
2600:  BNZ   2618
2602:  MOVF   6E,W
2604:  SUBWF  xD4,W
2606:  BNC   265A
2608:  BNZ   2618
260A:  MOVF   6D,W
260C:  SUBWF  xD3,W
260E:  BNC   265A
2610:  BNZ   2618
2612:  MOVF   xD2,W
2614:  SUBWF  6C,W
2616:  BC    265A
2618:  CLRF   18
261A:  BTFSC  FF2.7
261C:  BSF    18.7
261E:  BCF    FF2.7
....................    _to_val = _totel / 100; 
2620:  MOVFF  5F,FA
2624:  MOVFF  5E,F9
2628:  MOVFF  5D,F8
262C:  MOVFF  5C,F7
2630:  CLRF   xFE
2632:  CLRF   xFD
2634:  CLRF   xFC
2636:  MOVLW  64
2638:  MOVWF  xFB
263A:  CALL   0376
263E:  BTFSC  18.7
2640:  BSF    FF2.7
2642:  MOVFF  03,6F
2646:  MOVFF  02,6E
264A:  MOVFF  01,6D
264E:  MOVFF  00,6C
....................    int_count = 0; 
2652:  CLRF   xA2
....................    _totelizer_on; 
2654:  BCF    F8C.0
....................    _tm2_on; 
2656:  BSF    F8C.5
....................    _buz_on; 
2658:  BCF    F8A.3
....................    } 
....................  
.................... _disp2(); 
265A:  CALL   18C6
.................... _disp1(); 
265E:  CALL   14FC
....................  
.................... //if(input(_s_skip))_d9 = 15; 
.................... //else _d9 = 14; 
....................  
.................... _disp_data(); 
2662:  CALL   1048
.................... _stop_fill(); 
2666:  RCALL  2046
.................... delay_ms(15); 
2668:  MOVLW  0F
266A:  MOVWF  xD7
266C:  CALL   0FF8
.................... _totelizer_off; 
2670:  BSF    F8C.0
.................... _tm2_off; 
2672:  BCF    F8C.5
.................... _close_all: 
.................... if(_noz_on)goto _close_all; 
2674:  BTFSC  F82.2
2676:  BRA    267A
2678:  BRA    2674
.................... return; 
.................... } 
267A:  GOTO   4A36 (RETURN)
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++++ 
.................... void _num_press(void){ 
.................... _num = 0; 
*
2BA0:  CLRF   40
.................... if(_key1 < 11 && _key1 > 0)_num =_key1; 
2BA2:  MOVF   xA5,W
2BA4:  SUBLW  0A
2BA6:  BNC   2BB0
2BA8:  MOVF   xA5,F
2BAA:  BZ    2BB0
2BAC:  MOVFF  A5,40
.................... } 
2BB0:  RETLW  00
.................... //****************************************************************************** 
.................... void _price_set(void){ 
.................... _oil_fl = 0; 
2BB2:  BCF    xA6.6
.................... _p_deci_fl = 0; 
2BB4:  BCF    26.1
.................... _code_val = 0; 
2BB6:  CLRF   41
.................... _rupee = 0; 
2BB8:  CLRF   4F
2BBA:  CLRF   4E
2BBC:  CLRF   4D
2BBE:  CLRF   4C
.................... _petrol = 0; 
2BC0:  CLRF   5B
2BC2:  CLRF   5A
2BC4:  CLRF   59
2BC6:  CLRF   58
.................... _liters = 0; 
2BC8:  CLRF   53
2BCA:  CLRF   52
2BCC:  CLRF   51
2BCE:  CLRF   50
.................... _disp2(); 
2BD0:  CALL   18C6
.................... _d9 = _clear; 
2BD4:  MOVLW  0F
2BD6:  MOVWF  x95
.................... _d10 = _clear; 
2BD8:  MOVWF  x9C
.................... _d11 = _clear; 
2BDA:  MOVWF  x9B
.................... _d12 = _clear; 
2BDC:  MOVWF  x9D
.................... _d13 = _clear; 
2BDE:  MOVWF  x8E
.................... _d14 = _clear; 
2BE0:  MOVWF  x8F
.................... _d15 = _clear; 
2BE2:  MOVWF  x91
.................... _d16 = _clear; 
2BE4:  MOVWF  x90
.................... _disp1b(); 
2BE6:  RCALL  2B16
.................... _disp_data(); 
2BE8:  CALL   1048
.................... _p_set: 
.................... if(_key1 != 0){ 
2BEC:  MOVF   xA5,F
2BEE:  BTFSC  FD8.2
2BF0:  BRA    2CE0
....................    if(_key1 > 16 && _key1 < 22 ){ 
2BF2:  MOVF   xA5,W
2BF4:  SUBLW  10
2BF6:  BC    2C3A
2BF8:  MOVF   xA5,W
2BFA:  SUBLW  15
2BFC:  BNC   2C3A
....................    _price_enter(); 
2BFE:  RCALL  2A92
2C00:  CLRF   18
2C02:  BTFSC  FF2.7
2C04:  BSF    18.7
2C06:  BCF    FF2.7
....................    _price = _price / 100; 
2C08:  MOVFF  57,FA
2C0C:  MOVFF  56,F9
2C10:  MOVFF  55,F8
2C14:  MOVFF  54,F7
2C18:  CLRF   xFE
2C1A:  CLRF   xFD
2C1C:  CLRF   xFC
2C1E:  MOVLW  64
2C20:  MOVWF  xFB
2C22:  CALL   0376
2C26:  BTFSC  18.7
2C28:  BSF    FF2.7
2C2A:  MOVFF  03,57
2C2E:  MOVFF  02,56
2C32:  MOVFF  01,55
2C36:  MOVFF  00,54
....................    } 
....................    _num_press(); 
2C3A:  RCALL  2BA0
....................    if(_num < 11 && _num != 0 && _code_val < 6){ 
2C3C:  MOVF   40,W
2C3E:  SUBLW  0A
2C40:  BNC   2CE0
2C42:  MOVF   40,F
2C44:  BZ    2CE0
2C46:  MOVF   41,W
2C48:  SUBLW  05
2C4A:  BNC   2CE0
....................    if(_num == 10)_num = 0; 
2C4C:  MOVF   40,W
2C4E:  SUBLW  0A
2C50:  BTFSC  FD8.2
2C52:  CLRF   40
....................    if(_code_val == 0){ 
2C54:  MOVF   41,F
2C56:  BNZ   2C62
....................    _price = (int32)_num; 
2C58:  CLRF   57
2C5A:  CLRF   56
2C5C:  CLRF   55
2C5E:  MOVFF  40,54
....................    } 
....................     if(_code_val > 0){ 
2C62:  MOVF   41,F
2C64:  BZ    2CAA
....................     _price = _price * 10; 
2C66:  MOVFF  57,D9
2C6A:  MOVFF  56,D8
2C6E:  MOVFF  55,D7
2C72:  MOVFF  54,D6
2C76:  CLRF   xDD
2C78:  CLRF   xDC
2C7A:  CLRF   xDB
2C7C:  MOVLW  0A
2C7E:  MOVWF  xDA
2C80:  CALL   1102
2C84:  MOVFF  03,57
2C88:  MOVFF  02,56
2C8C:  MOVFF  01,55
2C90:  MOVFF  00,54
....................     _price = _price +(int32)_num; 
2C94:  CLRF   01
2C96:  CLRF   02
2C98:  CLRF   03
2C9A:  MOVF   40,W
2C9C:  ADDWF  54,F
2C9E:  MOVF   01,W
2CA0:  ADDWFC 55,F
2CA2:  MOVF   02,W
2CA4:  ADDWFC 56,F
2CA6:  MOVF   03,W
2CA8:  ADDWFC 57,F
....................     } 
....................      _disp1b(); 
2CAA:  RCALL  2B16
....................      IF(_price < 100000)_d1 = 12; 
2CAC:  MOVF   57,F
2CAE:  BNZ   2CCA
2CB0:  MOVF   56,W
2CB2:  SUBLW  01
2CB4:  BNC   2CCA
2CB6:  BNZ   2CC6
2CB8:  MOVF   55,W
2CBA:  SUBLW  86
2CBC:  BNC   2CCA
2CBE:  BNZ   2CC6
2CC0:  MOVF   54,W
2CC2:  SUBLW  9F
2CC4:  BNC   2CCA
2CC6:  MOVLW  0C
2CC8:  MOVWF  x96
....................     _disp_data(); 
2CCA:  CALL   1048
....................     ++_code_val; 
2CCE:  INCF   41,F
....................     delay_ms(300); 
2CD0:  MOVLW  02
2CD2:  MOVWF  xD2
2CD4:  MOVLW  96
2CD6:  MOVWF  xD7
2CD8:  CALL   0FF8
2CDC:  DECFSZ xD2,F
2CDE:  BRA    2CD4
....................   } 
.................... } 
.................... scan_keypad(); 
2CE0:  RCALL  28B0
.................... if(_key1 == _c || _key1 == _l)return; 
2CE2:  MOVF   3B,W
2CE4:  SUBWF  xA5,W
2CE6:  BZ    2CEE
2CE8:  MOVF   3A,W
2CEA:  SUBWF  xA5,W
2CEC:  BNZ   2CF0
2CEE:  BRA    2DC2
....................  
.................... //if(_noz_pad == 1){ 
.................... //   if(_key1 == _r)goto _kps1; 
.................... //} 
.................... //if(_noz_on && _noz_pad != 1){ 
.................... if(_noz_on){ 
2CF0:  BTFSC  F82.2
2CF2:  BRA    2DC0
.................... _kps1: 
.................... _price = _price * 100; 
2CF4:  MOVFF  57,D9
2CF8:  MOVFF  56,D8
2CFC:  MOVFF  55,D7
2D00:  MOVFF  54,D6
2D04:  CLRF   xDD
2D06:  CLRF   xDC
2D08:  CLRF   xDB
2D0A:  MOVLW  64
2D0C:  MOVWF  xDA
2D0E:  CALL   1102
2D12:  MOVFF  03,57
2D16:  MOVFF  02,56
2D1A:  MOVFF  01,55
2D1E:  MOVFF  00,54
.................... if((_price * 100)/_rate < 3){ 
2D22:  MOVFF  57,D9
2D26:  MOVFF  56,D8
2D2A:  MOVFF  55,D7
2D2E:  MOVFF  54,D6
2D32:  CLRF   xDD
2D34:  CLRF   xDC
2D36:  CLRF   xDB
2D38:  MOVLW  64
2D3A:  MOVWF  xDA
2D3C:  CALL   1102
2D40:  MOVFF  03,D5
2D44:  MOVFF  02,D4
2D48:  MOVFF  01,D3
2D4C:  MOVFF  00,D2
2D50:  CLRF   18
2D52:  BTFSC  FF2.7
2D54:  BSF    18.7
2D56:  BCF    FF2.7
2D58:  MOVFF  03,FA
2D5C:  MOVFF  02,F9
2D60:  MOVFF  01,F8
2D64:  MOVFF  00,F7
2D68:  CLRF   xFE
2D6A:  CLRF   xFD
2D6C:  MOVFF  47,FC
2D70:  MOVFF  46,FB
2D74:  CALL   0376
2D78:  BTFSC  18.7
2D7A:  BSF    FF2.7
2D7C:  MOVFF  03,D6
2D80:  MOVFF  02,D5
2D84:  MOVFF  01,D4
2D88:  MOVFF  00,D3
2D8C:  MOVF   xD6,F
2D8E:  BNZ   2DBE
2D90:  MOVF   xD5,F
2D92:  BNZ   2DBE
2D94:  MOVF   xD4,F
2D96:  BNZ   2DBE
2D98:  MOVF   xD3,W
2D9A:  SUBLW  02
2D9C:  BNC   2DBE
.................... _noz_fl = 1;////////////////////////////////////// 
2D9E:  BSF    xA6.0
.................... _price = 0; 
2DA0:  CLRF   57
2DA2:  CLRF   56
2DA4:  CLRF   55
2DA6:  CLRF   54
.................... _disp1b(); 
2DA8:  RCALL  2B16
.................... _disp_data(); 
2DAA:  CALL   1048
.................... delay_ms(300); 
2DAE:  MOVLW  02
2DB0:  MOVWF  xD2
2DB2:  MOVLW  96
2DB4:  MOVWF  xD7
2DB6:  CALL   0FF8
2DBA:  DECFSZ xD2,F
2DBC:  BRA    2DB2
.................... } 
.................... return; 
2DBE:  BRA    2DC2
.................... } 
.................... goto _p_set; 
2DC0:  BRA    2BEC
.................... } 
2DC2:  RETLW  00
.................... //****************************************************************************** 
.................... void _petrol_set(void){ 
.................... _oil_fl = 1; 
*
41DC:  BSF    xA6.6
.................... _rupee = 0; 
41DE:  CLRF   4F
41E0:  CLRF   4E
41E2:  CLRF   4D
41E4:  CLRF   4C
.................... _petrol = 0; 
41E6:  CLRF   5B
41E8:  CLRF   5A
41EA:  CLRF   59
41EC:  CLRF   58
.................... _price = 0; 
41EE:  CLRF   57
41F0:  CLRF   56
41F2:  CLRF   55
41F4:  CLRF   54
.................... _disp1(); 
41F6:  CALL   14FC
.................... _d1 = _clear; 
41FA:  MOVLW  0F
41FC:  MOVWF  x96
.................... _d2 = _clear; 
41FE:  MOVWF  x93
.................... _d3 = _clear; 
4200:  MOVWF  x94
.................... _d4 = _clear; 
4202:  MOVWF  x99
.................... _d5 = _clear; 
4204:  MOVWF  x9A
.................... _d6 = _clear; 
4206:  MOVWF  x97
.................... _d7 = _clear; 
4208:  MOVWF  x98
.................... _d8 = _clear; 
420A:  MOVWF  x92
.................... _disp2a(); 
420C:  RCALL  40DA
.................... _disp_data(); 
420E:  CALL   1048
.................... _l_set: 
.................... if(_key1 != 0){ 
4212:  MOVF   xA5,F
4214:  BZ    42B2
.................... //   if(_key1 > 16 && _key1 < 22 ){ 
....................   if(_key1  > 16 && _key1 < 22 && _oil_fl == 1 ){ 
4216:  MOVF   xA5,W
4218:  SUBLW  10
421A:  BC    4228
421C:  MOVF   xA5,W
421E:  SUBLW  15
4220:  BNC   4228
4222:  BTFSS  xA6.6
4224:  BRA    4228
....................    _petrol_enter(); 
4226:  BRA    4164
....................    } 
....................    _num_press(); 
4228:  CALL   2BA0
....................    if(_num < 11 && _num != 0 && _code_val < 6){ 
422C:  MOVF   40,W
422E:  SUBLW  0A
4230:  BNC   42B2
4232:  MOVF   40,F
4234:  BZ    42B2
4236:  MOVF   41,W
4238:  SUBLW  05
423A:  BNC   42B2
....................     if(_num == 10)_num = 0; 
423C:  MOVF   40,W
423E:  SUBLW  0A
4240:  BTFSC  FD8.2
4242:  CLRF   40
....................    if(_code_val == 0){ 
4244:  MOVF   41,F
4246:  BNZ   4252
....................    _petrol = (int32)_num; 
4248:  CLRF   5B
424A:  CLRF   5A
424C:  CLRF   59
424E:  MOVFF  40,58
....................    } 
....................     if(_code_val > 0){ 
4252:  MOVF   41,F
4254:  BZ    429A
....................     _petrol = _petrol * 10; 
4256:  MOVFF  5B,D9
425A:  MOVFF  5A,D8
425E:  MOVFF  59,D7
4262:  MOVFF  58,D6
4266:  CLRF   xDD
4268:  CLRF   xDC
426A:  CLRF   xDB
426C:  MOVLW  0A
426E:  MOVWF  xDA
4270:  CALL   1102
4274:  MOVFF  03,5B
4278:  MOVFF  02,5A
427C:  MOVFF  01,59
4280:  MOVFF  00,58
....................     _petrol = _petrol +(int32)_num; 
4284:  CLRF   01
4286:  CLRF   02
4288:  CLRF   03
428A:  MOVF   40,W
428C:  ADDWF  58,F
428E:  MOVF   01,W
4290:  ADDWFC 59,F
4292:  MOVF   02,W
4294:  ADDWFC 5A,F
4296:  MOVF   03,W
4298:  ADDWFC 5B,F
....................     } 
....................     _disp2a(); 
429A:  RCALL  40DA
....................     _disp_data(); 
429C:  CALL   1048
....................     ++_code_val; 
42A0:  INCF   41,F
....................     delay_ms(300); 
42A2:  MOVLW  02
42A4:  MOVWF  xD2
42A6:  MOVLW  96
42A8:  MOVWF  xD7
42AA:  CALL   0FF8
42AE:  DECFSZ xD2,F
42B0:  BRA    42A6
....................   } 
.................... } 
.................... scan_keypad(); 
42B2:  CALL   28B0
.................... if(_key1 == _c || _key1 == _p)return; 
42B6:  MOVF   3B,W
42B8:  SUBWF  xA5,W
42BA:  BZ    42C2
42BC:  MOVF   39,W
42BE:  SUBWF  xA5,W
42C0:  BNZ   42C4
42C2:  BRA    42FA
....................  
.................... //if(_noz_pad == 1){ 
.................... //   if(_key1 == _r){ 
.................... //      if(!_deci_fl)_petrol = _petrol * 100; 
.................... //      return; 
.................... // } 
.................... //} 
.................... //if(_noz_on && _noz_pad != 1){ 
.................... if(_noz_on){ 
42C4:  BTFSC  F82.2
42C6:  BRA    42F8
.................... //if(!_deci_fl)_petrol = _petrol * 100; 
.................... _petrol = _petrol * 100; 
42C8:  MOVFF  5B,D9
42CC:  MOVFF  5A,D8
42D0:  MOVFF  59,D7
42D4:  MOVFF  58,D6
42D8:  CLRF   xDD
42DA:  CLRF   xDC
42DC:  CLRF   xDB
42DE:  MOVLW  64
42E0:  MOVWF  xDA
42E2:  CALL   1102
42E6:  MOVFF  03,5B
42EA:  MOVFF  02,5A
42EE:  MOVFF  01,59
42F2:  MOVFF  00,58
.................... return; 
42F6:  BRA    42FA
.................... } 
.................... goto _l_set; 
42F8:  BRA    4212
.................... } 
42FA:  GOTO   4AF2 (RETURN)
.................... //****************************************************************************** 
.................... void _main_code_enter(void){ 
.................... int16 _all_codes = 0; 
*
3654:  CLRF   xD2
3656:  CLRF   xD3
.................... _code_val = 0; 
3658:  CLRF   41
.................... _code_block = 0; 
365A:  CLRF   23
.................... _aa: 
.................... scan_keypad(); 
365C:  CALL   28B0
.................... if(_key1 != 0){ 
3660:  MOVF   xA5,F
3662:  BTFSC  FD8.2
3664:  BRA    372A
....................    _num_press(); 
3666:  CALL   2BA0
....................    if(_num < 11 && _num != 0 && _code_val < 4){ 
366A:  MOVF   40,W
366C:  SUBLW  0A
366E:  BNC   36FC
3670:  MOVF   40,F
3672:  BZ    36FC
3674:  MOVF   41,W
3676:  SUBLW  03
3678:  BNC   36FC
....................    if(_num == 10)_num = 0; 
367A:  MOVF   40,W
367C:  SUBLW  0A
367E:  BTFSC  FD8.2
3680:  CLRF   40
....................    if(_code_val == 0){ 
3682:  MOVF   41,F
3684:  BNZ   368C
....................    _all_codes = (int32)_num; 
3686:  CLRF   xD3
3688:  MOVFF  40,D2
....................    } 
....................     if(_code_val > 0){ 
368C:  MOVF   41,F
368E:  BZ    36B4
....................     _all_codes = _all_codes * 10; 
3690:  MOVFF  D3,DD
3694:  MOVFF  D2,DC
3698:  CLRF   xDF
369A:  MOVLW  0A
369C:  MOVWF  xDE
369E:  CALL   1A02
36A2:  MOVFF  02,D3
36A6:  MOVFF  01,D2
....................     _all_codes = _all_codes +(int32)_num; 
36AA:  CLRF   01
36AC:  MOVF   40,W
36AE:  ADDWF  xD2,F
36B0:  MOVF   01,W
36B2:  ADDWFC xD3,F
....................     } 
....................    if(_code_val == 0)_d13 = 0; 
36B4:  MOVF   41,F
36B6:  BTFSC  FD8.2
36B8:  CLRF   x8E
....................    if(_code_val == 1)_d14 = 0; 
36BA:  DECFSZ 41,W
36BC:  BRA    36C0
36BE:  CLRF   x8F
....................    if(_code_val == 2)_d15 = 0; 
36C0:  MOVF   41,W
36C2:  SUBLW  02
36C4:  BTFSC  FD8.2
36C6:  CLRF   x91
....................    if(_code_val == 3)_d16 = 0; 
36C8:  MOVF   41,W
36CA:  SUBLW  03
36CC:  BTFSC  FD8.2
36CE:  CLRF   x90
....................     ++_code_val; 
36D0:  INCF   41,F
....................     _disp_data(); 
36D2:  CALL   1048
....................     delay_ms(300); 
36D6:  MOVLW  02
36D8:  MOVWF  xD4
36DA:  MOVLW  96
36DC:  MOVWF  xD7
36DE:  CALL   0FF8
36E2:  DECFSZ xD4,F
36E4:  BRA    36DA
....................     if(_all_codes > 9999){ 
36E6:  MOVF   xD3,W
36E8:  SUBLW  26
36EA:  BC    36FC
36EC:  XORLW  FF
36EE:  BNZ   36F6
36F0:  MOVF   xD2,W
36F2:  SUBLW  0F
36F4:  BC    36FC
....................     _all_codes = 0; 
36F6:  CLRF   xD3
36F8:  CLRF   xD2
....................     _code_val = 0; 
36FA:  CLRF   41
....................     } 
....................   } 
.................... //   if(_key1 == _L){ 
.................... //   _code_id = 0; 
.................... //   _code_block = 0; 
.................... //      if(_all_codes == 71777554)_code_block = 3; 
.................... //      if(_all_codes == 2222)_code_block = 2; 
....................    if(_all_codes == _m_code || _all_codes == 1122){ 
36FC:  MOVF   4A,W
36FE:  SUBWF  xD2,W
3700:  BNZ   3708
3702:  MOVF   4B,W
3704:  SUBWF  xD3,W
3706:  BZ    3714
3708:  MOVF   xD2,W
370A:  SUBLW  62
370C:  BNZ   371A
370E:  MOVF   xD3,W
3710:  SUBLW  04
3712:  BNZ   371A
....................    _code_block = 1; 
3714:  MOVLW  01
3716:  MOVWF  23
....................    goto _c_pass; 
3718:  BRA    3720
....................    } 
....................  
....................    if(_key1 == _C){ 
371A:  MOVF   3B,W
371C:  SUBWF  xA5,W
371E:  BNZ   372A
....................    _c_pass: 
....................    _rst(); 
3720:  CALL   200C
....................    _key1 = 0; 
3724:  CLRF   xA5
....................    _code_val = 0; 
3726:  CLRF   41
....................    return; 
3728:  BRA    372C
....................    } 
.................... } // key > 0 
.................... goto _aa; 
372A:  BRA    365C
.................... } 
372C:  GOTO   4ABC (RETURN)
.................... //****************************************************************************** 
.................... void _edit_value(void){ 
.................... int32 _to; 
.................... delay_ms(1500); 
*
3A76:  MOVLW  06
3A78:  MOVWF  xD6
3A7A:  MOVLW  FA
3A7C:  MOVWF  xD7
3A7E:  CALL   0FF8
3A82:  DECFSZ xD6,F
3A84:  BRA    3A7A
.................... _code_val = 0; 
3A86:  CLRF   41
.................... _v_set: 
.................... scan_keypad(); 
3A88:  CALL   28B0
.................... if(_key1 != 0){ 
3A8C:  MOVF   xA5,F
3A8E:  BZ    3B14
....................    _num_press(); 
3A90:  CALL   2BA0
....................    if(_num < 11 && _num > 0 && _code_val < 8){ 
3A94:  MOVF   40,W
3A96:  SUBLW  0A
3A98:  BNC   3B14
3A9A:  MOVF   40,F
3A9C:  BZ    3B14
3A9E:  MOVF   41,W
3AA0:  SUBLW  07
3AA2:  BNC   3B14
....................    if(_num == 10)_num = 0; 
3AA4:  MOVF   40,W
3AA6:  SUBLW  0A
3AA8:  BTFSC  FD8.2
3AAA:  CLRF   40
....................    if(_code_val == 0){ 
3AAC:  MOVF   41,F
3AAE:  BNZ   3ABA
....................    _liters = (int32)_num; 
3AB0:  CLRF   53
3AB2:  CLRF   52
3AB4:  CLRF   51
3AB6:  MOVFF  40,50
....................    } 
....................     if(_code_val > 0){ 
3ABA:  MOVF   41,F
3ABC:  BZ    3B02
....................     _liters = _liters * 10; 
3ABE:  MOVFF  53,D9
3AC2:  MOVFF  52,D8
3AC6:  MOVFF  51,D7
3ACA:  MOVFF  50,D6
3ACE:  CLRF   xDD
3AD0:  CLRF   xDC
3AD2:  CLRF   xDB
3AD4:  MOVLW  0A
3AD6:  MOVWF  xDA
3AD8:  CALL   1102
3ADC:  MOVFF  03,53
3AE0:  MOVFF  02,52
3AE4:  MOVFF  01,51
3AE8:  MOVFF  00,50
....................     _liters = _liters +(int32)_num; 
3AEC:  CLRF   01
3AEE:  CLRF   02
3AF0:  CLRF   03
3AF2:  MOVF   40,W
3AF4:  ADDWF  50,F
3AF6:  MOVF   01,W
3AF8:  ADDWFC 51,F
3AFA:  MOVF   02,W
3AFC:  ADDWFC 52,F
3AFE:  MOVF   03,W
3B00:  ADDWFC 53,F
....................     } 
....................     _disp2(); 
3B02:  CALL   18C6
.................... //    _disp3((int16)_code_id * 100); 
.................... //   _d21 = 10; 
.................... //   _d22 = _code_val + 1; 
....................    _disp_data(); 
3B06:  CALL   1048
....................    delay_ms(250); 
3B0A:  MOVLW  FA
3B0C:  MOVWF  xD7
3B0E:  CALL   0FF8
....................     ++_code_val; 
3B12:  INCF   41,F
....................   } 
.................... } 
.................... if(_key1 == _C){ 
3B14:  MOVF   3B,W
3B16:  SUBWF  xA5,W
3B18:  BNZ   3B40
.................... _ws: 
.................... _key1 = 0; 
3B1A:  CLRF   xA5
.................... _liters = 0; 
3B1C:  CLRF   53
3B1E:  CLRF   52
3B20:  CLRF   51
3B22:  CLRF   50
.................... _code_val = 0; 
3B24:  CLRF   41
.................... _code_block = 0; 
3B26:  CLRF   23
.................... _disp2(); 
3B28:  CALL   18C6
.................... //_disp3((int16)_code_id * 100); 
.................... //_d21 = 10; 
.................... //_d22 = _code_val + 1; 
.................... _disp_data(); 
3B2C:  CALL   1048
.................... delay_ms(300); 
3B30:  MOVLW  02
3B32:  MOVWF  xD6
3B34:  MOVLW  96
3B36:  MOVWF  xD7
3B38:  CALL   0FF8
3B3C:  DECFSZ xD6,F
3B3E:  BRA    3B34
.................... } 
....................  
.................... if(_key1 == _s){ 
3B40:  MOVF   3E,W
3B42:  SUBWF  xA5,W
3B44:  BTFSS  FD8.2
3B46:  BRA    3FCE
....................       if(_code_id == 7860){ 
3B48:  MOVF   2B,W
3B4A:  SUBLW  B4
3B4C:  BNZ   3B78
3B4E:  MOVF   2C,W
3B50:  SUBLW  1E
3B52:  BNZ   3B78
....................          if(_liters > 19999) goto _ws; 
3B54:  MOVF   53,F
3B56:  BNZ   3B6C
3B58:  MOVF   52,F
3B5A:  BNZ   3B6C
3B5C:  MOVF   51,W
3B5E:  SUBLW  4D
3B60:  BC    3B70
3B62:  XORLW  FF
3B64:  BNZ   3B6C
3B66:  MOVF   50,W
3B68:  SUBLW  1F
3B6A:  BC    3B70
3B6C:  BRA    3B1A
....................          else _rate = _liters; 
3B6E:  BRA    3B78
3B70:  MOVFF  51,47
3B74:  MOVFF  50,46
....................       } 
....................       if(_code_id == 4850){ 
3B78:  MOVF   2B,W
3B7A:  SUBLW  F2
3B7C:  BNZ   3BD0
3B7E:  MOVF   2C,W
3B80:  SUBLW  12
3B82:  BNZ   3BD0
....................          if(_liters > 99999999){ 
3B84:  MOVF   53,W
3B86:  SUBLW  04
3B88:  BC    3BA2
3B8A:  XORLW  FF
3B8C:  BNZ   3B9E
3B8E:  MOVF   52,W
3B90:  SUBLW  F4
3B92:  BC    3BA2
3B94:  XORLW  FF
3B96:  BNZ   3B9E
3B98:  MOVF   51,W
3B9A:  SUBLW  E0
3B9C:  BC    3BA2
....................          goto _ws; 
3B9E:  BRA    3B1A
....................          }else{ 
3BA0:  BRA    3BD0
.................... //         _to = _totel % 100; 
....................          _totel = _liters * 100; 
3BA2:  MOVFF  53,D9
3BA6:  MOVFF  52,D8
3BAA:  MOVFF  51,D7
3BAE:  MOVFF  50,D6
3BB2:  CLRF   xDD
3BB4:  CLRF   xDC
3BB6:  CLRF   xDB
3BB8:  MOVLW  64
3BBA:  MOVWF  xDA
3BBC:  CALL   1102
3BC0:  MOVFF  03,5F
3BC4:  MOVFF  02,5E
3BC8:  MOVFF  01,5D
3BCC:  MOVFF  00,5C
.................... //         _totel = _totel + _to; 
....................          } 
....................       } 
....................       if(_code_id == 2850){ 
3BD0:  MOVF   2B,W
3BD2:  SUBLW  22
3BD4:  BNZ   3C08
3BD6:  MOVF   2C,W
3BD8:  SUBLW  0B
3BDA:  BNZ   3C08
....................          if(_liters > 30 || _liters < 5 ) goto _ws; 
3BDC:  MOVF   53,F
3BDE:  BNZ   3C00
3BE0:  MOVF   52,F
3BE2:  BNZ   3C00
3BE4:  MOVF   51,F
3BE6:  BNZ   3C00
3BE8:  MOVF   50,W
3BEA:  SUBLW  1E
3BEC:  BNC   3C00
3BEE:  MOVF   53,F
3BF0:  BNZ   3C04
3BF2:  MOVF   52,F
3BF4:  BNZ   3C04
3BF6:  MOVF   51,F
3BF8:  BNZ   3C04
3BFA:  MOVF   50,W
3BFC:  SUBLW  04
3BFE:  BNC   3C04
3C00:  BRA    3B1A
....................          else _sov_cut = _liters; 
3C02:  BRA    3C08
3C04:  MOVFF  50,42
....................       } 
....................       if(_code_id == 6550){ 
3C08:  MOVF   2B,W
3C0A:  SUBLW  96
3C0C:  BNZ   3C4A
3C0E:  MOVF   2C,W
3C10:  SUBLW  19
3C12:  BNZ   3C4A
....................          if(_liters > 2000 || _liters < 40) goto _ws; 
3C14:  MOVF   53,F
3C16:  BNZ   3C3E
3C18:  MOVF   52,F
3C1A:  BNZ   3C3E
3C1C:  MOVF   51,W
3C1E:  SUBLW  06
3C20:  BC    3C2C
3C22:  XORLW  FF
3C24:  BNZ   3C3E
3C26:  MOVF   50,W
3C28:  SUBLW  D0
3C2A:  BNC   3C3E
3C2C:  MOVF   53,F
3C2E:  BNZ   3C42
3C30:  MOVF   52,F
3C32:  BNZ   3C42
3C34:  MOVF   51,F
3C36:  BNZ   3C42
3C38:  MOVF   50,W
3C3A:  SUBLW  27
3C3C:  BNC   3C42
3C3E:  BRA    3B1A
....................          else _pulses = _liters; 
3C40:  BRA    3C4A
3C42:  MOVFF  51,28
3C46:  MOVFF  50,27
....................       } 
....................       if(_code_id == 7850){ 
3C4A:  MOVF   2B,W
3C4C:  SUBLW  AA
3C4E:  BNZ   3C70
3C50:  MOVF   2C,W
3C52:  SUBLW  1E
3C54:  BNZ   3C70
....................          if(_liters > 10) goto _ws; 
3C56:  MOVF   53,F
3C58:  BNZ   3C68
3C5A:  MOVF   52,F
3C5C:  BNZ   3C68
3C5E:  MOVF   51,F
3C60:  BNZ   3C68
3C62:  MOVF   50,W
3C64:  SUBLW  0A
3C66:  BC    3C6C
3C68:  BRA    3B1A
....................          else _first_val = _liters; 
3C6A:  BRA    3C70
3C6C:  MOVFF  50,44
....................       } 
....................       if(_code_id == 8550){ 
3C70:  MOVF   2B,W
3C72:  SUBLW  66
3C74:  BNZ   3C96
3C76:  MOVF   2C,W
3C78:  SUBLW  21
3C7A:  BNZ   3C96
....................          if(_liters > 10) goto _ws; 
3C7C:  MOVF   53,F
3C7E:  BNZ   3C8E
3C80:  MOVF   52,F
3C82:  BNZ   3C8E
3C84:  MOVF   51,F
3C86:  BNZ   3C8E
3C88:  MOVF   50,W
3C8A:  SUBLW  0A
3C8C:  BC    3C92
3C8E:  BRA    3B1A
....................          else _v_first_val = _liters; 
3C90:  BRA    3C96
3C92:  MOVFF  50,2F
....................       } 
....................       if(_code_id == 1750){ 
3C96:  MOVF   2B,W
3C98:  SUBLW  D6
3C9A:  BNZ   3CC6
3C9C:  MOVF   2C,W
3C9E:  SUBLW  06
3CA0:  BNZ   3CC6
....................          if(_liters > 19999) goto _ws; 
3CA2:  MOVF   53,F
3CA4:  BNZ   3CBA
3CA6:  MOVF   52,F
3CA8:  BNZ   3CBA
3CAA:  MOVF   51,W
3CAC:  SUBLW  4D
3CAE:  BC    3CBE
3CB0:  XORLW  FF
3CB2:  BNZ   3CBA
3CB4:  MOVF   50,W
3CB6:  SUBLW  1F
3CB8:  BC    3CBE
3CBA:  BRA    3B1A
....................          else _ok_rate = _liters; 
3CBC:  BRA    3CC6
3CBE:  MOVFF  51,2E
3CC2:  MOVFF  50,2D
....................       } 
....................       if(_code_id == 1850){ 
3CC6:  MOVF   2B,W
3CC8:  SUBLW  3A
3CCA:  BNZ   3CEC
3CCC:  MOVF   2C,W
3CCE:  SUBLW  07
3CD0:  BNZ   3CEC
....................          if(_liters > 10) goto _ws; 
3CD2:  MOVF   53,F
3CD4:  BNZ   3CE4
3CD6:  MOVF   52,F
3CD8:  BNZ   3CE4
3CDA:  MOVF   51,F
3CDC:  BNZ   3CE4
3CDE:  MOVF   50,W
3CE0:  SUBLW  0A
3CE2:  BC    3CE8
3CE4:  BRA    3B1A
....................          else _rate_fact = _liters; 
3CE6:  BRA    3CEC
3CE8:  MOVFF  50,30
....................       } 
....................       if(_code_id == 1350){ 
3CEC:  MOVF   2B,W
3CEE:  SUBLW  46
3CF0:  BNZ   3D16
3CF2:  MOVF   2C,W
3CF4:  SUBLW  05
3CF6:  BNZ   3D16
....................          if(_liters > 20) goto _ws; 
3CF8:  MOVF   53,F
3CFA:  BNZ   3D0A
3CFC:  MOVF   52,F
3CFE:  BNZ   3D0A
3D00:  MOVF   51,F
3D02:  BNZ   3D0A
3D04:  MOVF   50,W
3D06:  SUBLW  14
3D08:  BC    3D0E
3D0A:  BRA    3B1A
....................          else _skip_rupee = _liters; 
3D0C:  BRA    3D16
3D0E:  MOVFF  51,49
3D12:  MOVFF  50,48
....................       } 
....................       if(_code_id == 2050){ 
3D16:  MOVF   2B,W
3D18:  SUBLW  02
3D1A:  BNZ   3D3C
3D1C:  MOVF   2C,W
3D1E:  SUBLW  08
3D20:  BNZ   3D3C
....................          if(_liters > 99) goto _ws; 
3D22:  MOVF   53,F
3D24:  BNZ   3D34
3D26:  MOVF   52,F
3D28:  BNZ   3D34
3D2A:  MOVF   51,F
3D2C:  BNZ   3D34
3D2E:  MOVF   50,W
3D30:  SUBLW  63
3D32:  BC    3D38
3D34:  BRA    3B1A
....................          else _ok_liters = _liters; 
3D36:  BRA    3D3C
3D38:  MOVFF  50,32
....................       } 
....................       if(_code_id == 2150){ 
3D3C:  MOVF   2B,W
3D3E:  SUBLW  66
3D40:  BNZ   3D62
3D42:  MOVF   2C,W
3D44:  SUBLW  08
3D46:  BNZ   3D62
....................          if(_liters > 20) goto _ws; 
3D48:  MOVF   53,F
3D4A:  BNZ   3D5A
3D4C:  MOVF   52,F
3D4E:  BNZ   3D5A
3D50:  MOVF   51,F
3D52:  BNZ   3D5A
3D54:  MOVF   50,W
3D56:  SUBLW  14
3D58:  BC    3D5E
3D5A:  BRA    3B1A
....................          else _skip_liters = _liters; 
3D5C:  BRA    3D62
3D5E:  MOVFF  50,31
....................       } 
....................       if(_code_id == 9850){ 
3D62:  MOVF   2B,W
3D64:  SUBLW  7A
3D66:  BNZ   3DA0
3D68:  MOVF   2C,W
3D6A:  SUBLW  26
3D6C:  BNZ   3DA0
....................          if(_liters > 9999999) goto _ws; 
3D6E:  MOVF   53,F
3D70:  BNZ   3D8C
3D72:  MOVF   52,W
3D74:  SUBLW  97
3D76:  BC    3D90
3D78:  XORLW  FF
3D7A:  BNZ   3D8C
3D7C:  MOVF   51,W
3D7E:  SUBLW  95
3D80:  BC    3D90
3D82:  XORLW  FF
3D84:  BNZ   3D8C
3D86:  MOVF   50,W
3D88:  SUBLW  7F
3D8A:  BC    3D90
3D8C:  BRA    3B1A
....................          else _hang = _liters; 
3D8E:  BRA    3DA0
3D90:  MOVFF  53,7F
3D94:  MOVFF  52,7E
3D98:  MOVFF  51,7D
3D9C:  MOVFF  50,7C
....................       } 
....................       if(_code_id == 6050){ 
3DA0:  MOVF   2B,W
3DA2:  SUBLW  A2
3DA4:  BNZ   3DC2
3DA6:  MOVF   2C,W
3DA8:  SUBLW  17
3DAA:  BNZ   3DC2
....................          if(_liters != 1)_disk_fl = 0; 
3DAC:  DECFSZ 50,W
3DAE:  BRA    3DBC
3DB0:  MOVF   51,F
3DB2:  BNZ   3DBC
3DB4:  MOVF   52,F
3DB6:  BNZ   3DBC
3DB8:  MOVF   53,F
3DBA:  BZ    3DC0
3DBC:  BCF    26.4
....................          else _disk_fl = 1; 
3DBE:  BRA    3DC2
3DC0:  BSF    26.4
....................       } 
....................       if(_code_id == 7050){ 
3DC2:  MOVF   2B,W
3DC4:  SUBLW  8A
3DC6:  BNZ   3DE4
3DC8:  MOVF   2C,W
3DCA:  SUBLW  1B
3DCC:  BNZ   3DE4
....................          if(_liters != 1)_motor_fl = 0; 
3DCE:  DECFSZ 50,W
3DD0:  BRA    3DDE
3DD2:  MOVF   51,F
3DD4:  BNZ   3DDE
3DD6:  MOVF   52,F
3DD8:  BNZ   3DDE
3DDA:  MOVF   53,F
3DDC:  BZ    3DE2
3DDE:  BCF    xA7.6
....................          else _motor_fl = 1; 
3DE0:  BRA    3DE4
3DE2:  BSF    xA7.6
....................       } 
....................  
.................... //      if(_code_id == 1204){ 
.................... //         if(_liters > 2) goto _ws; 
.................... //         else _noz_pad = _liters; 
.................... //      } 
....................       if(_code_id == _m_code){ 
3DE4:  MOVF   4A,W
3DE6:  SUBWF  2B,W
3DE8:  BNZ   3E14
3DEA:  MOVF   4B,W
3DEC:  SUBWF  2C,W
3DEE:  BNZ   3E14
....................          if(_liters > 9999) goto _ws; 
3DF0:  MOVF   53,F
3DF2:  BNZ   3E08
3DF4:  MOVF   52,F
3DF6:  BNZ   3E08
3DF8:  MOVF   51,W
3DFA:  SUBLW  26
3DFC:  BC    3E0C
3DFE:  XORLW  FF
3E00:  BNZ   3E08
3E02:  MOVF   50,W
3E04:  SUBLW  0F
3E06:  BC    3E0C
3E08:  BRA    3B1A
....................          else _m_code = _liters; 
3E0A:  BRA    3E14
3E0C:  MOVFF  51,4B
3E10:  MOVFF  50,4A
....................       } 
.................... //     if(_code_id == 2450){ 
.................... //         if(_liters > 1) goto _ws; 
.................... //         else _skip_var = _liters; 
.................... //     } 
....................       if(_code_id == 2550){ 
3E14:  MOVF   2B,W
3E16:  SUBLW  F6
3E18:  BNZ   3EAA
3E1A:  MOVF   2C,W
3E1C:  SUBLW  09
3E1E:  BNZ   3EAA
3E20:  CLRF   18
3E22:  BTFSC  FF2.7
3E24:  BSF    18.7
3E26:  BCF    FF2.7
.................... //      _get_time(); 
....................       hrs = _liters / 100; 
3E28:  MOVFF  53,FA
3E2C:  MOVFF  52,F9
3E30:  MOVFF  51,F8
3E34:  MOVFF  50,F7
3E38:  CLRF   xFE
3E3A:  CLRF   xFD
3E3C:  CLRF   xFC
3E3E:  MOVLW  64
3E40:  MOVWF  xFB
3E42:  CALL   0376
3E46:  BTFSC  18.7
3E48:  BSF    FF2.7
3E4A:  MOVFF  00,1D
3E4E:  CLRF   18
3E50:  BTFSC  FF2.7
3E52:  BSF    18.7
3E54:  BCF    FF2.7
....................       min = _liters % 100; 
3E56:  MOVFF  53,FA
3E5A:  MOVFF  52,F9
3E5E:  MOVFF  51,F8
3E62:  MOVFF  50,F7
3E66:  CLRF   xFE
3E68:  CLRF   xFD
3E6A:  CLRF   xFC
3E6C:  MOVLW  64
3E6E:  MOVWF  xFB
3E70:  CALL   0376
3E74:  BTFSC  18.7
3E76:  BSF    FF2.7
3E78:  MOVFF  FEF,1E
....................       if(hrs > 23 || min >  59 )goto _ws; 
3E7C:  MOVF   1D,W
3E7E:  SUBLW  17
3E80:  BNC   3E88
3E82:  MOVF   1E,W
3E84:  SUBLW  3B
3E86:  BC    3E8A
3E88:  BRA    3B1A
.................... //      rtc_set_datetime(_day,_mth,_year,_dow,_hr,_min); 
.................... ds1307_set_date_time(day, month, yr,  dow,  hrs,  min,  sec); 
3E8A:  MOVFF  1A,D6
3E8E:  MOVFF  1B,D7
3E92:  MOVFF  1C,D8
3E96:  MOVFF  20,D9
3E9A:  MOVFF  1D,DA
3E9E:  MOVFF  1E,DB
3EA2:  MOVFF  1F,DC
3EA6:  CALL   08E0
....................  
....................       } 
....................       if(_code_id == 2650){ 
3EAA:  MOVF   2B,W
3EAC:  SUBLW  5A
3EAE:  BTFSS  FD8.2
3EB0:  BRA    3FB6
3EB2:  MOVF   2C,W
3EB4:  SUBLW  0A
3EB6:  BTFSS  FD8.2
3EB8:  BRA    3FB6
3EBA:  CLRF   18
3EBC:  BTFSC  FF2.7
3EBE:  BSF    18.7
3EC0:  BCF    FF2.7
.................... //      _get_time(); 
....................       day = _liters / 10000; 
3EC2:  MOVFF  53,FA
3EC6:  MOVFF  52,F9
3ECA:  MOVFF  51,F8
3ECE:  MOVFF  50,F7
3ED2:  CLRF   xFE
3ED4:  CLRF   xFD
3ED6:  MOVLW  27
3ED8:  MOVWF  xFC
3EDA:  MOVLW  10
3EDC:  MOVWF  xFB
3EDE:  CALL   0376
3EE2:  BTFSC  18.7
3EE4:  BSF    FF2.7
3EE6:  MOVFF  00,1A
3EEA:  CLRF   18
3EEC:  BTFSC  FF2.7
3EEE:  BSF    18.7
3EF0:  BCF    FF2.7
....................       yr = _liters % 100; 
3EF2:  MOVFF  53,FA
3EF6:  MOVFF  52,F9
3EFA:  MOVFF  51,F8
3EFE:  MOVFF  50,F7
3F02:  CLRF   xFE
3F04:  CLRF   xFD
3F06:  CLRF   xFC
3F08:  MOVLW  64
3F0A:  MOVWF  xFB
3F0C:  CALL   0376
3F10:  BTFSC  18.7
3F12:  BSF    FF2.7
3F14:  MOVFF  FEF,1C
3F18:  CLRF   18
3F1A:  BTFSC  FF2.7
3F1C:  BSF    18.7
3F1E:  BCF    FF2.7
....................       _liters = _liters % 10000; 
3F20:  MOVFF  53,FA
3F24:  MOVFF  52,F9
3F28:  MOVFF  51,F8
3F2C:  MOVFF  50,F7
3F30:  CLRF   xFE
3F32:  CLRF   xFD
3F34:  MOVLW  27
3F36:  MOVWF  xFC
3F38:  MOVLW  10
3F3A:  MOVWF  xFB
3F3C:  CALL   0376
3F40:  BTFSC  18.7
3F42:  BSF    FF2.7
3F44:  MOVFF  FEF,50
3F48:  MOVFF  FEC,51
3F4C:  MOVFF  FEC,52
3F50:  MOVFF  FEC,53
3F54:  CLRF   18
3F56:  BTFSC  FF2.7
3F58:  BSF    18.7
3F5A:  BCF    FF2.7
....................       month = _liters / 100; 
3F5C:  MOVFF  53,FA
3F60:  MOVFF  52,F9
3F64:  MOVFF  51,F8
3F68:  MOVFF  50,F7
3F6C:  CLRF   xFE
3F6E:  CLRF   xFD
3F70:  CLRF   xFC
3F72:  MOVLW  64
3F74:  MOVWF  xFB
3F76:  CALL   0376
3F7A:  BTFSC  18.7
3F7C:  BSF    FF2.7
3F7E:  MOVFF  00,1B
....................       if(day > 31 || month >  12 || yr > 99)goto _ws; 
3F82:  MOVF   1A,W
3F84:  SUBLW  1F
3F86:  BNC   3F94
3F88:  MOVF   1B,W
3F8A:  SUBLW  0C
3F8C:  BNC   3F94
3F8E:  MOVF   1C,W
3F90:  SUBLW  63
3F92:  BC    3F96
3F94:  BRA    3B1A
.................... //      rtc_set_datetime(_day,_mth,_year,_dow,_hr,_min); 
.................... ds1307_set_date_time(day, month, yr,  dow,  hrs,  min,  sec); 
3F96:  MOVFF  1A,D6
3F9A:  MOVFF  1B,D7
3F9E:  MOVFF  1C,D8
3FA2:  MOVFF  20,D9
3FA6:  MOVFF  1D,DA
3FAA:  MOVFF  1E,DB
3FAE:  MOVFF  1F,DC
3FB2:  CALL   08E0
....................       } 
....................  _buz_on; 
3FB6:  BCF    F8A.3
.................... delay_ms(700); 
3FB8:  MOVLW  04
3FBA:  MOVWF  xD6
3FBC:  MOVLW  AF
3FBE:  MOVWF  xD7
3FC0:  CALL   0FF8
3FC4:  DECFSZ xD6,F
3FC6:  BRA    3FBC
.................... _key1 = 0; 
3FC8:  CLRF   xA5
....................  _buz_off; 
3FCA:  BSF    F8A.3
.................... return; 
3FCC:  BRA    3FD0
.................... } 
.................... goto _v_set; 
3FCE:  BRA    3A88
.................... } 
3FD0:  GOTO   40AC (RETURN)
....................  
.................... //****************************************************************************** 
.................... void _code_id_value(void){ 
.................... _sub_id  = 0; 
*
3730:  CLRF   22
.................... _var1 =_clear; 
3732:  MOVLW  0F
3734:  MOVWF  xA4
.................... _all_disp(); 
3736:  CALL   0578
.................... _liters = 111; 
373A:  CLRF   53
373C:  CLRF   52
373E:  CLRF   51
3740:  MOVLW  6F
3742:  MOVWF  50
.................... ///////////////////////////////BLOCK 1 start 
.................... //if(_code_block == 1){ 
....................    if(_code_id == 7860)_liters = (int32)_rate; 
3744:  MOVF   2B,W
3746:  SUBLW  B4
3748:  BNZ   375C
374A:  MOVF   2C,W
374C:  SUBLW  1E
374E:  BNZ   375C
3750:  CLRF   53
3752:  CLRF   52
3754:  MOVFF  47,51
3758:  MOVFF  46,50
....................    if(_code_id == 4850)_liters = _totel / 100; 
375C:  MOVF   2B,W
375E:  SUBLW  F2
3760:  BNZ   37A2
3762:  MOVF   2C,W
3764:  SUBLW  12
3766:  BNZ   37A2
3768:  CLRF   18
376A:  BTFSC  FF2.7
376C:  BSF    18.7
376E:  BCF    FF2.7
3770:  MOVFF  5F,FA
3774:  MOVFF  5E,F9
3778:  MOVFF  5D,F8
377C:  MOVFF  5C,F7
3780:  CLRF   xFE
3782:  CLRF   xFD
3784:  CLRF   xFC
3786:  MOVLW  64
3788:  MOVWF  xFB
378A:  CALL   0376
378E:  BTFSC  18.7
3790:  BSF    FF2.7
3792:  MOVFF  03,53
3796:  MOVFF  02,52
379A:  MOVFF  01,51
379E:  MOVFF  00,50
....................    if(_code_id == 2850)_liters = (int32)_sov_cut; 
37A2:  MOVF   2B,W
37A4:  SUBLW  22
37A6:  BNZ   37B8
37A8:  MOVF   2C,W
37AA:  SUBLW  0B
37AC:  BNZ   37B8
37AE:  CLRF   53
37B0:  CLRF   52
37B2:  CLRF   51
37B4:  MOVFF  42,50
....................    if(_code_id == 6550)_liters = (int32)_pulses; 
37B8:  MOVF   2B,W
37BA:  SUBLW  96
37BC:  BNZ   37D0
37BE:  MOVF   2C,W
37C0:  SUBLW  19
37C2:  BNZ   37D0
37C4:  CLRF   53
37C6:  CLRF   52
37C8:  MOVFF  28,51
37CC:  MOVFF  27,50
....................    if(_code_id == 7850)_liters = (int32)_first_val; 
37D0:  MOVF   2B,W
37D2:  SUBLW  AA
37D4:  BNZ   37E6
37D6:  MOVF   2C,W
37D8:  SUBLW  1E
37DA:  BNZ   37E6
37DC:  CLRF   53
37DE:  CLRF   52
37E0:  CLRF   51
37E2:  MOVFF  44,50
....................    if(_code_id == 8550)_liters = (int32)_v_first_val; 
37E6:  MOVF   2B,W
37E8:  SUBLW  66
37EA:  BNZ   37FC
37EC:  MOVF   2C,W
37EE:  SUBLW  21
37F0:  BNZ   37FC
37F2:  CLRF   53
37F4:  CLRF   52
37F6:  CLRF   51
37F8:  MOVFF  2F,50
....................    if(_code_id == 1750)_liters = (int32)_ok_rate;// rupee_val 
37FC:  MOVF   2B,W
37FE:  SUBLW  D6
3800:  BNZ   3814
3802:  MOVF   2C,W
3804:  SUBLW  06
3806:  BNZ   3814
3808:  CLRF   53
380A:  CLRF   52
380C:  MOVFF  2E,51
3810:  MOVFF  2D,50
....................    if(_code_id == 1850)_liters = (int32)_rate_fact;// + - val 
3814:  MOVF   2B,W
3816:  SUBLW  3A
3818:  BNZ   382A
381A:  MOVF   2C,W
381C:  SUBLW  07
381E:  BNZ   382A
3820:  CLRF   53
3822:  CLRF   52
3824:  CLRF   51
3826:  MOVFF  30,50
....................    if(_code_id == 1350)_liters = (int32)_skip_rupee;// rupee lines 
382A:  MOVF   2B,W
382C:  SUBLW  46
382E:  BNZ   3842
3830:  MOVF   2C,W
3832:  SUBLW  05
3834:  BNZ   3842
3836:  CLRF   53
3838:  CLRF   52
383A:  MOVFF  49,51
383E:  MOVFF  48,50
....................    if(_code_id == 2050)_liters = (int32)_ok_liters;// petrol val 
3842:  MOVF   2B,W
3844:  SUBLW  02
3846:  BNZ   3858
3848:  MOVF   2C,W
384A:  SUBLW  08
384C:  BNZ   3858
384E:  CLRF   53
3850:  CLRF   52
3852:  CLRF   51
3854:  MOVFF  32,50
....................    if(_code_id == 2150)_liters = (int32)_skip_liters;// lines 
3858:  MOVF   2B,W
385A:  SUBLW  66
385C:  BNZ   386E
385E:  MOVF   2C,W
3860:  SUBLW  08
3862:  BNZ   386E
3864:  CLRF   53
3866:  CLRF   52
3868:  CLRF   51
386A:  MOVFF  31,50
....................    if(_code_id == 9850)_liters = (int32)_hang;// hang 
386E:  MOVF   2B,W
3870:  SUBLW  7A
3872:  BNZ   388A
3874:  MOVF   2C,W
3876:  SUBLW  26
3878:  BNZ   388A
387A:  MOVFF  7F,53
387E:  MOVFF  7E,52
3882:  MOVFF  7D,51
3886:  MOVFF  7C,50
....................    if(_code_id == 6050){ 
388A:  MOVF   2B,W
388C:  SUBLW  A2
388E:  BNZ   38AE
3890:  MOVF   2C,W
3892:  SUBLW  17
3894:  BNZ   38AE
....................       if(_disk_fl)_liters = 1; 
3896:  BTFSS  26.4
3898:  BRA    38A6
389A:  CLRF   53
389C:  CLRF   52
389E:  CLRF   51
38A0:  MOVLW  01
38A2:  MOVWF  50
....................       else _liters = 0; 
38A4:  BRA    38AE
38A6:  CLRF   53
38A8:  CLRF   52
38AA:  CLRF   51
38AC:  CLRF   50
....................    } 
....................    if(_code_id == 7050){ 
38AE:  MOVF   2B,W
38B0:  SUBLW  8A
38B2:  BNZ   38D2
38B4:  MOVF   2C,W
38B6:  SUBLW  1B
38B8:  BNZ   38D2
....................       if(_motor_fl)_liters = 1; 
38BA:  BTFSS  xA7.6
38BC:  BRA    38CA
38BE:  CLRF   53
38C0:  CLRF   52
38C2:  CLRF   51
38C4:  MOVLW  01
38C6:  MOVWF  50
....................       else _liters = 0; 
38C8:  BRA    38D2
38CA:  CLRF   53
38CC:  CLRF   52
38CE:  CLRF   51
38D0:  CLRF   50
....................    } 
....................  
.................... //   if(_code_id == 1204)_liters = (int32)_noz_pad;//start stop 
....................    if(_code_id == _m_code)_liters = (int32)_m_code;// main code 
38D2:  MOVF   4A,W
38D4:  SUBWF  2B,W
38D6:  BNZ   38EA
38D8:  MOVF   4B,W
38DA:  SUBWF  2C,W
38DC:  BNZ   38EA
38DE:  CLRF   53
38E0:  CLRF   52
38E2:  MOVFF  4B,51
38E6:  MOVFF  4A,50
.................... //   if(_code_id == 2450)_liters = (int32)_skip_var;//start stop 
....................    if(_code_id == 2550){// time 
38EA:  MOVF   2B,W
38EC:  SUBLW  F6
38EE:  BNZ   3978
38F0:  MOVF   2C,W
38F2:  SUBLW  09
38F4:  BNZ   3978
.................... //   _get_time(); 
....................    _td = (int32)hrs * 100; 
38F6:  CLRF   xD5
38F8:  CLRF   xD4
38FA:  CLRF   xD3
38FC:  MOVFF  1D,D2
3900:  MOVFF  D5,D9
3904:  MOVFF  D4,D8
3908:  MOVFF  D3,D7
390C:  MOVFF  1D,D6
3910:  CLRF   xDD
3912:  CLRF   xDC
3914:  CLRF   xDB
3916:  MOVLW  64
3918:  MOVWF  xDA
391A:  CALL   1102
391E:  MOVFF  03,7B
3922:  MOVFF  02,7A
3926:  MOVFF  01,79
392A:  MOVFF  00,78
....................    _td = _td + (int32)min; 
392E:  CLRF   01
3930:  CLRF   02
3932:  CLRF   03
3934:  MOVF   1E,W
3936:  ADDWF  78,F
3938:  MOVF   01,W
393A:  ADDWFC 79,F
393C:  MOVF   02,W
393E:  ADDWFC 7A,F
3940:  MOVF   03,W
3942:  ADDWFC 7B,F
....................       if(_td > 2359)_td = 1200; 
3944:  MOVF   7B,F
3946:  BNZ   395C
3948:  MOVF   7A,F
394A:  BNZ   395C
394C:  MOVF   79,W
394E:  SUBLW  08
3950:  BC    3968
3952:  XORLW  FF
3954:  BNZ   395C
3956:  MOVF   78,W
3958:  SUBLW  37
395A:  BC    3968
395C:  CLRF   7B
395E:  CLRF   7A
3960:  MOVLW  04
3962:  MOVWF  79
3964:  MOVLW  B0
3966:  MOVWF  78
....................    _liters = _td; 
3968:  MOVFF  7B,53
396C:  MOVFF  7A,52
3970:  MOVFF  79,51
3974:  MOVFF  78,50
....................    } 
....................  
....................    if(_code_id == 2650){// date 
3978:  MOVF   2B,W
397A:  SUBLW  5A
397C:  BNZ   3A48
397E:  MOVF   2C,W
3980:  SUBLW  0A
3982:  BNZ   3A48
.................... //   _get_time(); 
....................    _td = (int32)day * 10000; 
3984:  CLRF   xD5
3986:  CLRF   xD4
3988:  CLRF   xD3
398A:  MOVFF  1A,D2
398E:  MOVFF  D5,D9
3992:  MOVFF  D4,D8
3996:  MOVFF  D3,D7
399A:  MOVFF  1A,D6
399E:  CLRF   xDD
39A0:  CLRF   xDC
39A2:  MOVLW  27
39A4:  MOVWF  xDB
39A6:  MOVLW  10
39A8:  MOVWF  xDA
39AA:  CALL   1102
39AE:  MOVFF  03,7B
39B2:  MOVFF  02,7A
39B6:  MOVFF  01,79
39BA:  MOVFF  00,78
....................    _td = _td + (int32)month * 100; 
39BE:  CLRF   xD5
39C0:  CLRF   xD4
39C2:  CLRF   xD3
39C4:  MOVFF  1B,D2
39C8:  MOVFF  D5,D9
39CC:  MOVFF  D4,D8
39D0:  MOVFF  D3,D7
39D4:  MOVFF  1B,D6
39D8:  CLRF   xDD
39DA:  CLRF   xDC
39DC:  CLRF   xDB
39DE:  MOVLW  64
39E0:  MOVWF  xDA
39E2:  CALL   1102
39E6:  MOVF   00,W
39E8:  ADDWF  78,F
39EA:  MOVF   01,W
39EC:  ADDWFC 79,F
39EE:  MOVF   02,W
39F0:  ADDWFC 7A,F
39F2:  MOVF   03,W
39F4:  ADDWFC 7B,F
....................    _td = _td + (int32)yr; 
39F6:  CLRF   01
39F8:  CLRF   02
39FA:  CLRF   03
39FC:  MOVF   1C,W
39FE:  ADDWF  78,F
3A00:  MOVF   01,W
3A02:  ADDWFC 79,F
3A04:  MOVF   02,W
3A06:  ADDWFC 7A,F
3A08:  MOVF   03,W
3A0A:  ADDWFC 7B,F
....................       if(_td > 311299)_td = 70816; 
3A0C:  MOVF   7B,F
3A0E:  BNZ   3A2A
3A10:  MOVF   7A,W
3A12:  SUBLW  03
3A14:  BC    3A38
3A16:  XORLW  FF
3A18:  BNZ   3A2A
3A1A:  MOVF   79,W
3A1C:  SUBLW  BF
3A1E:  BC    3A38
3A20:  XORLW  FF
3A22:  BNZ   3A2A
3A24:  MOVF   78,W
3A26:  SUBLW  03
3A28:  BC    3A38
3A2A:  CLRF   7B
3A2C:  MOVLW  01
3A2E:  MOVWF  7A
3A30:  MOVLW  14
3A32:  MOVWF  79
3A34:  MOVLW  A0
3A36:  MOVWF  78
....................    _liters = _td; 
3A38:  MOVFF  7B,53
3A3C:  MOVFF  7A,52
3A40:  MOVFF  79,51
3A44:  MOVFF  78,50
....................    } 
.................... //} 
....................  
.................... if(_liters != 111)_disp2(); 
3A48:  MOVF   50,W
3A4A:  SUBLW  6F
3A4C:  BNZ   3A5A
3A4E:  MOVF   51,F
3A50:  BNZ   3A5A
3A52:  MOVF   52,F
3A54:  BNZ   3A5A
3A56:  MOVF   53,F
3A58:  BZ    3A5E
3A5A:  CALL   18C6
.................... //_passd: 
.................... // _disp3((int16)_code_id); 
....................  _disp_data(); 
3A5E:  CALL   1048
....................  delay_ms(300); 
3A62:  MOVLW  02
3A64:  MOVWF  xD2
3A66:  MOVLW  96
3A68:  MOVWF  xD7
3A6A:  CALL   0FF8
3A6E:  DECFSZ xD2,F
3A70:  BRA    3A66
.................... } 
3A72:  GOTO   4078 (RETURN)
.................... //**************************************************** 
.................... void _code_id_enter(void){ 
.................... _pk: 
.................... _code_val = 0; 
*
3FD4:  CLRF   41
.................... _var1 =_clear; 
3FD6:  MOVLW  0F
3FD8:  MOVWF  xA4
.................... _all_disp(); 
3FDA:  CALL   0578
.................... _d9  = 13; 
3FDE:  MOVLW  0D
3FE0:  MOVWF  x95
.................... _d10 = 0; 
3FE2:  CLRF   x9C
.................... _disp_data(); 
3FE4:  CALL   1048
.................... _cid: 
.................... scan_keypad(); 
3FE8:  CALL   28B0
.................... if(_key1 != 0){ 
3FEC:  MOVF   xA5,F
3FEE:  BTFSC  FD8.2
3FF0:  BRA    40D4
.................... _num_press(); 
3FF2:  CALL   2BA0
....................    if(_num < 11 && _num != 0 && _code_val < 4){ 
3FF6:  MOVF   40,W
3FF8:  SUBLW  0A
3FFA:  BNC   408C
3FFC:  MOVF   40,F
3FFE:  BZ    408C
4000:  MOVF   41,W
4002:  SUBLW  03
4004:  BNC   408C
....................    if(_num == 10)_num = 0; 
4006:  MOVF   40,W
4008:  SUBLW  0A
400A:  BTFSC  FD8.2
400C:  CLRF   40
....................    if(_code_val == 0){ 
400E:  MOVF   41,F
4010:  BNZ   401A
....................     _code_id = (int16)_num; 
4012:  CLRF   2C
4014:  MOVFF  40,2B
....................     _d16 = 0; 
4018:  CLRF   x90
....................    } 
....................     if(_code_val > 0){ 
401A:  MOVF   41,F
401C:  BZ    4042
....................      _code_id =  _code_id * 10; 
401E:  MOVFF  2C,DD
4022:  MOVFF  2B,DC
4026:  CLRF   xDF
4028:  MOVLW  0A
402A:  MOVWF  xDE
402C:  CALL   1A02
4030:  MOVFF  02,2C
4034:  MOVFF  01,2B
....................      _code_id =  _code_id +(int16)_num; 
4038:  CLRF   03
403A:  MOVF   40,W
403C:  ADDWF  2B,F
403E:  MOVF   03,W
4040:  ADDWFC 2C,F
....................     } 
....................     if(_code_val == 1)_d15 = 0; 
4042:  DECFSZ 41,W
4044:  BRA    4048
4046:  CLRF   x91
....................     if(_code_val == 2)_d14 = 0; 
4048:  MOVF   41,W
404A:  SUBLW  02
404C:  BTFSC  FD8.2
404E:  CLRF   x8F
....................     if(_code_val == 3)_d13 = 0; 
4050:  MOVF   41,W
4052:  SUBLW  03
4054:  BTFSC  FD8.2
4056:  CLRF   x8E
....................     _disp_data(); 
4058:  CALL   1048
....................     ++_code_val; 
405C:  INCF   41,F
....................     delay_ms(500); 
405E:  MOVLW  02
4060:  MOVWF  xD2
4062:  MOVLW  FA
4064:  MOVWF  xD7
4066:  CALL   0FF8
406A:  DECFSZ xD2,F
406C:  BRA    4062
....................       if(_code_val == 4){ 
406E:  MOVF   41,W
4070:  SUBLW  04
4072:  BNZ   408C
....................       _code_id_value(); 
4074:  GOTO   3730
....................          if(_liters == 111)goto _exit_id; 
4078:  MOVF   50,W
407A:  SUBLW  6F
407C:  BNZ   408C
407E:  MOVF   51,F
4080:  BNZ   408C
4082:  MOVF   52,F
4084:  BNZ   408C
4086:  MOVF   53,F
4088:  BNZ   408C
408A:  BRA    40C8
....................       } 
....................    } 
....................  
....................    if(_key1 == _C){ 
408C:  MOVF   3B,W
408E:  SUBWF  xA5,W
4090:  BNZ   40C2
....................       if(_code_val < 4)goto _pk; 
4092:  MOVF   41,W
4094:  SUBLW  03
4096:  BNC   409A
4098:  BRA    3FD4
....................    _liters = 0; 
409A:  CLRF   53
409C:  CLRF   52
409E:  CLRF   51
40A0:  CLRF   50
....................    _disp2(); 
40A2:  CALL   18C6
....................    _disp_data(); 
40A6:  CALL   1048
....................    _edit_value(); 
40AA:  BRA    3A76
....................    _w_eerom(); 
40AC:  CALL   1C3A
.................... //   _key1 = _c; 
....................     delay_ms(300); 
40B0:  MOVLW  02
40B2:  MOVWF  xD2
40B4:  MOVLW  96
40B6:  MOVWF  xD7
40B8:  CALL   0FF8
40BC:  DECFSZ xD2,F
40BE:  BRA    40B4
....................     goto _pk; 
40C0:  BRA    3FD4
....................    } 
....................  
....................    if(_key1 == _s){ 
40C2:  MOVF   3E,W
40C4:  SUBWF  xA5,W
40C6:  BNZ   40D4
....................    _exit_id: 
....................    _rst(); 
40C8:  CALL   200C
....................    _key1 = 0; 
40CC:  CLRF   xA5
....................    _code_val = 0; 
40CE:  CLRF   41
....................    _code_block = 0; 
40D0:  CLRF   23
....................    return; 
40D2:  BRA    40D6
....................    } 
.................... } 
.................... goto _cid; 
40D4:  BRA    3FE8
.................... } 
40D6:  GOTO   4AC4 (RETURN)
.................... //****************************************************************************** 
.................... /* 
.................... void _last_10(void){ 
.................... int1 _show = 0; 
.................... int8 _id = 0; 
.................... _last5_stay: 
.................... scan_keypad(); 
....................    if(_key1 == _p1){ 
....................    if(_lasts == 5)_tp = 101; 
....................    if(_lasts == 1)_tp = 111; 
....................    if(_lasts == 2)_tp = 121; 
....................    if(_lasts == 3)_tp = 131; 
....................    if(_lasts == 4)_tp = 141; 
....................    _show = 1; 
....................    } 
....................    if(_key1 == _p2){ 
....................    if(_lasts == 5)_tp = 111; 
....................    if(_lasts == 1)_tp = 121; 
....................    if(_lasts == 2)_tp = 131; 
....................    if(_lasts == 3)_tp = 141; 
....................    if(_lasts == 4)_tp = 101; 
....................    _show = 1; 
....................    } 
....................    if(_key1 == _p3){ 
....................    if(_lasts == 5)_tp = 121; 
....................    if(_lasts == 1)_tp = 131; 
....................    if(_lasts == 2)_tp = 141; 
....................    if(_lasts == 3)_tp = 101; 
....................    if(_lasts == 4)_tp = 111; 
....................    _show = 1; 
....................    } 
....................    if(_key1 == _p4){ 
....................    if(_lasts == 5)_tp = 131; 
....................    if(_lasts == 1)_tp = 141; 
....................    if(_lasts == 2)_tp = 101; 
....................    if(_lasts == 3)_tp = 111; 
....................    if(_lasts == 4)_tp = 121; 
....................    _show = 1; 
....................    } 
....................    if(_key1 == _p5){ 
....................    if(_lasts == 5)_tp = 141; 
....................    if(_lasts == 1)_tp = 101; 
....................    if(_lasts == 2)_tp = 111; 
....................    if(_lasts == 3)_tp = 121; 
....................    if(_lasts == 4)_tp = 131; 
....................    _show = 1; 
....................    } 
....................  
.................... if(_show){ 
.................... _liters = _r_e(_tp); 
.................... _rupee = _r_e(_tp + 5); 
.................... _noz_fl = 1; 
.................... _disp1(); 
.................... _noz_fl = 0; 
.................... _disp2(); 
.................... _disp3(_rate); 
.................... _disp_data(); 
.................... _show = 0; 
.................... } 
....................    if(_key1 == _c){ 
....................    _key1 = 0; 
....................    _code_val = 0; 
....................    _code_seq = 0; 
....................    _pl_fl = 0; 
....................    return; 
....................    } 
.................... goto _last5_stay; 
.................... }// lasts 
.................... */ 
.................... //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
.................... /* 
.................... void _code_enter(void){ 
.................... int8 _fifteen =10; 
.................... if(_key1 != 0){ 
.................... _num_press(); 
....................    if(_num < 11 && _num != 0 && _code_val < 4){ 
....................    if(_num == 10)_num = 0; 
....................    if(_code_val == 0){ 
....................    _codes = (int16)_num; 
....................     _dig[0] = _fifteen; 
....................    } 
....................     if(_code_val > 0){ 
....................     _codes = _codes * 10; 
....................     _codes = _codes +(int16)_num; 
....................     } 
....................     _d17 = _fifteen; 
....................     _d18 = _fifteen; 
....................     if(_code_val == 1)_d21 = _fifteen; 
....................     if(_code_val == 2)_d20 = _fifteen; 
....................     if(_code_val == 3)_d19 = _fifteen; 
....................     if(_tc_fl == 0)_code_disp(); 
....................     _disp_data(); 
....................     ++_code_val; 
....................   } 
.................... } 
.................... } 
....................  
.................... //************************************************************** 
.................... void _sov_enter(void){ 
.................... if(_key1 != 0){ 
.................... _num_press(); 
....................    if(_num < 11 && _code_val < 3){ 
....................    if(_num == 10)_num = 0; 
....................    if(_code_val == 0){ 
....................     _sov_cut = (int16)_num; 
....................    }else{ 
....................     _sov_cut = _sov_cut * 10; 
....................     _sov_cut = _sov_cut +_num; 
....................     } 
....................     _disp3a(); 
....................     _disp_data(); 
....................     ++_code_val; 
....................   } 
.................... } 
.................... } 
....................  
.................... //****************************************************************************** 
....................  
.................... void _rate_enter(void){ 
.................... int1 _th_fl; 
.................... _th_fl = 0; 
.................... if(_key1 != 0){ 
.................... _num_press(); 
....................    if(_num < 11 && _code_val < 6){ 
....................    if(_num == 10)_num = 0; 
....................    if(_code_val == 0) _rate = (int16)_num; 
....................  
....................     if(_code_val > 0){ 
....................     _rate = _rate * 10; 
....................     _rate = _rate +(int16)_num; 
....................     } 
....................     if(_rate > _rate_limit){ 
....................     _rate = 0; 
....................     _code_val = 0; 
....................     } 
....................     _disp3(_rate); 
....................     _disp_data(); 
....................     ++_code_val; 
....................   } 
.................... } 
.................... } 
....................  
.................... //****************************************************************************** 
.................... void _round_enter(void){ 
.................... if(_key1 != 0){ 
.................... _num_press(); 
....................    if(_num < 11 && _code_val < 6){ 
....................    if(_num == 10)_num = 0; 
....................    if(_code_val == 0) _pulses = (int16)_num; 
....................     if(_code_val > 0){ 
....................     _pulses = _pulses * 10; 
....................     _pulses = _pulses +(int16)_num; 
....................     } 
....................     _disp3d(); 
....................     _disp_data(); 
....................  
....................     ++_code_val; 
....................   } 
.................... } 
.................... } 
....................  
.................... //****************************************************************************** 
.................... void _skip_enter(void){ 
.................... if(_key1 != 0){ 
.................... _num_press(); 
....................    if(_num < 11 && _code_val < 3){ 
....................    if(_num == 10)_num = 0; 
....................    if(_code_val == 0)_skip_val = (int16)_num; 
....................     if(_code_val > 0){ 
....................     _skip_val = _skip_val * 10; 
....................     _skip_val = _skip_val +(int16)_num; 
....................     if(_skip_val > 10 ){ 
....................     _skip_val = 0; 
....................     _code_val = 0; 
....................     } 
....................     } 
....................     _disp3b(); 
....................     _disp_data(); 
....................     ++_code_val; 
....................   } 
.................... } 
.................... } 
.................... //****************************************************************************** 
.................... void _first_enter(void){ 
.................... if(_key1 != 0){ 
.................... _num_press(); 
....................    if(_num < 11 && _code_val < 3){ 
....................    if(_num == 10)_num = 0; 
....................    if(_code_val == 0)_first_val = (int16)_num; 
....................     if(_code_val > 0){ 
....................     _first_val = _first_val * 10; 
....................     _first_val = _first_val +(int16)_num; 
....................        if(_first_val > 10 ){ 
....................        _code_val = 0; 
....................        _first_val = 0; 
....................        } 
....................     } 
....................     _disp3c(); 
....................     _disp_data(); 
....................      ++_code_val; 
....................   } 
.................... } 
.................... } 
.................... //****************************************************************************** 
.................... void _v_first_enter(void){ 
.................... if(_key1 != 0){ 
.................... _num_press(); 
....................    if(_num < 11 && _code_val < 3){ 
....................    if(_num == 10)_num = 0; 
....................    if(_code_val == 0)_v_first_val = (int16)_num; 
....................     if(_code_val > 0){ 
....................     _v_first_val = _v_first_val * 10; 
....................     _v_first_val = _v_first_val +(int16)_num; 
....................        if(_v_first_val > 10 ){ 
....................        _v_first_val = 0; 
....................        _code_val = 0; 
....................        } 
....................     } 
....................     _disp3e(); 
....................     _disp_data(); 
....................     ++_code_val; 
....................   } 
.................... } 
.................... } 
.................... //****************************************************************************** 
.................... void _motor_enter(void){ 
.................... if(_key1 != 0){ 
.................... _num_press(); 
....................    if(_num < 11 && _code_val < 3){ 
....................    if(_num == 10)_num = 0; 
....................    if(_code_val == 0)_motor_val = _num; 
....................     _disp3f(); 
....................     _disp_data(); 
....................   } 
....................  } 
.................... } 
.................... //****************************************************************************** 
.................... void _t_c_enter(void){ 
.................... if(_key1 != 0){ 
.................... _num_press(); 
....................    if(_num < 11 && _code_val < 6){ 
....................    if(_num == 10)_num = 0; 
....................    if(_code_val == 0) _totel_code = (int16)_num; 
....................  
....................     if(_code_val > 0){ 
....................     _totel_code = _totel_code * 10; 
....................     _totel_code = _totel_code +(int16)_num; 
....................     } 
....................     if(_totel_code > 9999){ 
....................     _totel_code = 0; 
....................     _code_val = 0; 
....................     } 
....................     _disp3g(); 
....................     _disp_data(); 
....................     ++_code_val; 
....................   } 
.................... } 
.................... } 
.................... //****************************************************************************** 
.................... void _p_limit_set(void){ 
.................... if(_key1 != 0){ 
.................... _num_press(); 
....................    if(_num < 11 && _code_val < 6){ 
....................    if(_num == 10)_num = 0; 
....................    if(_code_val == 0) _rate_limit = (int16)_num; 
....................    if(_code_val > 0){ 
....................       if(_code_val == 4 || _code_val == 5 ){ 
....................          if( _rate_limit > 6500){ 
....................          _rate_limit = 65000; 
....................          return; 
....................          } 
....................       } 
....................    _rate_limit = _rate_limit * 10; 
....................    _rate_limit = _rate_limit +(int16)_num; 
....................    } 
....................     ++_code_val; 
....................    _disp3(_rate_limit); 
....................     _disp_data(); 
....................   } 
....................  } 
.................... } 
....................  
.................... //****************************************************************************** 
.................... void _r_s_enter(void){ 
.................... if(_key1 != 0){ 
.................... _num_press(); 
....................    if(_num < 11 && _code_val < 6){ 
....................    if(_num == 10)_num = 0; 
....................    if(_code_val == 0) _rate_code = (int16)_num; 
....................  
....................     if(_code_val > 0){ 
....................     _rate_code = _rate_code * 10; 
....................     _rate_code = _rate_code +(int16)_num; 
....................     } 
....................     if(_rate_code > 9999){ 
....................     _rate_code = 0; 
....................     _code_val = 0; 
....................     } 
....................     _disp3h(); 
....................     _disp_data(); 
....................     ++_code_val; 
....................   } 
.................... } 
.................... } 
....................  
.................... //****************************************************************************** 
.................... void _varify_code(void){ 
.................... if(_codes == _rate_code){ 
.................... _codes = 0; 
.................... ++_code_counter; 
.................... _code_disp(); 
.................... _disp3(_rate); 
.................... _disp_data(); 
.................... _r_c_stay: 
.................... _key1 = scan_keypad(); 
....................    if(_key1 == _C || _rate > _rate_limit){ 
....................    _rate = 0 ; 
....................    _code_val = 0; 
....................    _disp3(_rate); 
....................    _disp_data(); 
....................    } 
....................    if(_key1 == _F){ 
....................    _ok(); 
....................    return; 
....................    } 
.................... _rate_enter(); 
.................... goto _r_c_stay; 
.................... }// Rate 
....................  
.................... if(_codes == _p_limit_code){ 
.................... _codes = 0; 
.................... ++_code_counter; 
.................... _code_disp(); 
.................... _disp3(_rate_limit); 
.................... _disp_data(); 
.................... _pl_c_stay: 
.................... _key1 = scan_keypad(); 
....................    if(_key1 == _C || _rate_limit > 59999){ 
....................    _rate_limit = 0; 
....................    _code_val = 0; 
....................    _disp3(_rate_limit); 
....................    _disp_data(); 
....................    } 
....................    if(_key1 == _F){ 
....................        if(_rate > _rate_limit)_rate = _rate_limit; 
....................    _ok(); 
....................    return; 
....................    } 
.................... _p_limit_set(); 
.................... goto _pl_c_stay; 
.................... }// Rate limit 
....................  
.................... if(_codes == _sov_code){ 
.................... _codes = 0; 
.................... ++_code_counter; 
.................... _code_disp(); 
.................... _disp3a(); 
.................... _disp_data(); 
.................... _s_c_stay: 
.................... _key1 = scan_keypad(); 
....................    if(_key1 == _C){ 
....................    _sov_cut = 0 ; 
....................    _code_val = 0; 
....................    _disp3a(); 
....................    _disp_data(); 
....................    } 
....................    if(_key1 == _F){ 
....................    _ok(); 
....................    return; 
....................    } 
.................... _sov_enter(); 
.................... goto _s_c_stay; 
.................... }// SOV 
....................  
.................... /* 
.................... if(_codes == _skip_code){ 
.................... _codes = 0; 
.................... ++_code_counter; 
.................... _code_disp(); 
....................    _disp3b(); 
.................... _disp_data(); 
.................... _skip_stay: 
.................... _key1 = scan_keypad(); 
....................    if(_key1 == _C){ 
....................    _skip_val = 0; 
....................    _code_val = 0; 
....................    _disp3b(); 
....................    _disp_data(); 
....................    } 
....................    if(_key1 == _F){ 
....................    _skip_sel_fl = 0; 
....................    _ok(); 
....................    return; 
....................    } 
....................    if(_key1 == _L){ 
....................    _skip_sel_fl = 1; 
....................    _ok(); 
....................    return; 
....................    } 
.................... _skip_enter(); 
.................... goto _skip_stay; 
.................... }// SKIP 
.................... */ 
.................... /* 
.................... if(_codes == _skip_all){ 
.................... _codes = 0; 
.................... ++_code_counter; 
.................... _code_disp(); 
.................... _skip_val = read_eeprom(201); 
.................... if(_skip_val > 10)_skip_val = 0; 
....................    _disp3b(); 
.................... _disp_data(); 
.................... _skip_stay: 
.................... _key1 = scan_keypad(); 
....................    if(_key1 == _C){ 
....................    _skip_val = 0; 
....................    _code_val = 0; 
....................    _disp3b(); 
....................    _disp_data(); 
....................    } 
....................    if(_key1 == _F){ 
....................    _skip_sel_fl = 0; 
....................    _ok(); 
....................    write_eeprom(201,_skip_val); 
....................    return; 
....................    } 
....................    if(_key1 == _L){ 
....................    _skip_sel_fl = 1; 
....................    _ok(); 
....................    write_eeprom(201,_skip_val); 
....................    return; 
....................    } 
.................... _skip_enter(); 
.................... goto _skip_stay; 
.................... }// SKIP 
.................... if(_codes == _skip_liter){ 
.................... _codes = 0; 
.................... ++_code_counter; 
.................... _code_disp(); 
.................... _skip_val = read_eeprom(202); 
.................... if(_skip_val > 10)_skip_val = 0; 
....................    _disp3b(); 
.................... _disp_data(); 
.................... _skip_stay1: 
.................... _key1 = scan_keypad(); 
....................    if(_key1 == _C){ 
....................    _skip_val = 0; 
....................    _code_val = 0; 
....................    _disp3b(); 
....................    _disp_data(); 
....................    } 
....................    if(_key1 == _F){ 
....................    _skip_sel_fl = 0; 
....................    _ok(); 
....................    write_eeprom(202,_skip_val); 
....................    return; 
....................    } 
....................    if(_key1 == _L){ 
....................    _skip_sel_fl = 1; 
....................    _ok(); 
....................    write_eeprom(202,_skip_val); 
....................    return; 
....................    } 
.................... _skip_enter(); 
.................... goto _skip_stay1; 
.................... }// SKIP 
....................  
.................... if(_codes == _skip_rupee){ 
.................... _codes = 0; 
.................... ++_code_counter; 
.................... _code_disp(); 
.................... _skip_val = read_eeprom(203); 
.................... if(_skip_val > 10)_skip_val = 0; 
....................    _disp3b(); 
.................... _disp_data(); 
.................... _skip_stay2: 
.................... _key1 = scan_keypad(); 
....................    if(_key1 == _C){ 
....................    _skip_val = 0; 
....................    _code_val = 0; 
....................    _disp3b(); 
....................    _disp_data(); 
....................    } 
....................    if(_key1 == _F){ 
....................    _skip_sel_fl = 0; 
....................    _ok(); 
....................    write_eeprom(203,_skip_val); 
....................    return; 
....................    } 
....................    if(_key1 == _L){ 
....................    _skip_sel_fl = 1; 
....................    _ok(); 
....................    write_eeprom(203,_skip_val); 
....................    return; 
....................    } 
.................... _skip_enter(); 
.................... goto _skip_stay2; 
.................... }// SKIP 
....................  
.................... if(_codes == _skip_any){ 
.................... _codes = 0; 
.................... ++_code_counter; 
.................... _code_disp(); 
.................... _skip_val = read_eeprom(204); 
.................... if(_skip_val > 10)_skip_val = 0; 
....................    _disp3b(); 
.................... _disp_data(); 
.................... _skip_stay3: 
.................... _key1 = scan_keypad(); 
....................    if(_key1 == _C){ 
....................    _skip_val = 0; 
....................    _code_val = 0; 
....................    _disp3b(); 
....................    _disp_data(); 
....................    } 
....................    if(_key1 == _F){ 
....................    _skip_sel_fl = 0; 
....................    _ok(); 
....................    write_eeprom(204,_skip_val); 
....................    return; 
....................    } 
....................    if(_key1 == _L){ 
....................    _skip_sel_fl = 1; 
....................    _ok(); 
....................    write_eeprom(204,_skip_val); 
....................    return; 
....................    } 
.................... _skip_enter(); 
.................... goto _skip_stay3; 
.................... }// SKIP 
.................... //////////////////////////////////////// F Function 
....................  
.................... if(_codes == _skip_all_f){ 
.................... _codes = 0; 
.................... ++_code_counter; 
.................... _code_disp(); 
.................... _skip_val = read_eeprom(206); 
.................... if(_skip_val > 10)_skip_val = 0; 
....................    _disp3b(); 
.................... _disp_data(); 
.................... _skip_stay4: 
.................... _key1 = scan_keypad(); 
....................    if(_key1 == _C){ 
....................    _skip_val = 0; 
....................    _code_val = 0; 
....................    _disp3b(); 
.................... _disp_data(); 
....................    } 
....................    if(_key1 == _F){ 
....................    _skip_sel_fl = 0; 
....................    _ok(); 
....................    write_eeprom(206,_skip_val); 
....................    return; 
....................    } 
....................    if(_key1 == _L){ 
....................    _skip_sel_fl = 1; 
....................    _ok(); 
....................    write_eeprom(206,_skip_val); 
....................    return; 
....................    } 
.................... _skip_enter(); 
.................... goto _skip_stay4; 
.................... }// SKIP 
....................  
.................... if(_codes == _skip_liter_f){ 
.................... _codes = 0; 
.................... ++_code_counter; 
.................... _code_disp(); 
.................... _skip_val = read_eeprom(207); 
.................... if(_skip_val > 10)_skip_val = 0; 
....................    _disp3b(); 
.................... _disp_data(); 
.................... _skip_stay5: 
.................... _key1 = scan_keypad(); 
....................    if(_key1 == _C){ 
....................    _skip_val = 0; 
....................    _code_val = 0; 
....................    _disp3b(); 
....................    _disp_data(); 
....................    } 
....................    if(_key1 == _F){ 
....................    _skip_sel_fl = 0; 
....................    _ok(); 
....................    write_eeprom(207,_skip_val); 
....................    return; 
....................    } 
....................    if(_key1 == _L){ 
....................    _skip_sel_fl = 1; 
....................    _ok(); 
....................    write_eeprom(207,_skip_val); 
....................    return; 
....................    } 
.................... _skip_enter(); 
.................... goto _skip_stay5; 
.................... }// SKIP 
....................  
.................... if(_codes == _skip_rupee_f){ 
.................... _codes = 0; 
.................... ++_code_counter; 
.................... _code_disp(); 
.................... _skip_val = read_eeprom(208); 
.................... if(_skip_val > 10)_skip_val = 0; 
....................    _disp3b(); 
.................... _disp_data(); 
.................... _skip_stay6: 
.................... _key1 = scan_keypad(); 
....................    if(_key1 == _C){ 
....................    _skip_val = 0; 
....................    _code_val = 0; 
....................    _disp3b(); 
.................... _disp_data(); 
....................    } 
....................    if(_key1 == _F){ 
....................    _skip_sel_fl = 0; 
....................    _ok(); 
....................    write_eeprom(208,_skip_val); 
....................    return; 
....................    } 
....................    if(_key1 == _L){ 
....................    _skip_sel_fl = 1; 
....................    _ok(); 
....................    write_eeprom(208,_skip_val); 
....................    return; 
....................    } 
.................... _skip_enter(); 
.................... goto _skip_stay6; 
.................... }// SKIP 
....................  
.................... if(_codes == _skip_any_f){ 
.................... _codes = 0; 
.................... ++_code_counter; 
.................... _code_disp(); 
.................... _skip_val = read_eeprom(209); 
.................... if(_skip_val > 10)_skip_val = 0; 
....................    _disp3b(); 
.................... _disp_data(); 
.................... _skip_stay7: 
.................... _key1 = scan_keypad(); 
....................    if(_key1 == _C){ 
....................    _skip_val = 0; 
....................    _code_val = 0; 
....................    _disp3b(); 
.................... _disp_data(); 
....................    } 
....................    if(_key1 == _F){ 
....................    _skip_sel_fl = 0; 
....................    _ok(); 
....................    write_eeprom(209,_skip_val); 
....................    return; 
....................    } 
....................    if(_key1 == _L){ 
....................    _skip_sel_fl = 1; 
....................    _ok(); 
....................    write_eeprom(209,_skip_val); 
....................    return; 
....................    } 
.................... _skip_enter(); 
.................... goto _skip_stay7; 
.................... }// SKIP 
....................  
.................... //////////////////////////////////////////////////// 
.................... if(_codes == _skip_error){ 
.................... _codes = 0; 
.................... ++_code_counter; 
.................... _code_disp(); 
.................... _skip_val = read_eeprom(205); 
.................... if(_skip_val > 5){ 
.................... _code_val = 0; 
.................... _skip_val = 0; 
.................... } 
....................    _disp3b(); 
.................... _disp_data(); 
.................... _skip_stay8: 
.................... _key1 = scan_keypad(); 
....................    if(_key1 == _C){ 
....................    _skip_val = 0; 
....................    _code_val = 0; 
....................    _disp3b(); 
....................    _disp_data(); 
....................    } 
....................    if(_key1 == _F){ 
....................    _ok(); 
....................    write_eeprom(205,_skip_val); 
....................    return; 
....................    } 
.................... _skip_enter(); 
.................... goto _skip_stay8; 
.................... }// SKIP 
....................  
....................  
.................... if(_codes == _first_code){ 
.................... _codes = 0; 
.................... ++_code_counter; 
.................... _code_disp(); 
....................    _disp3c(); 
.................... _disp_data(); 
.................... _first_stay: 
.................... _key1 = scan_keypad(); 
....................    if(_key1 == _C){ 
....................    _first_val = 0; 
....................    _code_val = 0; 
....................    _disp3c(); 
....................    _disp_data(); 
....................    } 
....................    if(_key1 == _F){ 
....................    _ok(); 
....................    return; 
....................    } 
.................... _first_enter(); 
.................... goto _first_stay; 
.................... }// first 
....................  
....................  
....................  
.................... if(_codes == _hang_code){ 
.................... _hang_stay: 
....................    if(_key1 == _C){ 
....................    _hang = 0; 
....................    _code_val = 0; 
....................    _hang_disp(); 
....................    _disp_data(); 
....................    } 
....................    if(_key1 == _f){ 
....................    _ok(); 
....................    return; 
....................    } 
.................... _key1 = scan_keypad(); 
.................... _hang_set(); 
.................... goto _hang_stay; 
.................... }//  hang code 
....................  
....................  
....................  
.................... if(_codes == _vf_code){ 
.................... _codes = 0; 
.................... ++_code_counter; 
.................... _code_disp(); 
....................    _disp3e(); 
.................... _disp_data(); 
.................... _vfirst_stay: 
.................... _key1 = scan_keypad(); 
....................    if(_key1 == _C){ 
....................    _v_first_val = 0; 
....................    _code_val = 0; 
....................    _disp3e(); 
....................    _disp_data(); 
....................    } 
....................    if(_key1 == _F){ 
....................    _ok(); 
....................    return; 
....................    } 
.................... _v_first_enter(); 
.................... goto _vfirst_stay; 
.................... }//  very first 
....................  
....................  
....................  
.................... if(_codes == _round_code){ 
.................... _codes = 0; 
.................... ++_code_counter; 
.................... _code_disp(); 
....................    _disp3d(); 
.................... _disp_data(); 
.................... _round_stay: 
.................... _key1 = scan_keypad(); 
....................    if(_key1 == _C || _pulses > 2000){ 
....................    _pulses = 100; 
....................    _code_val = 0; 
....................    _disp3d(); 
....................    _disp_data(); 
....................    } 
....................    if(_key1 == _F){ 
....................    if(_pulses > 2000 || _pulses < 30)_pulses = 100; 
....................    _ok(); 
....................    return; 
....................    } 
.................... _round_enter(); 
.................... goto _round_stay; 
.................... }// round 
....................  
....................  
.................... if(_codes == _motor_code){ 
.................... _codes = 0; 
.................... ++_code_counter; 
.................... _code_disp(); 
....................    _disp3f(); 
.................... _disp_data(); 
.................... _motor_stay: 
.................... _key1 = scan_keypad(); 
....................    if(_key1 == _C){ 
....................    _code_val = 0; 
....................    _motor_val = 0; 
....................    _disp3f(); 
....................    _disp_data(); 
....................    } 
....................    if(_key1 == _F){ 
....................    if(_motor_val != 1)write_eeprom(27,0); 
....................    else   write_eeprom(27,1); 
....................    _ok(); 
....................    return; 
....................    } 
.................... _motor_enter(); 
.................... goto _motor_stay; 
.................... }// motor 
....................  
.................... if(_codes == _t_c_change){ 
.................... _codes = 0; 
.................... ++_code_counter; 
.................... _code_disp(); 
....................    _disp3g(); 
.................... _disp_data(); 
.................... _t_c_stay: 
.................... _key1 = scan_keypad(); 
....................    if(_key1 == _C || _totel_code > 9999){ 
....................    _totel_code = 0; 
....................    _code_val = 0; 
....................    _disp3g(); 
....................    _disp_data(); 
....................     } 
....................    if(_key1 == _F){ 
....................    _ok(); 
....................    return; 
....................    } 
.................... _t_c_enter(); 
.................... goto _t_c_stay; 
.................... }// Totel code change 
....................  
.................... if(_codes == _time_code){ 
.................... _get_time(); 
.................... _td = (int32)_hr * 10000; 
.................... _td = _td + (int32)(_min * 100); 
.................... _td = _td + (int32)_sec; 
.................... _td_disp(); 
.................... _disp_data(); 
.................... _time_stay: 
....................    if(_key1 == _C){ 
....................    _ag_time: 
....................    _td = 0; 
....................    _code_val = 0; 
....................    _td_disp(); 
....................    _disp_data(); 
....................    } 
....................    if(_key1 == _f){ 
....................    _get_time(); 
....................    _hr = _td / 10000; 
....................    _sec = _td % 100; 
....................    _td = _td % 10000; 
....................    _min = _td / 100; 
....................    if(_hr > 23 || _min >  59 || _sec > 59)goto _ag_time; 
....................    rtc_set_datetime(_day,_mth,_year,_dow,_hr,_min); 
....................    _ok(); 
....................    return; 
....................    } 
.................... _key1 = scan_keypad(); 
.................... _td_set(); 
.................... goto _time_stay; 
.................... }//  time code 
.................... if(_codes == _date_code){ 
.................... _get_time(); 
.................... _td = (int32)_day * 10000; 
.................... _td = _td + (int32)_mth * 100; 
.................... _td = _td + (int32)_year; 
.................... _td_disp(); 
.................... _disp_data(); 
.................... _date_stay: 
....................    if(_key1 == _C){ 
....................    _ag_date: 
....................    _td = 0; 
....................    _code_val = 0; 
....................    _td_disp(); 
....................    _disp_data(); 
....................       } 
....................    if(_key1 == _f){ 
....................    _get_time(); 
....................    _day = _td / 10000; 
....................    _year = _td % 100; 
....................    _td = _td % 10000; 
....................    _mth = _td / 100; 
....................    if(_day > 31 || _day < 1 || _mth >  12 || _mth <  1)goto _ag_date; 
....................    rtc_set_datetime(_day,_mth,_year,_dow,_hr,_min); 
....................    _ok(); 
....................    return; 
....................    } 
.................... _key1 = scan_keypad(); 
.................... _td_set(); 
.................... goto _date_stay; 
.................... }//  date code 
....................  
....................  
.................... //+++++++++++++++++++++++++++++++++ 
.................... if(_codes == _last5){ 
.................... int1 _show = 0; 
....................  
.................... _codes = 0; 
.................... ++_code_counter; 
....................  
.................... _last5_stay: 
.................... _key1 = scan_keypad(); 
....................    if(_key1 == _p1){ 
....................    if(_lasts == 5)_tp = 101; 
....................    if(_lasts == 1)_tp = 111; 
....................    if(_lasts == 2)_tp = 121; 
....................    if(_lasts == 3)_tp = 131; 
....................    if(_lasts == 4)_tp = 141; 
....................    _show = 1; 
....................    } 
....................    if(_key1 == _p2){ 
....................    if(_lasts == 5)_tp = 111; 
....................    if(_lasts == 1)_tp = 121; 
....................    if(_lasts == 2)_tp = 131; 
....................    if(_lasts == 3)_tp = 141; 
....................    if(_lasts == 4)_tp = 101; 
....................    _show = 1; 
....................    } 
....................    if(_key1 == _p3){ 
....................    if(_lasts == 5)_tp = 121; 
....................    if(_lasts == 1)_tp = 131; 
....................    if(_lasts == 2)_tp = 141; 
....................    if(_lasts == 3)_tp = 101; 
....................    if(_lasts == 4)_tp = 111; 
....................    _show = 1; 
....................    } 
....................    if(_key1 == _p4){ 
....................    if(_lasts == 5)_tp = 131; 
....................    if(_lasts == 1)_tp = 141; 
....................    if(_lasts == 2)_tp = 101; 
....................    if(_lasts == 3)_tp = 111; 
....................    if(_lasts == 4)_tp = 121; 
....................    _show = 1; 
....................    } 
....................    if(_key1 == _p5){ 
....................    if(_lasts == 5)_tp = 141; 
....................    if(_lasts == 1)_tp = 101; 
....................    if(_lasts == 2)_tp = 111; 
....................    if(_lasts == 3)_tp = 121; 
....................    if(_lasts == 4)_tp = 131; 
....................    _show = 1; 
....................    } 
....................  
.................... if(_show){ 
.................... _liters = _r_e(_tp); 
.................... _rupee = _r_e(_tp + 5); 
....................  
.................... _noz_fl = 1; 
.................... _disp1(); 
.................... _noz_fl = 0; 
.................... _disp2(); 
.................... _disp_data(); 
.................... _disp3(_rate); 
.................... _show = 0; 
....................  
.................... } 
.................... if(_key1 == _C)return; 
.................... goto _last5_stay; 
.................... }// lasts 
....................  
....................  
.................... //++++++++++++ last 5 
.................... _err: 
.................... _error(); 
.................... _key1 = scan_keypad(); 
.................... if(_key1 == _C)return; 
.................... goto _err; 
.................... } 
.................... //****************************************************************************** 
.................... void _varify_tcode(void){ 
.................... int8 _t_remander,_f_counter; 
.................... if(_codes == _totel_code){ 
.................... _f_counter = 0; 
.................... _t_remander = _totel % 100; 
.................... _codes = 0; 
.................... if(_totel_counter > 9999)_totel_counter = 0; 
.................... _tcode_disp(); 
.................... _disp_data(); 
.................... _totel_stay: 
.................... _key1 = scan_keypad(); 
....................    if(_key1 == _C)return; 
....................    if(_key1 == _F){ 
....................    ++_f_counter; 
....................       if(_f_counter == 1){ 
....................        _code_val=0; 
....................       _totel_set(); 
....................       ++_f_counter; 
....................       } 
....................       if(_f_counter == 2){ 
....................       _totel = _totel +(int32)_t_remander; 
....................       ++_totel_counter; 
....................        _w_eerom(); 
....................       _tcode_disp(); 
....................       _disp_data(); 
....................  
....................       delay_ms(500); 
....................       _disp_d(); 
....................       delay_ms(500); 
....................       _key1 = _c; 
....................       return; 
....................       } 
....................         _totel_disp(); 
....................    } 
.................... goto _totel_stay; 
.................... }// TOTEL 
.................... _terr: 
.................... _error(); 
.................... _key1 = scan_keypad(); 
.................... if(_key1 == _C)return; 
.................... goto _terr; 
.................... } 
.................... //****************************************************************************** 
.................... void _code_menu(void){ 
.................... _var1 =_clear; 
.................... _all_disp(); 
.................... _disp_d(); 
.................... _code_disp(); 
.................... _disp_data(); 
....................  
.................... _code_val = 0; 
.................... _stay: 
.................... _key1 = scan_keypad(); 
.................... if(_key1 == _C)return; 
.................... _code_enter(); 
.................... if(_code_val == 4)_varify_code(); 
.................... if(_key1 == _C)return; 
.................... goto _stay; 
.................... } 
.................... //****************************************************************************** 
.................... void _totel_menu(void){ 
.................... _totel_disp(); 
.................... _code_val=0; 
.................... _disp_d(); 
.................... _tc_fl = 1; 
.................... _TC_stay: 
.................... _key1 = scan_keypad(); 
.................... if(_key1 == _C)return; 
.................... _code_enter(); 
.................... if(_code_val == 4)_varify_tcode(); 
.................... if(_key1 == _C)return; 
.................... goto _TC_stay; 
.................... } 
.................... */ 
.................... //****************************************************************************** 
....................  
.................... /* 
.................... #INT_EXT 
....................  _int0(){ 
....................  int32 _sq; 
....................    if(_chk_fill && _liters >= _petrol -1){ 
....................    ++_liters; 
....................    ++_totel; 
....................    _motor_off; 
....................    _sov1_off; 
....................    goto _pas; 
....................    } 
.................... _count = _count + (int32)_factor; 
.................... _add = _count / 100; 
....................    if(_add > 0){ 
....................       _count = _count % 100; 
....................       _liters = _liters + _add; 
....................       _totel = _totel + _add; 
....................       _sq = _liters  % 100; 
....................       _pas: 
....................       _change_fl = 1; 
....................   }//ADD 
....................  }//pulser 
....................  
.................... */ 
.................... #INT_RB 
.................... void _encoder_isr() { 
.................... int32 _sq; 
.................... if(_encoder_st != input(_encoder) ){ 
*
0428:  CLRF   00
042A:  BTFSC  F81.7
042C:  BSF    00.1
042E:  MOVF   xA6,W
0430:  XORWF  00,W
0432:  ANDLW  02
0434:  BZ    04EA
.................... if(!_disk_fl)_encoder_st = input(_encoder); 
0436:  BTFSC  26.4
0438:  BRA    0440
043A:  BCF    xA6.1
043C:  BTFSC  F81.7
043E:  BSF    xA6.1
.................... //   if(_chk_fill && _liters >= _petrol -1){ 
.................... //   ++_liters; 
.................... //   ++_totel; 
.................... //   _motor_off; 
.................... //   _sov1_off; 
.................... //   goto _pas; 
.................... //   } 
.................... _count = _count + (int32)_factor; 
0440:  CLRF   02
0442:  CLRF   03
0444:  MOVF   29,W
0446:  ADDWF  70,F
0448:  MOVF   2A,W
044A:  ADDWFC 71,F
044C:  MOVF   02,W
044E:  ADDWFC 72,F
0450:  MOVF   03,W
0452:  ADDWFC 73,F
.................... _add = _count / 100; 
0454:  MOVFF  73,FA
0458:  MOVFF  72,F9
045C:  MOVFF  71,F8
0460:  MOVFF  70,F7
0464:  CLRF   xFE
0466:  CLRF   xFD
0468:  CLRF   xFC
046A:  MOVLW  64
046C:  MOVWF  xFB
046E:  RCALL  0376
0470:  MOVFF  00,3F
....................    if(_add > 0){ 
0474:  MOVF   3F,F
0476:  BZ    04EA
....................       _count = _count % 100; 
0478:  MOVFF  73,FA
047C:  MOVFF  72,F9
0480:  MOVFF  71,F8
0484:  MOVFF  70,F7
0488:  CLRF   xFE
048A:  CLRF   xFD
048C:  CLRF   xFC
048E:  MOVLW  64
0490:  MOVWF  xFB
0492:  RCALL  0376
0494:  MOVFF  FEF,70
0498:  MOVFF  FEC,71
049C:  MOVFF  FEC,72
04A0:  MOVFF  FEC,73
....................       _liters = _liters + _add; 
04A4:  MOVF   3F,W
04A6:  ADDWF  50,F
04A8:  MOVLW  00
04AA:  ADDWFC 51,F
04AC:  ADDWFC 52,F
04AE:  ADDWFC 53,F
....................       _totel = _totel + _add; 
04B0:  MOVF   3F,W
04B2:  ADDWF  5C,F
04B4:  MOVLW  00
04B6:  ADDWFC 5D,F
04B8:  ADDWFC 5E,F
04BA:  ADDWFC 5F,F
....................       _sq = _liters  % 100; 
04BC:  MOVFF  53,FA
04C0:  MOVFF  52,F9
04C4:  MOVFF  51,F8
04C8:  MOVFF  50,F7
04CC:  CLRF   xFE
04CE:  CLRF   xFD
04D0:  CLRF   xFC
04D2:  MOVLW  64
04D4:  MOVWF  xFB
04D6:  RCALL  0376
04D8:  MOVFF  FEF,F3
04DC:  MOVFF  FEC,F4
04E0:  MOVFF  FEC,F5
04E4:  MOVFF  FEC,F6
....................       _pas: 
....................       _change_fl = 1; 
04E8:  BSF    xA7.3
....................   }//ADD 
....................  }//pulser 
.................... }//main 
....................  
....................  
....................  
04EA:  BCF    FF2.0
04EC:  GOTO   0070
.................... #INT_TIMER2 
.................... void clock_isr(){ 
.................... if(++int_count > 3){ 
04F0:  INCF   xA2,F
04F2:  MOVF   xA2,W
04F4:  SUBLW  03
04F6:  BC    04FE
.................... _totelizer_off; 
04F8:  BSF    F8C.0
.................... _tm2_off; 
04FA:  BCF    F8C.5
.................... _buz_off; 
04FC:  BSF    F8A.3
.................... } 
.................... } 
....................  
....................  
04FE:  BCF    F9E.1
0500:  GOTO   0070
.................... #INT_RDA 
.................... rda_handler(){ 
.................... _rs232[_ir] = getc(); 
*
051C:  CLRF   03
051E:  MOVF   xB0,W
0520:  ADDLW  AB
0522:  MOVWF  FE9
0524:  MOVLW  00
0526:  ADDWFC 03,W
0528:  MOVWF  FEA
052A:  MOVFF  FEA,F6
052E:  MOVFF  FE9,F5
0532:  BRA    0504
0534:  MOVFF  F6,FEA
0538:  MOVFF  F5,FE9
053C:  MOVFF  01,FEF
.................... if(_ir < 4)++_ir; 
0540:  MOVF   xB0,W
0542:  SUBLW  03
0544:  BTFSC  FD8.0
0546:  INCF   xB0,F
.................... _rx_fl = 1; 
0548:  BSF    xA7.4
.................... } 
....................  
....................  
054A:  BCF    F9E.5
054C:  GOTO   0070
.................... void main() { 
*
43A6:  CLRF   FF8
43A8:  BCF    FD0.7
43AA:  BSF    0D.7
43AC:  CLRF   FEA
43AE:  CLRF   FE9
43B0:  MOVLW  26
43B2:  MOVWF  FAF
43B4:  MOVLW  A6
43B6:  MOVWF  FAC
43B8:  MOVLW  90
43BA:  MOVWF  FAB
43BC:  BSF    FC1.0
43BE:  BSF    FC1.1
43C0:  BSF    FC1.2
43C2:  BCF    FC1.3
43C4:  CLRF   19
43C6:  CLRF   1A
43C8:  CLRF   1B
43CA:  CLRF   1C
43CC:  CLRF   1D
43CE:  CLRF   1E
43D0:  CLRF   1F
43D2:  CLRF   20
43D4:  CLRF   21
43D6:  CLRF   22
43D8:  CLRF   23
43DA:  CLRF   24
43DC:  CLRF   25
43DE:  BCF    26.0
43E0:  BCF    26.1
43E2:  BCF    26.2
43E4:  BCF    26.3
43E6:  BCF    26.4
43E8:  BCF    26.5
43EA:  BCF    26.6
43EC:  BCF    26.7
43EE:  CLRF   27
43F0:  CLRF   28
43F2:  CLRF   29
43F4:  CLRF   2A
43F6:  CLRF   2B
43F8:  CLRF   2C
43FA:  CLRF   2D
43FC:  CLRF   2E
43FE:  CLRF   2F
4400:  CLRF   30
4402:  CLRF   31
4404:  CLRF   32
4406:  CLRF   33
4408:  CLRF   34
440A:  CLRF   35
440C:  CLRF   36
440E:  CLRF   37
4410:  CLRF   38
4412:  CLRF   39
4414:  CLRF   3A
4416:  CLRF   3B
4418:  CLRF   3C
441A:  CLRF   3D
441C:  CLRF   3E
441E:  CLRF   3F
4420:  CLRF   40
4422:  CLRF   41
4424:  CLRF   42
4426:  CLRF   43
4428:  CLRF   44
442A:  CLRF   45
442C:  CLRF   46
442E:  CLRF   47
4430:  CLRF   48
4432:  CLRF   49
4434:  CLRF   4A
4436:  CLRF   4B
4438:  CLRF   4C
443A:  CLRF   4D
443C:  CLRF   4E
443E:  CLRF   4F
4440:  CLRF   50
4442:  CLRF   51
4444:  CLRF   52
4446:  CLRF   53
4448:  CLRF   54
444A:  CLRF   55
444C:  CLRF   56
444E:  CLRF   57
4450:  CLRF   58
4452:  CLRF   59
4454:  CLRF   5A
4456:  CLRF   5B
4458:  CLRF   5C
445A:  CLRF   5D
445C:  CLRF   5E
445E:  CLRF   5F
4460:  CLRF   60
4462:  CLRF   61
4464:  CLRF   62
4466:  CLRF   63
4468:  CLRF   64
446A:  CLRF   65
446C:  CLRF   66
446E:  CLRF   67
4470:  CLRF   68
4472:  CLRF   69
4474:  CLRF   6A
4476:  CLRF   6B
4478:  CLRF   6C
447A:  CLRF   6D
447C:  CLRF   6E
447E:  CLRF   6F
4480:  CLRF   70
4482:  CLRF   71
4484:  CLRF   72
4486:  CLRF   73
4488:  CLRF   74
448A:  CLRF   75
448C:  CLRF   76
448E:  CLRF   77
4490:  CLRF   78
4492:  CLRF   79
4494:  CLRF   7A
4496:  CLRF   7B
4498:  CLRF   7C
449A:  CLRF   7D
449C:  CLRF   7E
449E:  CLRF   7F
44A0:  CLRF   x80
44A2:  CLRF   x81
44A4:  CLRF   x82
44A6:  CLRF   x83
44A8:  CLRF   x84
44AA:  CLRF   x85
44AC:  CLRF   x86
44AE:  CLRF   x87
44B0:  CLRF   x88
44B2:  CLRF   x89
44B4:  CLRF   x8A
44B6:  CLRF   x8B
44B8:  CLRF   x8C
44BA:  CLRF   x8D
44BC:  CLRF   x8E
44BE:  CLRF   x8F
44C0:  CLRF   x90
44C2:  CLRF   x91
44C4:  CLRF   x92
44C6:  CLRF   x93
44C8:  CLRF   x94
44CA:  CLRF   x95
44CC:  CLRF   x96
44CE:  CLRF   x97
44D0:  CLRF   x98
44D2:  CLRF   x99
44D4:  CLRF   x9A
44D6:  CLRF   x9B
44D8:  CLRF   x9C
44DA:  CLRF   x9D
44DC:  CLRF   x9E
44DE:  CLRF   x9F
44E0:  CLRF   xA0
44E2:  CLRF   xA1
44E4:  CLRF   xA2
44E6:  CLRF   xA3
44E8:  CLRF   xA4
44EA:  CLRF   xA5
44EC:  BCF    xA6.0
44EE:  BCF    xA6.1
44F0:  BCF    xA6.2
44F2:  BCF    xA6.3
44F4:  BCF    xA6.4
44F6:  BCF    xA6.5
44F8:  BCF    xA6.6
44FA:  BCF    xA6.7
44FC:  BCF    xA7.0
44FE:  BCF    xA7.1
4500:  BCF    xA7.2
4502:  BCF    xA7.3
4504:  BCF    xA7.4
4506:  BCF    xA7.5
4508:  BCF    xA7.6
450A:  BCF    xA7.7
450C:  CLRF   xA8
450E:  CLRF   xA9
4510:  CLRF   xAA
4512:  CLRF   xAB
4514:  CLRF   xAC
4516:  CLRF   xAD
4518:  CLRF   xAE
451A:  CLRF   xAF
451C:  CLRF   xB0
451E:  CLRF   xB1
4520:  MOVLW  01
4522:  MOVWF  xB2
4524:  MOVLW  04
4526:  MOVWF  xB3
4528:  MOVLW  05
452A:  MOVWF  xB4
452C:  MOVLW  08
452E:  MOVWF  xB5
4530:  MOVLW  09
4532:  MOVWF  xB6
4534:  MOVLW  0C
4536:  MOVWF  xB7
4538:  MOVLW  0D
453A:  MOVWF  xB8
453C:  MOVLW  02
453E:  MOVWF  xB9
4540:  MOVLW  03
4542:  MOVWF  xBA
4544:  MOVLW  06
4546:  MOVWF  xBB
4548:  MOVLW  07
454A:  MOVWF  xBC
454C:  MOVLW  0A
454E:  MOVWF  xBD
4550:  MOVLW  0B
4552:  MOVWF  xBE
4554:  MOVLW  0E
4556:  MOVWF  xBF
4558:  MOVLW  0F
455A:  MOVWF  xC0
455C:  CLRF   xC1
455E:  MOVLW  02
4560:  MOVWF  xC2
4562:  MOVLW  01
4564:  MOVWF  xC3
4566:  MOVLW  03
4568:  MOVWF  xC4
456A:  MOVLW  08
456C:  MOVWF  xC5
456E:  MOVLW  0A
4570:  MOVWF  xC6
4572:  MOVLW  09
4574:  MOVWF  xC7
4576:  MOVLW  0B
4578:  MOVWF  xC8
457A:  MOVLW  04
457C:  MOVWF  xC9
457E:  MOVLW  06
4580:  MOVWF  xCA
4582:  MOVLW  05
4584:  MOVWF  xCB
4586:  MOVLW  07
4588:  MOVWF  xCC
458A:  MOVLW  0C
458C:  MOVWF  xCD
458E:  MOVLW  0E
4590:  MOVWF  xCE
4592:  MOVLW  0D
4594:  MOVWF  xCF
4596:  MOVLW  0F
4598:  MOVWF  xD0
459A:  CLRF   xD1
.................... _init_system(); 
459C:  GOTO   0F52
.................... //_short2: 
.................... //if(_totel > (_hang * 100) && _hang > 0)goto _short2; 
.................... _buz_on; 
45A0:  BCF    F8A.3
.................... delay_ms(300); 
45A2:  MOVLW  02
45A4:  MOVWF  xD2
45A6:  MOVLW  96
45A8:  MOVWF  xD7
45AA:  CALL   0FF8
45AE:  DECFSZ xD2,F
45B0:  BRA    45A6
.................... _buz_off; 
45B2:  BSF    F8A.3
.................... delay_ms(200); 
45B4:  MOVLW  C8
45B6:  MOVWF  xD7
45B8:  CALL   0FF8
.................... _buz_on; 
45BC:  BCF    F8A.3
.................... delay_ms(500); 
45BE:  MOVLW  02
45C0:  MOVWF  xD2
45C2:  MOVLW  FA
45C4:  MOVWF  xD7
45C6:  CALL   0FF8
45CA:  DECFSZ xD2,F
45CC:  BRA    45C2
.................... _buz_off; 
45CE:  BSF    F8A.3
.................... //goto _bv; 
.................... //////////////////////////////////// 
....................  
.................... _on_fl = 0; 
45D0:  BCF    xA6.2
.................... _d1 = day / 10; 
45D2:  MOVFF  1A,D4
45D6:  MOVLW  0A
45D8:  MOVWF  xD5
45DA:  CALL   1020
45DE:  MOVFF  01,96
.................... _d2 = day % 10; 
45E2:  MOVFF  1A,D4
45E6:  MOVLW  0A
45E8:  MOVWF  xD5
45EA:  CALL   1020
45EE:  MOVFF  00,93
.................... _d3 = _clear; 
45F2:  MOVLW  0F
45F4:  MOVWF  x94
.................... _d4 = month / 10; 
45F6:  MOVFF  1B,D4
45FA:  MOVLW  0A
45FC:  MOVWF  xD5
45FE:  CALL   1020
4602:  MOVFF  01,99
.................... _d5 = month % 10; 
4606:  MOVFF  1B,D4
460A:  MOVLW  0A
460C:  MOVWF  xD5
460E:  CALL   1020
4612:  MOVFF  00,9A
.................... _d6 = _clear; 
4616:  MOVLW  0F
4618:  MOVWF  x97
.................... _d7 = yr / 10; 
461A:  MOVFF  1C,D4
461E:  MOVLW  0A
4620:  MOVWF  xD5
4622:  CALL   1020
4626:  MOVFF  01,98
.................... _d8 = yr % 10; 
462A:  MOVFF  1C,D4
462E:  MOVLW  0A
4630:  MOVWF  xD5
4632:  CALL   1020
4636:  MOVFF  00,92
....................  
.................... _d9 = hrs / 10; 
463A:  MOVFF  1D,D4
463E:  MOVLW  0A
4640:  MOVWF  xD5
4642:  CALL   1020
4646:  MOVFF  01,95
.................... _d10 = hrs % 10; 
464A:  MOVFF  1D,D4
464E:  MOVLW  0A
4650:  MOVWF  xD5
4652:  CALL   1020
4656:  MOVFF  00,9C
.................... _d11 = _clear; 
465A:  MOVLW  0F
465C:  MOVWF  x9B
.................... _d12 = min / 10; 
465E:  MOVFF  1E,D4
4662:  MOVLW  0A
4664:  MOVWF  xD5
4666:  CALL   1020
466A:  MOVFF  01,9D
.................... _d13 = min % 10; 
466E:  MOVFF  1E,D4
4672:  MOVLW  0A
4674:  MOVWF  xD5
4676:  CALL   1020
467A:  MOVFF  00,8E
.................... _d14 = _clear; 
467E:  MOVLW  0F
4680:  MOVWF  x8F
.................... _d15 = sec / 10; 
4682:  MOVFF  1F,D4
4686:  MOVLW  0A
4688:  MOVWF  xD5
468A:  CALL   1020
468E:  MOVFF  01,91
.................... _d16 = sec % 10; 
4692:  MOVFF  1F,D4
4696:  MOVLW  0A
4698:  MOVWF  xD5
469A:  CALL   1020
469E:  MOVFF  00,90
.................... _disp_data(); 
46A2:  CALL   1048
.................... delay_ms(3500); 
46A6:  MOVLW  0E
46A8:  MOVWF  xD2
46AA:  MOVLW  FA
46AC:  MOVWF  xD7
46AE:  CALL   0FF8
46B2:  DECFSZ xD2,F
46B4:  BRA    46AA
.................... /////////////////////////////////// 
.................... //_rupee = _date; 
.................... _liters = _r_e(51); 
46B6:  MOVLW  33
46B8:  MOVWF  xD4
46BA:  CALL   0B88
46BE:  MOVFF  03,53
46C2:  MOVFF  02,52
46C6:  MOVFF  01,51
46CA:  MOVFF  00,50
.................... _petrol = _r_e(61); 
46CE:  MOVLW  3D
46D0:  MOVWF  xD4
46D2:  CALL   0B88
46D6:  MOVFF  03,5B
46DA:  MOVFF  02,5A
46DE:  MOVFF  01,59
46E2:  MOVFF  00,58
.................... if(_liters > 0)_rupee = _liters *_rate / 100; 
46E6:  MOVF   50,F
46E8:  BNZ   46F6
46EA:  MOVF   51,F
46EC:  BNZ   46F6
46EE:  MOVF   52,F
46F0:  BNZ   46F6
46F2:  MOVF   53,F
46F4:  BZ    4760
46F6:  MOVFF  53,D9
46FA:  MOVFF  52,D8
46FE:  MOVFF  51,D7
4702:  MOVFF  50,D6
4706:  CLRF   xDD
4708:  CLRF   xDC
470A:  MOVFF  47,DB
470E:  MOVFF  46,DA
4712:  CALL   1102
4716:  MOVFF  03,D5
471A:  MOVFF  02,D4
471E:  MOVFF  01,D3
4722:  MOVFF  00,D2
4726:  CLRF   18
4728:  BTFSC  FF2.7
472A:  BSF    18.7
472C:  BCF    FF2.7
472E:  MOVFF  03,FA
4732:  MOVFF  02,F9
4736:  MOVFF  01,F8
473A:  MOVFF  00,F7
473E:  CLRF   xFE
4740:  CLRF   xFD
4742:  CLRF   xFC
4744:  MOVLW  64
4746:  MOVWF  xFB
4748:  CALL   0376
474C:  BTFSC  18.7
474E:  BSF    FF2.7
4750:  MOVFF  03,4F
4754:  MOVFF  02,4E
4758:  MOVFF  01,4D
475C:  MOVFF  00,4C
.................... _price =_r_e(71); 
4760:  MOVLW  47
4762:  MOVWF  xD4
4764:  CALL   0B88
4768:  MOVFF  03,57
476C:  MOVFF  02,56
4770:  MOVFF  01,55
4774:  MOVFF  00,54
.................... _var1 = _clear; 
4778:  MOVLW  0F
477A:  MOVWF  xA4
.................... _all_disp(); 
477C:  CALL   0578
.................... _noz_fl = 1; 
4780:  BSF    xA6.0
.................... _disp1(); 
4782:  CALL   14FC
.................... _noz_fl = 0; 
4786:  BCF    xA6.0
.................... _disp2(); 
4788:  CALL   18C6
.................... _disp3(_rate); 
478C:  MOVFF  47,D5
4790:  MOVFF  46,D4
4794:  CALL   192C
.................... _disp_data(); 
4798:  CALL   1048
....................  
.................... if(_liters > 0){ 
479C:  MOVF   50,F
479E:  BNZ   47AE
47A0:  MOVF   51,F
47A2:  BNZ   47AE
47A4:  MOVF   52,F
47A6:  BNZ   47AE
47A8:  MOVF   53,F
47AA:  BTFSC  FD8.2
47AC:  BRA    4888
.................... delay_ms(3000); 
47AE:  MOVLW  0C
47B0:  MOVWF  xD2
47B2:  MOVLW  FA
47B4:  MOVWF  xD7
47B6:  CALL   0FF8
47BA:  DECFSZ xD2,F
47BC:  BRA    47B2
.................... _totel = _totel + _liters; 
47BE:  MOVF   50,W
47C0:  ADDWF  5C,F
47C2:  MOVF   51,W
47C4:  ADDWFC 5D,F
47C6:  MOVF   52,W
47C8:  ADDWFC 5E,F
47CA:  MOVF   53,W
47CC:  ADDWFC 5F,F
.................... _noz_fl = 1; 
47CE:  BSF    xA6.0
.................... //   if(_noz_on && _noz_pad !=  1){ 
....................    if(_noz_on ){ 
47D0:  BTFSC  F82.2
47D2:  BRA    4884
47D4:  CLRF   18
47D6:  BTFSC  FF2.7
47D8:  BSF    18.7
47DA:  BCF    FF2.7
....................    _to_val = _totel / 100; 
47DC:  MOVFF  5F,FA
47E0:  MOVFF  5E,F9
47E4:  MOVFF  5D,F8
47E8:  MOVFF  5C,F7
47EC:  CLRF   xFE
47EE:  CLRF   xFD
47F0:  CLRF   xFC
47F2:  MOVLW  64
47F4:  MOVWF  xFB
47F6:  CALL   0376
47FA:  BTFSC  18.7
47FC:  BSF    FF2.7
47FE:  MOVFF  03,6F
4802:  MOVFF  02,6E
4806:  MOVFF  01,6D
480A:  MOVFF  00,6C
....................    _factor = 10000 / (_pulses - (int16)_skip_val); 
480E:  CLRF   03
4810:  MOVF   43,W
4812:  SUBWF  27,W
4814:  MOVWF  00
4816:  MOVF   03,W
4818:  SUBWFB 28,W
481A:  MOVWF  03
481C:  MOVFF  00,D2
4820:  MOVWF  xD3
4822:  MOVLW  27
4824:  MOVWF  xD9
4826:  MOVLW  10
4828:  MOVWF  xD8
482A:  MOVFF  03,DB
482E:  MOVFF  00,DA
4832:  CALL   18EA
4836:  MOVFF  02,2A
483A:  MOVFF  01,29
....................    _count = 0; 
483E:  CLRF   73
4840:  CLRF   72
4842:  CLRF   71
4844:  CLRF   70
....................    _add = 0; 
4846:  CLRF   3F
....................       if(_petrol > 0){ 
4848:  MOVF   58,F
484A:  BNZ   4858
484C:  MOVF   59,F
484E:  BNZ   4858
4850:  MOVF   5A,F
4852:  BNZ   4858
4854:  MOVF   5B,F
4856:  BZ    4874
....................       _chk_fill = 1; 
4858:  BSF    xA6.4
....................          if(_price >  0)_price_fl = 1; 
485A:  MOVF   54,F
485C:  BNZ   486A
485E:  MOVF   55,F
4860:  BNZ   486A
4862:  MOVF   56,F
4864:  BNZ   486A
4866:  MOVF   57,F
4868:  BZ    486E
486A:  BSF    xA6.5
....................          else _liter_fl = 1; 
486C:  BRA    4870
486E:  BSF    xA7.2
....................       _set_skip(); 
4870:  CALL   1A20
....................       } 
....................       if(input(_wapda)){ 
4874:  BTFSS  F82.1
4876:  BRA    487E
....................       _stop_fill(); 
4878:  CALL   2046
....................       goto _w_fail; 
487C:  BRA    4936
....................       } 
....................    _motor_on; 
487E:  BCF    F8A.4
....................    goto _continue; 
4880:  BRA    49C6
....................    }else{ 
4882:  BRA    4888
....................    _stop_fill(); 
4884:  CALL   2046
....................    } 
.................... } 
.................... delay_ms(_thou); 
4888:  MOVLW  04
488A:  MOVWF  xD2
488C:  MOVLW  FA
488E:  MOVWF  xD7
4890:  CALL   0FF8
4894:  DECFSZ xD2,F
4896:  BRA    488C
.................... for(_var1=0;_var1<10;++_var1){ 
4898:  CLRF   xA4
489A:  MOVF   xA4,W
489C:  SUBLW  09
489E:  BNC   48B0
.................... _all_disp(); 
48A0:  CALL   0578
.................... delay_ms(200); 
48A4:  MOVLW  C8
48A6:  MOVWF  xD7
48A8:  CALL   0FF8
.................... } 
48AC:  INCF   xA4,F
48AE:  BRA    489A
....................  
.................... _rset: 
.................... _var1 = _clear; 
48B0:  MOVLW  0F
48B2:  MOVWF  xA4
.................... _all_disp(); 
48B4:  CALL   0578
.................... _noz_fl = 1; 
48B8:  BSF    xA6.0
.................... _rst(); 
48BA:  CALL   200C
....................  while(TRUE){ 
.................... _short2: 
.................... if(_totel > (_hang * 100) && _hang > 0)goto _short2; 
48BE:  MOVFF  7F,D9
48C2:  MOVFF  7E,D8
48C6:  MOVFF  7D,D7
48CA:  MOVFF  7C,D6
48CE:  CLRF   xDD
48D0:  CLRF   xDC
48D2:  CLRF   xDB
48D4:  MOVLW  64
48D6:  MOVWF  xDA
48D8:  CALL   1102
48DC:  MOVF   03,W
48DE:  SUBWF  5F,W
48E0:  BNC   490C
48E2:  BNZ   48FA
48E4:  MOVF   02,W
48E6:  SUBWF  5E,W
48E8:  BNC   490C
48EA:  BNZ   48FA
48EC:  MOVF   01,W
48EE:  SUBWF  5D,W
48F0:  BNC   490C
48F2:  BNZ   48FA
48F4:  MOVF   5C,W
48F6:  SUBWF  00,W
48F8:  BC    490C
48FA:  MOVF   7C,F
48FC:  BNZ   490A
48FE:  MOVF   7D,F
4900:  BNZ   490A
4902:  MOVF   7E,F
4904:  BNZ   490A
4906:  MOVF   7F,F
4908:  BZ    490C
490A:  BRA    48BE
....................  
.................... // _short: 
.................... //if((_totel / 100) > _hang && _hang > 0)goto _short; 
.................... //if((_totel / 100) > 3128)goto _short; 
....................  
.................... if(_on_fl){ 
490C:  BTFSS  xA6.2
490E:  BRA    4936
....................    if(_liters <  8){ 
4910:  MOVF   53,F
4912:  BNZ   4932
4914:  MOVF   52,F
4916:  BNZ   4932
4918:  MOVF   51,F
491A:  BNZ   4932
491C:  MOVF   50,W
491E:  SUBLW  07
4920:  BNC   4932
....................    _liters = 0; 
4922:  CLRF   53
4924:  CLRF   52
4926:  CLRF   51
4928:  CLRF   50
....................    _rupee = 0; 
492A:  CLRF   4F
492C:  CLRF   4E
492E:  CLRF   4D
4930:  CLRF   4C
....................    } 
.................... _control(); 
4932:  GOTO   215E
.................... goto _rr; 
.................... } 
....................  
.................... _w_fail: 
.................... if(input(_wapda)){ 
4936:  BTFSS  F82.1
4938:  BRA    493E
.................... _power_down(); 
493A:  CALL   20E8
.................... } 
....................  
....................  
.................... //if(_noz_on && _noz_pad != 1){ ///nnnnnnnnnnnnnnnnnnnnnn 
.................... if(_noz_on){ ///nnnnnnnnnnnnnnnnnnnnnn 
493E:  BTFSC  F82.2
4940:  BRA    4A36
.................... _of_pad: 
.................... delay_ms(500); 
4942:  MOVLW  02
4944:  MOVWF  xD2
4946:  MOVLW  FA
4948:  MOVWF  xD7
494A:  CALL   0FF8
494E:  DECFSZ xD2,F
4950:  BRA    4946
....................    if(_noz_fl == 0 ){ 
4952:  BTFSC  xA6.0
4954:  BRA    4A34
.................... //   _buz_on; 
....................    _rupee = 0; 
4956:  CLRF   4F
4958:  CLRF   4E
495A:  CLRF   4D
495C:  CLRF   4C
....................    _liters = 0; 
495E:  CLRF   53
4960:  CLRF   52
4962:  CLRF   51
4964:  CLRF   50
....................    _noz_fl = 1; 
4966:  BSF    xA6.0
....................    _var1 = 8; 
4968:  MOVLW  08
496A:  MOVWF  xA4
....................    _all_disp(); 
496C:  CALL   0578
....................    _disp_data(); 
4970:  CALL   1048
....................     delay_ms(700); 
4974:  MOVLW  04
4976:  MOVWF  xD2
4978:  MOVLW  AF
497A:  MOVWF  xD7
497C:  CALL   0FF8
4980:  DECFSZ xD2,F
4982:  BRA    4978
.................... //    _buz_off; 
.................... //    delay_ms(200); 
....................     _buz_on; 
4984:  BCF    F8A.3
....................    _var1 = _clear; 
4986:  MOVLW  0F
4988:  MOVWF  xA4
....................    _all_disp(); 
498A:  CALL   0578
....................    _disp_data(); 
498E:  CALL   1048
....................     delay_ms(200); 
4992:  MOVLW  C8
4994:  MOVWF  xD7
4996:  CALL   0FF8
....................     _buz_off; 
499A:  BSF    F8A.3
....................    _disp1(); 
499C:  CALL   14FC
....................    _disp2(); 
49A0:  CALL   18C6
....................    _disp3(_rate); 
49A4:  MOVFF  47,D5
49A8:  MOVFF  46,D4
49AC:  CALL   192C
....................    _disp_data(); 
49B0:  CALL   1048
....................     delay_ms(70); 
49B4:  MOVLW  46
49B6:  MOVWF  xD7
49B8:  CALL   0FF8
....................    _buz_on; 
49BC:  BCF    F8A.3
....................    delay_ms(200); 
49BE:  MOVLW  C8
49C0:  MOVWF  xD7
49C2:  CALL   0FF8
.................... _continue: 
.................... _totel2 = _totel; 
49C6:  MOVFF  5F,8B
49CA:  MOVFF  5E,8A
49CE:  MOVFF  5D,89
49D2:  MOVFF  5C,88
....................    _on_fl = 1; 
49D6:  BSF    xA6.2
....................    _p_fl = 1; 
49D8:  BSF    26.6
....................    if(_liters == 0)_initilize(); 
49DA:  MOVF   50,F
49DC:  BNZ   49EE
49DE:  MOVF   51,F
49E0:  BNZ   49EE
49E2:  MOVF   52,F
49E4:  BNZ   49EE
49E6:  MOVF   53,F
49E8:  BNZ   49EE
49EA:  GOTO   267E
....................    _sov1_on; 
49EE:  BCF    F8A.5
....................    delay_ms(30); 
49F0:  MOVLW  1E
49F2:  MOVWF  xD7
49F4:  CALL   0FF8
....................    _buz_off; 
49F8:  BSF    F8A.3
....................    if(!_motor_fl){ 
49FA:  BTFSC  xA7.6
49FC:  BRA    4A02
....................    _motor_on; 
49FE:  BCF    F8A.4
....................    }else{ 
4A00:  BRA    4A14
....................    delay_ms(1500); 
4A02:  MOVLW  06
4A04:  MOVWF  xD2
4A06:  MOVLW  FA
4A08:  MOVWF  xD7
4A0A:  CALL   0FF8
4A0E:  DECFSZ xD2,F
4A10:  BRA    4A06
....................    _motor_on; 
4A12:  BCF    F8A.4
....................    } 
.................... _encoder_st = input(_encoder); 
4A14:  BCF    xA6.1
4A16:  BTFSC  F81.7
4A18:  BSF    xA6.1
....................    delay_ms(100); 
4A1A:  MOVLW  64
4A1C:  MOVWF  xD7
4A1E:  CALL   0FF8
.................... enable_interrupts(GLOBAL); 
4A22:  MOVLW  C0
4A24:  IORWF  FF2,F
.................... enable_interrupts(INT_RB); 
4A26:  BSF    FF2.3
.................... enable_interrupts(INT_Timer2); 
4A28:  BSF    F9D.1
.................... setup_timer_2(T2_DIV_BY_16, 255, 16); 
4A2A:  MOVLW  78
4A2C:  IORLW  06
4A2E:  MOVWF  FCA
4A30:  MOVLW  FF
4A32:  MOVWF  FCB
....................  
.................... //set_tris_b(0b11110111); 
.................... //enable_interrupts(INT_RB); 
....................   } 
....................  }else{ 
4A34:  BRA    4B44
.................... _rr: 
.................... _on_fl = 0; 
4A36:  BCF    xA6.2
.................... _noz_fl = 0; 
4A38:  BCF    xA6.0
.................... _motor_off; 
4A3A:  BSF    F8A.4
.................... _sov1_off; 
4A3C:  BSF    F8A.5
.................... _sov2_off; 
4A3E:  BSF    F8A.6
.................... scan_keypad(); 
4A40:  CALL   28B0
.................... //if(_key1 > 0){ 
.................... //_liters = (int32)_key1; 
.................... //_disp2(); 
.................... //_disp_data(); 
.................... //} 
.................... if(_key1 != 0){ 
4A44:  MOVF   xA5,F
4A46:  BTFSC  FD8.2
4A48:  BRA    4B3A
.................... _key_p: 
.................... //if(_key1 == _f4){ 
.................... //_get_slip(); 
.................... //delay_ms(1000); 
.................... //} 
....................    if(_key1 > 16 && _key1 < 22 ){ 
4A4A:  MOVF   xA5,W
4A4C:  SUBLW  10
4A4E:  BC    4A5E
4A50:  MOVF   xA5,W
4A52:  SUBLW  15
4A54:  BNC   4A5E
....................       if(!_oil_fl)_price_enter(); 
4A56:  BTFSC  xA6.6
4A58:  BRA    4A5E
4A5A:  CALL   2A92
....................    } 
....................   if(_key1 > 0 && _key1 < 10)  _price_set(); 
4A5E:  MOVF   xA5,F
4A60:  BZ    4A6C
4A62:  MOVF   xA5,W
4A64:  SUBLW  09
4A66:  BNC   4A6C
4A68:  CALL   2BB2
....................   if(_key1 == _p) _price_enter(); 
4A6C:  MOVF   39,W
4A6E:  SUBWF  xA5,W
4A70:  BNZ   4A76
4A72:  CALL   2A92
....................  
....................   if(_key1 == 10){ 
4A76:  MOVF   xA5,W
4A78:  SUBLW  0A
4A7A:  BNZ   4A96
....................    _buz_on; 
4A7C:  BCF    F8A.3
....................    _get_slip();///////////////////////////////////PRINTER 
4A7E:  GOTO   30F4
....................    _buz_off; 
4A82:  BSF    F8A.3
....................    delay_ms(1000); 
4A84:  MOVLW  04
4A86:  MOVWF  xD2
4A88:  MOVLW  FA
4A8A:  MOVWF  xD7
4A8C:  CALL   0FF8
4A90:  DECFSZ xD2,F
4A92:  BRA    4A88
....................    _key1 = 0; 
4A94:  CLRF   xA5
....................   } 
....................  
....................    if(_key1 == _r ){ 
4A96:  MOVF   3D,W
4A98:  SUBWF  xA5,W
4A9A:  BNZ   4AD6
....................    _var1 =_clear; 
4A9C:  MOVLW  0F
4A9E:  MOVWF  xA4
....................    _all_disp(); 
4AA0:  CALL   0578
....................    delay_ms(100); 
4AA4:  MOVLW  64
4AA6:  MOVWF  xD7
4AA8:  CALL   0FF8
....................    _d9  = 12; 
4AAC:  MOVLW  0C
4AAE:  MOVWF  x95
....................    _d10 = 5; 
4AB0:  MOVLW  05
4AB2:  MOVWF  x9C
.................... //   _d19 = 0; 
.................... //   _d20 = 0; 
.................... //   _d21 = 0; 
.................... //   _d22 = 0; 
....................    _disp_data(); 
4AB4:  CALL   1048
....................    _main_code_enter(); 
4AB8:  GOTO   3654
....................    if(_code_block > 0)_code_id_enter(); 
4ABC:  MOVF   23,F
4ABE:  BZ    4AC4
4AC0:  GOTO   3FD4
....................    delay_ms(1000); 
4AC4:  MOVLW  04
4AC6:  MOVWF  xD2
4AC8:  MOVLW  FA
4ACA:  MOVWF  xD7
4ACC:  CALL   0FF8
4AD0:  DECFSZ xD2,F
4AD2:  BRA    4AC8
....................    goto _kp; 
4AD4:  BRA    4B3A
....................    } 
....................    _num_press(); 
4AD6:  CALL   2BA0
....................    if(_num > 0){ 
4ADA:  MOVF   40,F
4ADC:  BZ    4AE4
....................    _code_val = 0; 
4ADE:  CLRF   41
....................    _price_set(); 
4AE0:  CALL   2BB2
....................    } 
....................  
....................   if(_key1 == _l){ 
4AE4:  MOVF   3A,W
4AE6:  SUBWF  xA5,W
4AE8:  BNZ   4AF4
....................   _deci_fl = 0; 
4AEA:  BCF    26.2
....................   _code_val = 0; 
4AEC:  CLRF   41
....................   _petrol_set(); 
4AEE:  GOTO   41DC
....................   _oil_fl = 0; 
4AF2:  BCF    xA6.6
....................   } 
....................     if(_key1 == _t ){ 
4AF4:  MOVF   3C,W
4AF6:  SUBWF  xA5,W
4AF8:  BNZ   4B06
....................    _var1 =_clear; 
4AFA:  MOVLW  0F
4AFC:  MOVWF  xA4
....................    _all_disp(); 
4AFE:  CALL   0578
....................    _totel_disp(); 
4B02:  GOTO   42FE
....................    } 
....................  
....................    if(_key1 == _r && _skip_var == 1){ 
4B06:  MOVF   3D,W
4B08:  SUBWF  xA5,W
4B0A:  BNZ   4B1A
4B0C:  DECFSZ 25,W
4B0E:  BRA    4B1A
....................    _skip_fl = 1; 
4B10:  BSF    26.3
....................    _var1 =_clear; 
4B12:  MOVLW  0F
4B14:  MOVWF  xA4
....................    _all_disp(); 
4B16:  CALL   0578
....................    } 
....................  
....................    if(_key1 == _C){ 
4B1A:  MOVF   3B,W
4B1C:  SUBWF  xA5,W
4B1E:  BNZ   4B32
....................    _c_rst: 
....................    _petrol = 0; 
4B20:  CLRF   5B
4B22:  CLRF   5A
4B24:  CLRF   59
4B26:  CLRF   58
....................    _price = 0; 
4B28:  CLRF   57
4B2A:  CLRF   56
4B2C:  CLRF   55
4B2E:  CLRF   54
....................    goto _rset; 
4B30:  BRA    48B0
....................    } 
....................  
.................... //   if(_noz_pad == 1){ 
.................... //      if(_key1 == _r)goto _of_pad; 
.................... //   } 
....................  
....................    if (_key1 == _p ) goto _key_p; 
4B32:  MOVF   39,W
4B34:  SUBWF  xA5,W
4B36:  BNZ   4B3A
4B38:  BRA    4A4A
.................... } 
.................... _kp: 
.................... delay_ms(50); 
4B3A:  MOVLW  32
4B3C:  MOVWF  xD7
4B3E:  CALL   0FF8
.................... output_toggle(_led); 
4B42:  BTG    F8A.2
....................  } 
....................  }// #END while(TRUE) 
4B44:  BRA    48BE
.................... }// #END main() 
....................  
....................  
....................  
....................  
....................  
....................  
.................... //****************************************************************************// 
.................... //********************************* END **************************************// 
.................... //****************************************************************************// 
....................  
4B46:  SLEEP 

Configuration Fuses:
   Word  1: 2200   HS NOOSCSEN
   Word  2: 0E0E   BROWNOUT WDT128 NOWDT BORV20 PUT
   Word  3: 0100   CCP2C1
   Word  4: 0081   STVREN NODEBUG NOLVP
   Word  5: C000   PROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTB NOWRTC
   Word  7: 400F   NOEBTR NOEBTRB
